;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("company" include nil nil [1673 1691])
            ("rx" include nil nil [1692 1705])
            ("cl-lib" include nil nil [1706 1723])
            ("company-c-headers" customgroup (:user-visible-flag t) nil [1725 1823])
            ("company-c-headers-path-system" variable (:default-value (quote ("/usr/include/" "/usr/local/include/"))) nil [1825 2131])
            ("company-c-headers-path-user" variable (:default-value (quote ("."))) nil [2133 2477])
            ("company-c-headers-include-declaration" variable (:default-value (rx line-start "#" (zero-or-more blank) (or "include" "import") (one-or-more blank) (submatch (in "<\"") (zero-or-more (not (in ">\"")))))) nil [2479 2741])
            ("company-c-headers-modes" variable (:default-value (\` ((c-mode \, (rx ".h" line-end)) (c++-mode \, (rx (or (: line-start (one-or-more (in "A-Za-z0-9_"))) (or ".h" ".hpp" ".hxx" ".hh")) line-end)) (objc-mode \, (rx ".h" line-end))))) nil [2743 3104])
            ("call-if-function" function (:arguments ("path")) nil [3106 3293])
            ("company-c-headers--candidates-for" function (:arguments ("prefix" "dir")) nil [3295 4844])
            ("company-c-headers--candidates" function (:arguments ("prefix")) nil [4846 5535])
            ("company-c-headers--meta" function (:arguments ("candidate")) nil [5537 5707])
            ("company-c-headers--location" function (:arguments ("candidate")) nil [5709 5968])
            ("company-c-headers" function
               (:user-visible-flag t
                :arguments ("command" "arg" "ignored"))
                nil [5985 7498])
            ("company-c-headers" package nil nil [7500 7528]))          
      :file "company-c-headers.el"
      :pointmax 7565
      :fsize 7564
      :lastmodtime '(22848 49137 0 0)
      :unmatched-syntax nil))
  :file "!Users!ric!.emacs.d!elpa!company-c-headers-20170531.1330!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
