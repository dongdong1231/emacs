;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("company" include nil nil [2055 2073])
            ("company-statistics" customgroup (:user-visible-flag t) nil [2075 2186])
            ("company-statistics-size" variable (:default-value 400) nil [2188 2469])
            ("company-statistics-file" variable (:default-value (concat user-emacs-directory "company-statistics-cache.el")) nil [2471 2627])
            ("company-statistics-auto-save" variable (:default-value t) nil [2629 2743])
            ("company-statistics-auto-restore" variable (:default-value t) nil [2745 2906])
            ("company-statistics-capture-context" variable (:default-value (function company-statistics-capture-context-heavy)) nil [2908 3165])
            ("company-statistics-score-change" variable (:default-value (function company-statistics-score-change-heavy)) nil [3167 3501])
            ("company-statistics-score-calc" variable (:default-value (function company-statistics-score-calc-heavy)) nil [3503 3760])
            ("company-statistics--scores" variable nil nil [3793 3895])
            ("company-statistics--log" variable nil nil [3897 3979])
            ("company-statistics--index" variable nil nil [3981 4043])
            ("company-statistics--init" function nil nil [4045 4332])
            ("company-statistics--initialized-p" function nil nil [4334 4422])
            ("company-statistics--log-resize" function (:arguments ("_option" "new-size")) nil [4424 5787])
            ("company-statistics--save" function nil nil [5789 6333])
            ("company-statistics--maybe-save" function nil nil [6335 6500])
            ("company-statistics--load" function nil nil [6502 6617])
            ("company-statistics-score-change-light" function (:arguments ("_cand")) nil [6692 6840])
            ("company-statistics-score-calc-light" function (:arguments ("cand")) nil [6877 7228])
            ("company-statistics--context" variable nil nil [7230 7344])
            ("company-statistics--last-keyword" function nil nil [7346 8164])
            ("company-statistics--parent-symbol" function nil nil [8166 8648])
            ("company-statistics--file-name" function nil nil [8650 8787])
            ("company-statistics-capture-context-heavy" function (:arguments ("_manual")) nil [8789 9203])
            ("company-statistics-score-change-heavy" function (:arguments ("_cand")) nil [9205 9871])
            ("company-statistics-score-calc-heavy" function (:arguments ("cand")) nil [9873 10729])
            ("company-statistics--alist-update" function (:arguments ("alist" "updates" "merger" "filter")) nil [10809 11679])
            ("company-statistics--scores-add" function (:arguments ("cand" "score-updates")) nil [11681 11937])
            ("company-statistics--log-revert" function (:arguments ("index")) nil [11939 12715])
            ("company-statistics--log-store" function (:arguments ("result" "score-updates")) nil [12717 13034])
            ("company-statistics--start" function (:arguments ("manual")) nil [13104 13200])
            ("company-statistics--finished" function (:arguments ("result")) nil [13202 13571])
            ("company-sort-by-statistics" function (:arguments ("candidates")) nil [13573 13962])
            ("define-minor-mode" code nil nil [13979 15454])
            ("add-hook" code nil nil [15456 15515])
            ("company-statistics" package nil nil [15517 15546]))          
      :file "company-statistics.el"
      :pointmax 15583
      :fsize 15582
      :lastmodtime '(22848 49138 0 0)
      :unmatched-syntax nil))
  :file "!Users!ric!.emacs.d!elpa!company-statistics-20170210.1133!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
