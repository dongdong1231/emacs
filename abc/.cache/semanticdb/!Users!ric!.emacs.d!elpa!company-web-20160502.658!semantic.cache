;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("company-web" include nil nil [898 920])
            ("company-web-html-emmet-enable" variable (:default-value t) nil [922 1068])
            ("company-web-html-emmet-enable" variable (:default-value t) nil [1070 1216])
            ("company-web-html-emmet-preview-enable-advice" variable (:default-value t) nil [1218 1540])
            ("company-web-html-get-tag-re" variable
               (:constant-flag t
                :default-value (concat "<[[:space:]]*\\(" company-web-selector "+\\)[[:space:]]+"))
                nil [1556 1687])
            ("company-web-html-get-attribute-re" variable
               (:constant-flag t
                :default-value (concat "[^[:alnum:]-]\\(" company-web-selector "+\\)="))
                nil [1689 1821])
            ("company-web-html-current-tag" function nil nil [1823 2008])
            ("company-web-html-current-attribute" function nil nil [2010 2219])
            ("company-web-html-tag-regexp" variable
               (:constant-flag t
                :default-value (concat "<[[:space:]]*\\(" company-web-selector "*\\)"))
                nil [2221 2382])
            ("company-web-html-attribute-regexp" variable
               (:constant-flag t
                :default-value (concat "<[[:space:]]*" company-web-selector "[^>]*[[:space:]]+\\(.*\\)"))
                nil [2384 2554])
            ("company-web-html-value-regexp" variable
               (:constant-flag t
                :default-value (concat "<[^>]+\\w=[\"']\\(?:[^\"']+[ ;:]\\|\\)" "\\([^\"']*\\)"))
                nil [2556 2749])
            ("company-web-html-emmet-tag-separator" variable
               (:constant-flag t
                :default-value "\\(?:^\\|[	( +>]+\\)")
                nil [2766 2839])
            ("company-web-html-emmet-tag-regexp" variable
               (:constant-flag t
                :default-value (concat company-web-html-emmet-tag-separator "\\(" company-web-selector "*\\)"))
                nil [2841 3026])
            ("company-web-html-emmet-class-regexp" variable
               (:constant-flag t
                :default-value (concat company-web-html-emmet-tag-separator "\\(" company-web-selector "+\\|\\)" "/?" "[#.[:alnum:]-]*" "[.]\\(" company-web-selector "*\\)"))
                nil [3028 3441])
            ("company-web-html-emmet-id-regexp" variable
               (:constant-flag t
                :default-value (concat company-web-html-emmet-tag-separator "\\(" company-web-selector "+\\|\\)" "/?" "[#.[:alnum:]-]*" "[#]\\(" company-web-selector "*\\)"))
                nil [3443 3853])
            ("company-web-html-emmet-attr-regexp" variable
               (:constant-flag t
                :default-value (concat company-web-html-emmet-tag-separator "\\(" company-web-selector "+\\)" "/?" "[^	 +>]*?" "\\[" "\\(?:" company-web-selector "+=\"[^\"]*\"\\|\\)+" "\\(" company-web-selector "*\\)"))
                nil [3855 4443])
            ("company-web-html-emmet-value-regexp" variable
               (:constant-flag t
                :default-value (concat company-web-html-emmet-tag-separator "\\(" company-web-selector "+\\)" "/?" "[^	 +>]*?" "\\[" "\\(?:" company-web-selector "+=\"[^\"]*\"\\|\\)+" "\\(" company-web-selector "+\\)" "=\"\\(.*\\)"))
                nil [4445 5095])
            ("company-web-html-emmet-grab" function nil nil [5097 5521])
            ("company-web-html-emmet-candidates" function nil nil [5523 7001])
            ("emmet-preview-accept" function (:arguments ("around" "emmet-with-company-accept")) nil [7003 7329])
            ("emmet-preview-abort" function (:arguments ("around" "emmet-with-company-abort")) nil [7331 7629])
            ("company-web-html-emmet-doc" function (:arguments ("arg")) nil [7631 8920])
            ("company-web-html" function
               (:user-visible-flag t
                :arguments ("command" "arg" "ignored"))
                nil [8937 10820])
            ("company-web-html" package nil nil [10822 10849]))          
      :file "company-web-html.el"
      :pointmax 10884
      :fsize 10883
      :lastmodtime '(22868 59024 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :file "company-web.el"
      :fsize 12566
      :lastmodtime '(22868 59024 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("company-web" include nil nil [899 921])
            ("company-web-jade-get-tag-re" variable
               (:constant-flag t
                :default-value (concat "^[	 ]*\\(" company-web-selector "+\\)[.#(]"))
                nil [923 1054])
            ("company-web-jade-get-attribute-re" variable
               (:constant-flag t
                :default-value (concat "[^[:alnum:]-]\\(" company-web-selector "+\\) *="))
                nil [1056 1197])
            ("company-web-jade-current-tag" function nil nil [1199 1384])
            ("company-web-jade-current-attribute" function nil nil [1386 1595])
            ("company-web-jade-id-regexp" variable
               (:constant-flag t
                :default-value (concat "^ *\\(" company-web-selector "+\\|\\)" "[.[:alnum:]-]*" "#\\(" company-web-selector "*\\|\\)"))
                nil [1597 1912])
            ("company-web-jade-class-regexp" variable
               (:constant-flag t
                :default-value (concat "^ *\\(" company-web-selector "+\\|\\)" "[#.[:alnum:]-]*" "[.]\\(" company-web-selector "*\\)"))
                nil [1914 2278])
            ("company-web-jade-tag-regexp" variable
               (:constant-flag t
                :default-value (concat "^[	 ]*\\(" company-web-selector "*\\)"))
                nil [2280 2415])
            ("company-web-jade-attribute-regexp" variable
               (:constant-flag t
                :default-value (concat "\\(?:,\\|(\\)[ ]*\\(.*\\)"))
                nil [2417 2550])
            ("company-web-jade-value-regexp" variable
               (:constant-flag t
                :default-value (concat "\\w *= *[\"']\\(?:[^\"']+[ ]\\|\\)" "\\([^\"']*\\)"))
                nil [2552 2741])
            ("company-web-jade" function
               (:user-visible-flag t
                :arguments ("command" "arg" "ignored"))
                nil [2758 5239])
            ("company-web-jade" package nil nil [5241 5268]))          
      :file "company-web-jade.el"
      :pointmax 5303
      :fsize 5302
      :lastmodtime '(22868 59024 0 0)
      :unmatched-syntax nil))
  :file "!Users!ric!.emacs.d!elpa!company-web-20160502.658!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
