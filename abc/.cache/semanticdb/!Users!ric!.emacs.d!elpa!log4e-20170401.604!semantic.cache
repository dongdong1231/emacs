;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags nil
      :file "log4e-autoloads.el"
      :pointmax 305
      :fsize 697
      :lastmodtime '(22907 21897 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1992 2005])
            ("rx" include nil nil [2007 2020])
            ("log4e-log-level-alist" variable
               (:constant-flag t
                :default-value (quote ((fatal . 6) (error . 5) (warn . 4) (info . 3) (debug . 2) (trace . 1))))
                nil [2023 2330])
            ("log4e-default-logging-function-name-alist" variable
               (:constant-flag t
                :default-value (quote ((fatal . "log-fatal") (error . "log-error") (warn . "log-warn") (info . "log-info") (debug . "log-debug") (trace . "log-trace"))))
                nil [2332 2834])
            ("log4e--def-symmaker" function (:arguments ("symnm")) nil [2837 3019])
            ("log4e--def-symmaker" code nil nil [3021 3055])
            ("log4e--def-symmaker" code nil nil [3056 3090])
            ("log4e--def-symmaker" code nil nil [3091 3127])
            ("log4e--def-symmaker" code nil nil [3128 3165])
            ("log4e--def-symmaker" code nil nil [3166 3199])
            ("log4e--def-symmaker" code nil nil [3200 3233])
            ("log4e--def-symmaker" code nil nil [3234 3272])
            ("log4e--def-symmaker" code nil nil [3273 3313])
            ("log4e--def-symmaker" code nil nil [3314 3358])
            ("log4e--def-symmaker" code nil nil [3359 3402])
            ("log4e--def-level-logger" function (:arguments ("prefix" "suffix" "level")) nil [3404 6017])
            ("log4e--logging-level-p" function (:arguments ("minlevel" "maxlevel" "currlevel")) nil [6019 6469])
            ("log4e--get-or-create-log-buffer" function (:arguments ("buffnm" "codesys")) nil [6471 6764])
            ("log4e--regexp-msg-format" variable (:default-value (rx-to-string (\` (and "%" (* (any "+#-0")) (* (any "0-9")) (32 "." (+ (any "0-9"))) (any "a-zA-Z"))))) nil [6766 7030])
            ("log4e--insert-log" function (:arguments ("logtmpl" "timetmpl" "level" "msg" "msgargs" "propertize-p")) nil [7032 8686])
            ("log4e--current-msg-buffer" variable nil nil [8688 8726])
            ("log4e--logging" function (:arguments ("buffnm" "codsys" "logtmpl" "timetmpl" "minlevel" "maxlevel" "logging-p" "level" "msg" "msgargs")) nil [8808 9955])
            ("log4e--get-current-log-line-level" function nil nil [9957 10090])
            ("log4e--clear-log" function (:arguments ("buffnm")) nil [10176 10325])
            ("log4e--open-log" function (:arguments ("buffnm")) nil [10411 10661])
            ("log4e--open-log-if-debug" function (:arguments ("buffnm" "dbg")) nil [10747 10834])
            ("log4e:deflogger" function (:arguments ("prefix" "msgtmpl" "timetmpl" "log-function-name-custom-alist")) nil [11115 21631])
            ("define-derived-mode" code nil nil [21649 21906])
            ("log4e:next-log" function (:user-visible-flag t) nil [21908 22171])
            ("log4e:previous-log" function (:user-visible-flag t) nil [22173 22445])
            ("log4e:insert-start-log-quickly" function (:user-visible-flag t) nil [22462 24772])
            ("log4e" package nil nil [24775 24791]))          
      :file "log4e.el"
      :pointmax 24815
      :fsize 24814
      :lastmodtime '(22907 21896 0 0)
      :unmatched-syntax '((close-paren 2005 . 2006) (symbol 1974 . 1991) (open-paren 1973 . 1974))))
  :file "!Users!ric!.emacs.d!elpa!log4e-20170401.604!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
