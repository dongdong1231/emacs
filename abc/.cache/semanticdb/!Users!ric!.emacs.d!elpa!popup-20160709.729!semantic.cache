;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("define-package" code nil nil [32 190]))          
      :file "popup-pkg.el"
      :pointmax 191
      :fsize 190
      :lastmodtime '(22842 30363 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1129 1146])
            ("popup-version" variable
               (:constant-flag t
                :default-value "0.5.3")
                nil [1148 1180])
            ("popup-calculate-max-width" function (:arguments ("max-width")) nil [1200 1476])
            ("popup-use-optimized-column-computation" variable (:default-value t) nil [1478 1619])
            ("popup-aif" function (:arguments ("test" "then" "else")) nil [1621 1753])
            ("popup-awhen" function (:arguments ("test" "body")) nil [1755 1882])
            ("popup-x-to-string" function (:arguments ("x")) nil [1884 2166])
            ("popup-substring-by-width" function (:arguments ("string" "width")) nil [2168 2715])
            ("popup-fill-string" function (:arguments ("string" "width" "max-width" "justify" "squeeze")) nil [2717 4802])
            ("popup-save-buffer-state" function (:arguments ("body")) nil [4804 5095])
            ("popup-vertical-motion" function (:arguments ("column" "direction")) nil [5097 5354])
            ("popup-last-line-of-buffer-p" function nil nil [5356 5517])
            ("popup-lookup-key-by-event" function (:arguments ("function" "event")) nil [5519 5903])
            ("popup" customgroup (:user-visible-flag t) nil [5918 6004])
            ("popup-face" variable
               (:default-value (quote ((t (:inherit default :background "lightgray" :foreground "black"))))
                :type "face")
                nil [6006 6134])
            ("popup-summary-face" variable
               (:default-value (quote ((t (:inherit popup-face :foreground "dimgray"))))
                :type "face")
                nil [6136 6261])
            ("popup-scroll-bar-foreground-face" variable
               (:default-value (quote ((t (:background "black"))))
                :type "face")
                nil [6263 6388])
            ("popup-scroll-bar-background-face" variable
               (:default-value (quote ((t (:background "gray"))))
                :type "face")
                nil [6390 6514])
            ("popup-instances" variable nil nil [6516 6565])
            ("popup-scroll-bar-foreground-char" variable (:default-value (propertize " " (quote face) (quote popup-scroll-bar-foreground-face))) nil [6567 6708])
            ("popup-scroll-bar-background-char" variable (:default-value (propertize " " (quote face) (quote popup-scroll-bar-background-face))) nil [6710 6851])
            ("cl-defstruct" code nil nil [6853 7162])
            ("popup-item-propertize" function (:arguments ("item" "properties")) nil [7164 7526])
            ("popup-item-property" function (:arguments ("item" "property")) nil [7528 7719])
            ("cl-defun" code nil nil [7721 8535])
            ("popup-item-value" function (:arguments ("item")) nil [8537 8619])
            ("popup-item-value-or-self" function (:arguments ("item")) nil [8620 8702])
            ("popup-item-face" function (:arguments ("item")) nil [8703 8790])
            ("popup-item-mouse-face" function (:arguments ("item")) nil [8791 8884])
            ("popup-item-selection-face" function (:arguments ("item")) nil [8885 8976])
            ("popup-item-document" function (:arguments ("item")) nil [8977 9062])
            ("popup-item-summary" function (:arguments ("item")) nil [9063 9147])
            ("popup-item-symbol" function (:arguments ("item")) nil [9148 9231])
            ("popup-item-sublist" function (:arguments ("item")) nil [9232 9316])
            ("popup-item-documentation" function (:arguments ("item")) nil [9318 9498])
            ("popup-item-show-help-1" function (:arguments ("item")) nil [9500 9790])
            ("popup-item-show-help-with-event-loop" function (:arguments ("item")) nil [9792 10385])
            ("popup-item-show-help" function (:arguments ("item" "persist")) nil [10387 10815])
            ("popup-set-list" function (:arguments ("popup" "list")) nil [10817 10968])
            ("popup-set-filtered-list" function (:arguments ("popup" "list")) nil [10970 11223])
            ("popup-selected-item" function (:arguments ("popup")) nil [11225 11308])
            ("popup-selected-line" function (:arguments ("popup")) nil [11310 11397])
            ("popup-line-overlay" function (:arguments ("popup" "line")) nil [11399 11475])
            ("popup-selected-line-overlay" function (:arguments ("popup")) nil [11477 11577])
            ("popup-hide-line" function (:arguments ("popup" "line")) nil [11579 11750])
            ("popup-line-hidden-p" function (:arguments ("popup" "line")) nil [11752 11948])
            ("cl-defun" code nil nil [11950 14048])
            ("cl-defun" code nil nil [14050 15461])
            ("popup-live-p" function (:arguments ("popup")) nil [15463 15568])
            ("popup-child-point" function (:arguments ("popup" "offset")) nil [15570 15722])
            ("popup-calculate-direction" function (:arguments ("height" "row")) nil [15724 16364])
            ("cl-defun" code nil nil [16366 24279])
            ("popup-delete" function (:arguments ("popup")) nil [24281 24857])
            ("popup-draw" function (:arguments ("popup")) nil [24859 29973])
            ("popup-hide" function (:arguments ("popup")) nil [29975 30199])
            ("popup-hidden-p" function (:arguments ("popup")) nil [30201 30450])
            ("popup-jump" function (:arguments ("popup" "cursor")) nil [30452 30855])
            ("popup-select" function (:arguments ("popup" "i")) nil [30857 31083])
            ("popup-next" function (:arguments ("popup")) nil [31085 31686])
            ("popup-previous" function (:arguments ("popup")) nil [31688 32275])
            ("popup-page-next" function (:arguments ("popup")) nil [32277 32461])
            ("popup-page-previous" function (:arguments ("popup")) nil [32463 32657])
            ("popup-scroll-down" function (:arguments ("popup" "n")) nil [32659 32998])
            ("popup-scroll-up" function (:arguments ("popup" "n")) nil [33000 33284])
            ("popup-isearch-match" variable
               (:default-value (quote ((t (:inherit default :background "sky blue"))))
                :type "face")
                nil [33319 33445])
            ("popup-isearch-cursor-color" variable (:default-value "blue") nil [33447 33489])
            ("popup-isearch-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "" (quote popup-isearch-cancel)) (define-key map "" (quote popup-isearch-close)) (define-key map [left] (quote popup-isearch-close)) (define-key map "" (quote popup-isearch-delete)) (define-key map (kbd "DEL") (quote popup-isearch-delete)) (define-key map (kbd "C-y") (quote popup-isearch-yank)) map)) nil [33491 33945])
            ("popup-menu-show-quick-help-function" variable (:default-value (quote popup-menu-show-quick-help)) nil [33947 34078])
            ("popup-isearch-regexp-builder-function" variable (:default-value (function regexp-quote)) nil [34080 34336])
            ("popup-isearch-char-p" function (:arguments ("char")) nil [34338 34441])
            ("popup-isearch-filter-list" function (:arguments ("pattern" "list")) nil [34443 35345])
            ("popup-isearch-prompt" function (:arguments ("popup" "pattern")) nil [35347 35558])
            ("popup-isearch-update" function (:arguments ("popup" "filter" "pattern" "callback")) nil [35560 35917])
            ("cl-defun" code nil nil [35919 38943])
            ("popup-tip-face" variable
               (:default-value (quote ((t (:background "khaki1" :foreground "black"))))
                :type "face")
                nil [38963 39079])
            ("popup-tip-max-width" variable (:default-value 80) nil [39081 39112])
            ("cl-defun" code nil nil [39114 41738])
            ("popup-menu-face" variable
               (:default-value (quote ((t (:inherit popup-face))))
                :type "face")
                nil [41759 41856])
            ("popup-menu-mouse-face" variable
               (:default-value (quote ((t (:background "blue" :foreground "white"))))
                :type "face")
                nil [41858 41980])
            ("popup-menu-selection-face" variable
               (:default-value (quote ((t (:inherit default :background "steelblue" :foreground "white"))))
                :type "face")
                nil [41982 42140])
            ("popup-menu-summary-face" variable
               (:default-value (quote ((t (:inherit popup-summary-face))))
                :type "face")
                nil [42142 42258])
            ("popup-menu-show-tip-function" variable (:default-value (quote popup-tip)) nil [42260 42379])
            ("popup-menu-show-help" function (:arguments ("menu" "persist" "item")) nil [42381 42509])
            ("popup-menu-documentation" function (:arguments ("menu" "item")) nil [42511 42631])
            ("popup-menu-show-quick-help" function (:arguments ("menu" "item" "args")) nil [42633 43531])
            ("popup-menu-item-of-mouse-event" function (:arguments ("event")) nil [43533 43861])
            ("popup-menu-read-key-sequence" function (:arguments ("keymap" "prompt" "timeout")) nil [43863 45187])
            ("popup-menu-fallback" function (:arguments ("event" "default")) nil [45189 45232])
            ("cl-defun" code nil nil [45234 49039])
            ("popup-preferred-width" function (:arguments ("list")) nil [49041 49551])
            ("popup-menu-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "" (quote popup-select)) (define-key map "" (quote popup-open)) (define-key map [right] (quote popup-open)) (define-key map "" (quote popup-close)) (define-key map [left] (quote popup-close)) (define-key map "" (quote popup-next)) (define-key map [down] (quote popup-next)) (define-key map "" (quote popup-previous)) (define-key map [up] (quote popup-previous)) (define-key map [next] (quote popup-page-next)) (define-key map [prior] (quote popup-page-previous)) (define-key map [f1] (quote popup-help)) (define-key map (kbd "") (quote popup-help)) (define-key map "" (quote popup-isearch)) (define-key map [mouse-1] (quote popup-select)) (define-key map [mouse-4] (quote popup-previous)) (define-key map [mouse-5] (quote popup-next)) map)) nil [49553 50430])
            ("cl-defun" code nil nil [50432 54832])
            ("popup-cascade-menu" function (:arguments ("list" "args")) nil [54834 55417])
            ("popup" package nil nil [55419 55435]))          
      :file "popup.el"
      :pointmax 55459
      :fsize 55458
      :lastmodtime '(22842 30363 0 0)
      :unmatched-syntax nil))
  :file "!Users!ric!.emacs.d!elpa!popup-20160709.729!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
