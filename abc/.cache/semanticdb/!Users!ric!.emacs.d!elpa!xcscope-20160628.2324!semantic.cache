;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags nil
      :file "xcscope-autoloads.el"
      :pointmax 309
      :fsize 752
      :lastmodtime '(22879 22603 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("easymenu" include nil nil [22036 22055])
            ("cscope" customgroup (:user-visible-flag t) nil [22058 22674])
            ("cscope-database-directory-prompt" variable
               (:constant-flag t
                :default-value "Database directory")
                nil [22676 22740])
            ("cscope-running-in-xemacs" variable
               (:constant-flag t
                :default-value (string-match "XEmacs\\|Lucid" emacs-version))
                nil [22742 22823])
            ("cscope-option-include-directories" variable nil nil [22825 23041])
            ("cscope-option-disable-compression" variable nil nil [23043 23191])
            ("cscope-option-kernel-mode" variable nil nil [23193 23385])
            ("cscope-option-use-inverted-index" variable nil nil [23387 23616])
            ("cscope-option-do-not-update-database" variable nil nil [23618 23907])
            ("cscope-option-other" variable nil nil [23909 24234])
            ("cscope-database-regexps" variable nil nil [24237 29870])
            ("cscope-name-line-width" variable (:default-value -30) nil [29871 30082])
            ("cscope-truncate-lines" variable (:default-value truncate-lines) nil [30085 30367])
            ("cscope-display-times" variable (:default-value t) nil [30370 30577])
            ("cscope-max-cscope-buffer-size" variable (:default-value 1000000) nil [30579 30827])
            ("cscope-program" variable (:default-value "cscope") nil [30829 31351])
            ("cscope-index-file" variable (:default-value "cscope.files") nil [31354 31474])
            ("cscope-database-file" variable (:default-value "cscope.out") nil [31477 31597])
            ("cscope-edit-single-match" variable (:default-value t) nil [31600 31744])
            ("cscope-display-cscope-buffer" variable (:default-value t) nil [31747 31899])
            ("cscope-stop-at-first-match-dir" variable nil nil [31902 32322])
            ("cscope-use-relative-paths" variable (:default-value t) nil [32325 32919])
            ("cscope-index-recursively" variable (:default-value t) nil [32922 33272])
            ("cscope-indexer-ignored-directories" variable (:default-value (quote ("CVS" "RCS" "SCCS" ".git" ".hg" ".bzr" ".cdv" ".pc" ".svn" "_MTN" "_darcs" "_sgbak" "debian"))) nil [33274 34160])
            ("cscope-indexer-suffixes" variable (:default-value (quote ("*.[chly]" "*.[ch]xx" "*.[ch]pp" "*.cc" "*.hh"))) nil [34162 34565])
            ("cscope-symbol-chars" variable (:default-value "A-Za-z0-9_") nil [34567 34755])
            ("cscope-filename-chars" variable (:default-value "-.,/A-Za-z0-9_~!@#$%&+=\\\\") nil [34758 34965])
            ("cscope-allow-arrow-overlays" variable (:default-value t) nil [34968 35467])
            ("cscope-overlay-arrow-string" variable (:default-value "=>") nil [35470 35609])
            ("cscope-close-window-after-select" variable nil nil [35612 35786])
            ("cscope-minor-mode-hooks" variable nil nil [35789 35884])
            ("cscope-display-buffer-args" variable (:default-value (and (not cscope-running-in-xemacs) (>= emacs-major-version 24) (quote ((display-buffer-use-some-window (inhibit-same-window . t)))))) nil [35886 36378])
            ("cscope--get-cscope-program" function nil nil [36380 36922])
            ("cscope-display-buffer-wrapper" function (:arguments ("buffer")) nil [36925 37093])
            ("cscope-result-separator" variable
               (:constant-flag t
                :default-value "===============================================================================
")
                nil [37096 37325])
            ("cscope-file-separator-start-regex" variable
               (:constant-flag t
                :default-value "\\*\\*\\* .*:
")
                nil [37327 37579])
            ("cscope-file-separator-end-regex" variable
               (:constant-flag t
                :default-value "
")
                nil [37581 37875])
            ("cscope-use-face" variable (:default-value t) nil [37917 38044])
            ("cscope-file-face" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "yellow")) (((class color) (background light)) (:foreground "blue")) (t (:bold t))))
                :type "face")
                nil [38047 38305])
            ("cscope-function-face" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "cyan")) (((class color) (background light)) (:foreground "magenta")) (t (:bold t))))
                :type "face")
                nil [38308 38575])
            ("cscope-line-number-face" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "red")) (((class color) (background light)) (:foreground "red")) (t (:bold t))))
                :type "face")
                nil [38578 38841])
            ("cscope-mouse-face" variable
               (:default-value (quote ((((class color) (background dark)) (:foreground "white" :background "blue")) (((class color) (background light)) (:foreground "white" :background "blue")) (t (:bold nil))))
                :type "face")
                nil [38843 39148])
            ("cscope-separator-face" variable
               (:default-value (quote ((((class color) (background dark)) (:bold t :overline t :underline t :foreground "red")) (((class color) (background light)) (:bold t :overline t :underline t :foreground "red")) (t (:bold t))))
                :type "face")
                nil [39150 39479])
            ("cscope-start-file-process" variable
               (:constant-flag t
                :default-value (if cscope-running-in-xemacs (quote start-process) (quote start-file-process)))
                nil [39697 39946])
            ("cscope-list-entry-keymap" variable (:default-value (let ((map (make-keymap))) (suppress-keymap map) (if cscope-running-in-xemacs (progn (define-key map [button2] (quote cscope-mouse-select-entry-other-window)) (define-key map [(shift button2)] (quote cscope-mouse-select-entry-inplace))) (define-key map [mouse-2] (quote cscope-mouse-select-entry-other-window)) (define-key map [S-mouse-2] (quote cscope-mouse-select-entry-inplace))) (define-key map [return] (quote cscope-select-entry-other-window)) (define-key map "" (quote cscope-select-entry-other-window)) (define-key map (kbd "<S-return>") (quote cscope-select-entry-inplace)) (define-key map " " (quote cscope-show-entry-other-window)) (define-key map "o" (quote cscope-select-entry-one-window)) (define-key map "q" (quote cscope-bury-buffer)) (define-key map "Q" (quote cscope-quit)) (define-key map "h" (quote cscope-help)) (define-key map "?" (quote cscope-help)) (define-key map "s" (quote cscope-find-this-symbol)) (define-key map "d" (quote cscope-find-this-symbol)) (define-key map "g" (quote cscope-find-global-definition)) (define-key map "G" (quote cscope-find-global-definition-no-prompting)) (define-key map "=" (quote cscope-find-assignments-to-this-symbol)) (define-key map "c" (quote cscope-find-functions-calling-this-function)) (define-key map "C" (quote cscope-find-called-functions)) (define-key map "t" (quote cscope-find-this-text-string)) (define-key map "e" (quote cscope-find-egrep-pattern)) (define-key map "f" (quote cscope-find-this-file)) (define-key map "i" (quote cscope-find-files-including-file)) (define-key map (kbd "p") (quote cscope-history-backward-line)) (define-key map (kbd "M-p") (quote cscope-history-backward-file)) (define-key map (kbd "P") (quote cscope-history-backward-file)) (define-key map (kbd "M-P") (quote cscope-history-backward-result)) (define-key map (kbd "n") (quote cscope-history-forward-line)) (define-key map (kbd "M-n") (quote cscope-history-forward-file)) (define-key map (kbd "N") (quote cscope-history-forward-file)) (define-key map (kbd "M-N") (quote cscope-history-forward-result)) (define-key map (kbd "k") (quote cscope-history-kill-line)) (define-key map (kbd "M-k") (quote cscope-history-kill-file)) (define-key map (kbd "M-K") (quote cscope-history-kill-result)) (define-key map "u" (quote cscope-pop-mark)) (define-key map "r" (quote cscope-rerun-search-at-point)) (define-key map "a" (quote cscope-set-initial-directory)) (define-key map "A" (quote cscope-unset-initial-directory)) (define-key map "L" (quote cscope-create-list-of-files-to-index)) (define-key map "I" (quote cscope-index-files)) (define-key map "E" (quote cscope-edit-list-of-files-to-index)) (define-key map "W" (quote cscope-tell-user-about-directory)) (define-key map "S" (quote cscope-tell-user-about-directory)) (define-key map "T" (quote cscope-tell-user-about-directory)) (define-key map "D" (quote cscope-dired-directory)) map)) nil [39948 43324])
            ("cscope-list-entry-hook" variable nil nil [43327 43413])
            ("cscope-list-entry-mode" function nil nil [43416 43877])
            ("cscope-output-buffer-name" variable (:default-value "*cscope*") nil [43960 44047])
            ("cscope-info-buffer-name" variable (:default-value "*cscope-info*") nil [44050 44145])
            ("cscope-process" variable nil nil [44148 44207])
            ("make-variable-buffer-local" code nil nil [44208 44252])
            ("cscope-process-output" variable nil nil [44255 44345])
            ("make-variable-buffer-local" code nil nil [44346 44397])
            ("cscope-last-output-point" variable nil nil [44399 44730])
            ("cscope-command-args" variable nil nil [44733 44837])
            ("make-variable-buffer-local" code nil nil [44838 44887])
            ("cscope-start-directory" variable nil nil [44890 45076])
            ("make-variable-buffer-local" code nil nil [45077 45129])
            ("cscope-search-list" variable nil nil [45132 45453])
            ("make-variable-buffer-local" code nil nil [45454 45502])
            ("cscope-searched-dirs" variable nil nil [45505 45593])
            ("make-variable-buffer-local" code nil nil [45594 45644])
            ("cscope-last-file" variable nil nil [45646 45742])
            ("make-variable-buffer-local" code nil nil [45743 45789])
            ("cscope-start-time" variable nil nil [45792 45861])
            ("make-variable-buffer-local" code nil nil [45862 45909])
            ("cscope-first-match-point" variable nil nil [45912 45989])
            ("make-variable-buffer-local" code nil nil [45990 46044])
            ("cscope-output-start" variable nil nil [46047 46137])
            ("make-variable-buffer-local" code nil nil [46138 46187])
            ("cscope-matched-multiple" variable nil nil [46190 46273])
            ("make-variable-buffer-local" code nil nil [46274 46327])
            ("cscope-stop-at-first-match-dir-meta" variable nil nil [46330 46383])
            ("make-variable-buffer-local" code nil nil [46384 46449])
            ("cscope-fuzzy-search-range" variable (:default-value 1000) nil [46452 46599])
            ("cscope-previous-user-search" variable nil nil [46601 46839])
            ("cscope-marker" variable nil nil [46841 46915])
            ("cscope-marker-window" variable nil nil [46918 47107])
            ("cscope-marker-ring-length" variable (:default-value 16) nil [47110 47185])
            ("cscope-marker-ring" variable (:default-value (make-ring cscope-marker-ring-length)) nil [47188 47324])
            ("cscope-initial-directory" variable nil nil [47327 47457])
            ("cscope-prompt-minibuffer-history" variable nil nil [47459 47595])
            ("cscope-command-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "s" (quote cscope-find-this-symbol)) (define-key map "d" (quote cscope-find-global-definition)) (define-key map "g" (quote cscope-find-global-definition)) (define-key map "G" (quote cscope-find-global-definition-no-prompting)) (define-key map "=" (quote cscope-find-assignments-to-this-symbol)) (define-key map "c" (quote cscope-find-functions-calling-this-function)) (define-key map "C" (quote cscope-find-called-functions)) (define-key map "t" (quote cscope-find-this-text-string)) (define-key map "e" (quote cscope-find-egrep-pattern)) (define-key map "f" (quote cscope-find-this-file)) (define-key map "i" (quote cscope-find-files-including-file)) (define-key map "b" (quote cscope-display-buffer)) (define-key map "B" (quote cscope-display-buffer-toggle)) (define-key map "n" (quote cscope-history-forward-line-current-result)) (define-key map "N" (quote cscope-history-forward-file-current-result)) (define-key map "p" (quote cscope-history-backward-line-current-result)) (define-key map "P" (quote cscope-history-backward-file-current-result)) (define-key map "u" (quote cscope-pop-mark)) (define-key map "a" (quote cscope-set-initial-directory)) (define-key map "A" (quote cscope-unset-initial-directory)) (define-key map "L" (quote cscope-create-list-of-files-to-index)) (define-key map "I" (quote cscope-index-files)) (define-key map "E" (quote cscope-edit-list-of-files-to-index)) (define-key map "W" (quote cscope-tell-user-about-directory)) (define-key map "S" (quote cscope-tell-user-about-directory)) (define-key map "T" (quote cscope-tell-user-about-directory)) (define-key map "D" (quote cscope-dired-directory)) map)) nil [47678 49646])
            ("cscope-keymap-prefix" variable (:default-value "s") nil [49648 50428])
            ("cscope-minor-mode-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (if cscope-running-in-xemacs (progn (define-key map [(shift button3)] (quote cscope-mouse-search-again))) (define-key map [mouse-3] (quote cscope-mouse-popup-menu-or-search)) (define-key map [S-mouse-3] (quote cscope-mouse-search-again))) (define-key map cscope-keymap-prefix cscope-command-map) map)) nil [50430 51072])
            ("let" code nil nil [51074 56468])
            ("cscope-mouse-popup-menu-or-search" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [56471 56831])
            ("cscope-mouse-search-again" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [56833 57052])
            ("cscope-popup-menu" function (:arguments ("event")) nil [57054 57593])
            ("cscope-run-last-search-noprompt" function nil nil [57595 57911])
            ("cscope-insert-with-text-properties" function (:arguments ("text" "filename" "line-number" "line")) nil [58111 59004])
            ("if" code nil nil [59007 59698])
            ("cscope-show-entry-internal" function (:arguments ("navprops" "save-mark-p" "window" "arrow-p")) nil [59701 64257])
            ("cscope-find-this-separator-start" function (:arguments ("separator-regex" "from" "strict")) nil [64259 65259])
            ("cscope-find-next-separator-start" function (:arguments ("separator-regex" "from" "strict")) nil [65261 66152])
            ("cscope-get-history-bounds-this-result-internal" function (:arguments ("start-regex" "end-regex")) nil [66154 67349])
            ("cscope-get-history-bounds-this-result" function (:arguments ("which")) nil [67351 67982])
            ("cscope-get-navigation-properties" function (:arguments ("at" "buffer")) nil [67985 68542])
            ("cscope-get-directory" function (:arguments ("beg-end")) nil [68544 69395])
            ("cscope-select-entry-other-window" function (:user-visible-flag t) nil [69621 70075])
            ("cscope-select-entry-inplace" function (:user-visible-flag t) nil [70077 70336])
            ("cscope-select-entry-one-window" function (:user-visible-flag t) nil [70338 70799])
            ("cscope-select-entry-specified-window" function
               (:user-visible-flag t
                :arguments ("window"))
                nil [70802 71122])
            ("cscope-mouse-select-entry-other-window" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [71125 71699])
            ("cscope-mouse-select-entry-inplace" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [71701 72183])
            ("cscope-show-entry-other-window" function (:user-visible-flag t) nil [72186 72437])
            ("cscope-display-buffer" function (:user-visible-flag t) nil [72440 72681])
            ("cscope-display-buffer-toggle" function (:user-visible-flag t) nil [72684 73034])
            ("cscope-navigate-and-show" function (:arguments ("forms" "no-show")) nil [73036 74634])
            ("cscope-history-forward-backward" function (:arguments ("separator-regex" "do-next")) nil [74636 75191])
            ("cscope-history-forward-result" function
               (:user-visible-flag t
                :arguments ("limit-to-current-result"))
                nil [75193 75450])
            ("cscope-history-backward-result" function
               (:user-visible-flag t
                :arguments ("limit-to-current-result"))
                nil [75452 75716])
            ("cscope-history-kill-result" function (:user-visible-flag t) nil [75718 75969])
            ("cscope-history-forward-file" function
               (:user-visible-flag t
                :arguments ("limit-to-current-result"))
                nil [75971 76225])
            ("cscope-history-forward-file-current-result" function (:user-visible-flag t) nil [76227 76536])
            ("cscope-history-backward-file" function
               (:user-visible-flag t
                :arguments ("limit-to-current-result"))
                nil [76538 76799])
            ("cscope-history-backward-file-current-result" function (:user-visible-flag t) nil [76801 77113])
            ("cscope-history-kill-file" function (:user-visible-flag t) nil [77115 77439])
            ("cscope-history-forward-line" function
               (:user-visible-flag t
                :arguments ("limit-to-current-result"))
                nil [77441 77856])
            ("cscope-history-forward-line-current-result" function (:user-visible-flag t) nil [77858 78167])
            ("cscope-history-backward-line" function
               (:user-visible-flag t
                :arguments ("limit-to-current-result"))
                nil [78169 78662])
            ("cscope-history-backward-line-current-result" function (:user-visible-flag t) nil [78664 78976])
            ("cscope-history-kill-line" function (:user-visible-flag t) nil [78978 79342])
            ("cscope-history-kill-if-empty" function (:arguments ("which")) nil [79344 80252])
            ("cscope-pop-mark" function (:user-visible-flag t) nil [80254 81635])
            ("cscope-rerun-search-at-point" function (:user-visible-flag t) nil [81637 82733])
            ("cscope-set-initial-directory" function
               (:user-visible-flag t
                :arguments ("cs-id"))
                nil [82735 83119])
            ("cscope-unset-initial-directory" function (:user-visible-flag t) nil [83122 83332])
            ("cscope-help" function nil nil [83335 83539])
            ("cscope-cleanup-overlay-arrow" function nil nil [83541 83729])
            ("cscope-bury-buffer" function (:user-visible-flag t) nil [83731 83881])
            ("cscope-quit" function nil nil [83885 83991])
            ("cscope-boldify-if-needed" function (:arguments ("args")) nil [83994 84314])
            ("cscope-canonicalize-directory" function (:arguments ("dir")) nil [84397 84588])
            ("cscope-construct-custom-options-list" function nil nil [84590 84975])
            ("cscope-search-directory-hierarchy" function (:arguments ("directory")) nil [84977 85957])
            ("cscope-find-info" function (:arguments ("top-directory")) nil [85960 87446])
            ("cscope-make-entry-line" function (:arguments ("func-name" "line-number" "line")) nil [87449 90568])
            ("cscope-process-filter" function (:arguments ("process" "output")) nil [90571 94733])
            ("cscope-process-sentinel" function (:arguments ("process" "event")) nil [94736 98330])
            ("cscope-search-one-database" function nil nil [98334 102235])
            ("cscope-call" function (:arguments ("basemsg" "search-id" "symbol")) nil [102237 105315])
            ("cscope-unix-index-process" variable nil nil [105399 105471])
            ("cscope-indexing-status-string" variable nil nil [105473 105612])
            ("cscope-display-message-or-buffer" function (:arguments ("message" "buffer")) nil [105614 106067])
            ("cscope-unix-index-files-filter" function (:arguments ("process" "output")) nil [106070 106457])
            ("cscope-unix-index-files-sentinel" function (:arguments ("process" "event")) nil [106459 107119])
            ("cscope-make-index-command" function (:arguments ("dir" "only-create-list-of-files")) nil [107121 109551])
            ("cscope-unix-index-files-internal" function (:arguments ("top-directory" "header-text" "only-create-list-of-files")) nil [109553 110694])
            ("cscope-index-files" function
               (:user-visible-flag t
                :arguments ("top-directory"))
                nil [110697 111203])
            ("cscope-create-list-of-files-to-index" function
               (:user-visible-flag t
                :arguments ("top-directory"))
                nil [111206 111630])
            ("cscope-edit-list-of-files-to-index" function (:user-visible-flag t) nil [111633 112332])
            ("cscope-tell-user-about-directory" function (:user-visible-flag t) nil [112416 113254])
            ("cscope-dired-directory" function (:user-visible-flag t) nil [113257 114461])
            ("cscope-extract-symbol-at-cursor" function (:arguments ("extract-filename" "try-to-use-region")) nil [114545 115494])
            ("cscope-prompt-for-symbol" function (:arguments ("prompt" "extract-filename" "try-to-use-region" "is-regex")) nil [115497 116395])
            ("cscope-find-this-symbol" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [116398 116677])
            ("cscope-find-global-definition" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [116680 116996])
            ("cscope-find-global-definition-no-prompting" function (:user-visible-flag t) nil [116999 117343])
            ("cscope-find-called-functions" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [117346 117681])
            ("cscope-find-functions-calling-this-function" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [117684 118043])
            ("cscope-find-this-text-string" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [118046 118348])
            ("cscope-find-egrep-pattern" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [118351 118686])
            ("cscope-find-this-file" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [118689 118978])
            ("cscope-find-files-including-file" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [118981 119353])
            ("cscope-find-assignments-to-this-symbol" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [119356 119714])
            ("define-minor-mode" code nil nil [119814 120155])
            ("cscope-setup" function (:user-visible-flag t) nil [120172 120458])
            ("xcscope" package nil nil [120460 120478]))          
      :file "xcscope.el"
      :pointmax 120505
      :fsize 120504
      :lastmodtime '(22879 22603 0 0)
      :unmatched-syntax nil))
  :file "!Users!ric!.emacs.d!elpa!xcscope-20160628.2324!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
