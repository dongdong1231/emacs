;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("APP_QZAP_COMMON_RPC_LIST_HEAD_H_" variable (:constant-flag t) nil [142 174])
            ("app/qzap/common/base/base.h" include nil nil [176 214])
            ("ListForeEachEntrySafeReverse" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [5480 5508])
            ("ListForEachEntrySafe" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [4827 4847])
            ("ListForEachEntryReverse" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [4249 4272])
            ("ListForEachEntry" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [3752 3768])
            ("ListForEachPrevSafe" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [3359 3378])
            ("ListForEachSafe" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [2962 2977])
            ("ListForEachPrev" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [2574 2589])
            ("ListForEach" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [2278 2289])
            ("ListSwapHead" function
               (:type "void"
                :arguments 
                  ( ("src" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2029 2039])
                    ("dest" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2040 2051]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline"))
                (reparse-symbol extern-c-contents) [1997 2119])
            ("ListPushListToBack" function
               (:type "void"
                :arguments 
                  ( ("head1" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1849 1861])
                    ("head2" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1862 1874]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline"))
                (reparse-symbol extern-c-contents) [1811 1929])
            ("ListPushListToFront" function
               (:type "void"
                :arguments 
                  ( ("head1" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1448 1460])
                    ("head2" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1461 1473]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline"))
                (reparse-symbol extern-c-contents) [1409 1726])
            ("List" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("List" type (:type "class") nil nil)
                :parent "List"
                :constructor-flag t)
                (reparse-symbol extern-c-contents) [1289 1323])
            ("ListPrevious" function
               (:type ("List" type (:type "class") nil nil)
                :arguments 
                  ( ("x" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1238 1246]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline")
                :pointer 1)
                (reparse-symbol extern-c-contents) [1205 1268])
            ("ListNext" function
               (:type ("List" type (:type "class") nil nil)
                :arguments 
                  ( ("x" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1173 1181]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline")
                :pointer 1)
                (reparse-symbol extern-c-contents) [1144 1203])
            ("ListEmpty" function
               (:type "int"
                :arguments 
                  ( ("h" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1107 1115]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline"))
                (reparse-symbol extern-c-contents) [1079 1142])
            ("ListDelete" function
               (:type "void"
                :arguments 
                  ( ("x" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1011 1019]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline"))
                (reparse-symbol extern-c-contents) [981 1077])
            ("ListInit" function
               (:type "void"
                :arguments 
                  ( ("head" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [922 933]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline"))
                (reparse-symbol extern-c-contents) [894 979])
            ("ListEntry" variable
               (:typemodifiers ("extern" "\"C\"")
                :constant-flag t)
                (reparse-symbol extern-c-contents) [836 845])
            ("ListPushBack" function
               (:type "void"
                :arguments 
                  ( ("head" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [770 781])
                    ("x" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [782 790]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline"))
                (reparse-symbol extern-c-contents) [738 826])
            ("ListPushFront" function
               (:type "void"
                :arguments 
                  ( ("head" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [628 639])
                    ("x" variable
                       (:pointer 1
                        :type ("List" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [640 648]))                  
                :typemodifiers ("extern" "\"C\"" "static" "inline"))
                (reparse-symbol extern-c-contents) [595 736])
            ("List" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("List" type (:type "struct") nil nil))
                (reparse-symbol extern-c-contents) [493 593])
            ("List" type
               (:typemodifiers ("extern" "\"C\"")
                :type "struct"
                :members 
                  ( ("next" variable
                       (:pointer 1
                        :type ("List" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [517 542])
                    ("prev" variable
                       (:pointer 1
                        :type ("List" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol classsubparts) [517 542])
                    ("List" function
                       (:prototype-flag t
                        :constructor-flag t
                        :typemodifiers ("inline")
                        :type ("List" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [564 578]))                  )
                (reparse-symbol extern-c-contents) [493 593]))          
      :file "list_head.h"
      :pointmax 5866
      :fsize 5865
      :lastmodtime '(22878 19286 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("ListForEachPrev" (spp-arg-list ("head" "pos") 2589 . 2600) . ((FOR "for" 2605 . 2608) (semantic-list "(pos = (head)->prev; __builtin_prefetch(pos->prev), pos != (head); \\
       pos = pos->prev)" 2609 . 2701)))
          ("ListForEachEntrySafe" (spp-arg-list ("head" "pos" "n" "member") 4847 . 4869) . ((FOR "for" 4885 . 4888) (semantic-list "(pos = ListEntry((head)->next, typeof(*pos), member),    \\
       n = ListEntry(pos->member.next, typeof(*pos), member);    \\
       &pos->member != (head);                     \\
       pos = n, n = ListEntry(n->member.next, typeof(*n), member))" 4889 . 5134)))
          ("APP_QZAP_COMMON_RPC_LIST_HEAD_H_")
          ("ListForEachEntry" (spp-arg-list ("head" "pos" "member") 3768 . 3787) . ((FOR "for" 3807 . 3810) (semantic-list "(pos = ListEntry((head)->next, typeof(*pos), member);    \\
       __builtin_prefetch(pos->member.next), &pos->member != (head);     \\
       pos = ListEntry(pos->member.next, typeof(*pos), member))" 3811 . 4008)))
          ("ListEntry" (spp-arg-list ("p" "type" "member") 845 . 862) . ((symbol "container_of" 863 . 875) (semantic-list "(p, type, member)" 875 . 892)))
          ("ListForEachSafe" (spp-arg-list ("head" "pos" "n") 2977 . 2991) . ((FOR "for" 2996 . 2999) (semantic-list "(pos = (head)->next, n = pos->next; pos != (head); \\
       pos = n, n = pos->next)" 3000 . 3083)))
          ("ListForEachPrevSafe" (spp-arg-list ("head" "pos" "n") 3378 . 3392) . ((FOR "for" 3397 . 3400) (semantic-list "(pos = (head)->prev, n = pos->prev; \\
       __builtin_prefetch(pos->prev), pos != (head); \\
       pos = n, n = pos->prev)" 3401 . 3524)))
          ("ListForeEachEntrySafeReverse" (spp-arg-list ("head" "pos" "n" "member") 5508 . 5530) . ((FOR "for" 5542 . 5545) (semantic-list "(pos = ListEntry((head)->prev, typeof(*pos), member),    \\
       n = ListEntry(pos->member.prev, typeof(*pos), member);    \\
       &pos->member != (head);                     \\
       pos = n, n = ListEntry(n->member.prev, typeof(*n), member))" 5546 . 5791)))
          ("ListForEach" (spp-arg-list ("head" "pos") 2289 . 2300) . ((FOR "for" 2305 . 2308) (semantic-list "(pos = (head)->next; __builtin_prefetch(pos->next), pos != (head); \\
       pos = pos->next)" 2309 . 2401)))
          ("ListForEachEntryReverse" (spp-arg-list ("head" "pos" "member") 4272 . 4291) . ((FOR "for" 4307 . 4310) (semantic-list "(pos = ListEntry((head)->prev, typeof(*pos), member);    \\
       __builtin_prefetch(pos->member.prev), &pos->member != (head);     \\
       pos = ListEntry(pos->member.prev, typeof(*pos), member))" 4311 . 4508)))
          )
)
    (semanticdb-table "semanticdb-table"
      :file "descriptor.h"
      :fsize 3045
      :lastmodtime '(22878 19285 0 0)))
  :file "!Users!ric!Desktop!trunk!app!qzap!common!rpc!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
