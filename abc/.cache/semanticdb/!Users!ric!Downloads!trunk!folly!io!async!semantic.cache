;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/io/async/EventHandler.h" include (:system-flag t) nil [606 646])
            ("folly/io/async/EventBase.h" include (:system-flag t) nil [647 684])
            ("assert.h" include (:system-flag t) nil [686 705])
            ("folly" type
               (:members 
                  ( ("EventHandler" function
                       (:constructor-flag t
                        :parent "EventHandler"
                        :arguments 
                          ( ("eventBase" variable
                               (:pointer 1
                                :type ("EventBase" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [753 774])
                            ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [775 782]))                          
                        :type ("EventHandler" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [726 1204])
                    ("EventHandler" function
                       (:destructor-flag t
                        :parent "EventHandler"
                        :type "void")
                        (reparse-symbol namespacesubparts) [1206 1262])
                    ("registerImpl" function
                       (:parent "EventHandler"
                        :arguments 
                          ( ("events" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1296 1312])
                            ("internal" variable (:type "bool") (reparse-symbol arg-sub-list) [1313 1327]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1264 3608])
                    ("unregisterHandler" function
                       (:parent "EventHandler"
                        :type "void")
                        (reparse-symbol namespacesubparts) [3610 3711])
                    ("attachEventBase" function
                       (:parent "EventHandler"
                        :arguments 
                          ( ("eventBase" variable
                               (:pointer 1
                                :type ("EventBase" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3748 3769]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3713 4031])
                    ("detachEventBase" function
                       (:parent "EventHandler"
                        :type "void")
                        (reparse-symbol namespacesubparts) [4033 4134])
                    ("changeHandlerFD" function
                       (:parent "EventHandler"
                        :arguments 
                          ( ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4171 4178]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4136 4490])
                    ("initHandler" function
                       (:parent "EventHandler"
                        :arguments 
                          ( ("eventBase" variable
                               (:pointer 1
                                :type ("EventBase" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4523 4544])
                            ("fd" variable (:type "int") (reparse-symbol arg-sub-list) [4545 4552]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4492 4690])
                    ("ensureNotRegistered" function
                       (:parent "EventHandler"
                        :arguments 
                          ( ("fn" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4731 4746]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4692 5055])
                    ("libeventCallback" function
                       (:parent "EventHandler"
                        :arguments 
                          ( ("fd" variable (:type ("libevent_fd_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5093 5110])
                            ("events" variable (:type "short") (reparse-symbol arg-sub-list) [5111 5124])
                            ("arg" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [5125 5135]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [5057 5674])
                    ("setEventBase" function
                       (:parent "EventHandler"
                        :arguments 
                          ( ("eventBase" variable
                               (:pointer 1
                                :type ("EventBase" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5708 5729]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [5676 5816])
                    ("isPending" function
                       (:methodconst-flag t
                        :parent "EventHandler"
                        :type "bool")
                        (reparse-symbol namespacesubparts) [5818 5988]))                  
                :type "namespace")
                nil [707 5991]))          
      :file "EventHandler.cpp"
      :pointmax 6011
      :fsize 6010
      :lastmodtime '(22913 34676 0 0)
      :unmatched-syntax nil))
  :file "!Users!ric!Downloads!trunk!folly!io!async!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
