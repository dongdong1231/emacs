;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode java-mode
      :tags 
        '( ("com.yesdat.kafka_to_hdfs" package nil nil [77 110])
            ("java.util.*" include nil nil [111 130])
            ("org.apache.hadoop.io.LongWritable" include nil nil [131 172])
            ("org.apache.hadoop.io.NullWritable" include nil nil [173 214])
            ("org.apache.hadoop.io.BytesWritable" include nil nil [215 257])
            ("org.slf4j.Logger" include nil nil [258 282])
            ("org.slf4j.LoggerFactory" include nil nil [283 314])
            ("com.google.protobuf.InvalidProtocolBufferException" include nil nil [315 373])
            ("java.io.IOException" include nil nil [374 401])
            ("com.google.protobuf.Message" include nil nil [403 438])
            ("com.google.protobuf.ExtensionRegistry" include nil nil [439 484])
            ("org.apache.hadoop.mapreduce.lib.output.MultipleOutputs" include nil nil [485 547])
            ("org.apache.hadoop.mapreduce.Mapper" include nil nil [548 590])
            ("com.yesdat.proto.YdDspLog.*" include nil nil [591 626]))          
      :file "KafkaToHdfsParquetMapper.java"
      :pointmax 3495
      :fsize 3494
      :lastmodtime '(22942 38089 0 0)
      :unmatched-syntax '((BRACE_BLOCK 724 . 3494) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3492) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3485) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3474) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3421) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3415) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3330) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3320) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3319) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3270) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3240) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680) (BRACE_BLOCK 724 . 3237) (GT 722 . 723) (IDENTIFIER 715 . 722) (COMMA 713 . 714) (IDENTIFIER 709 . 713) (COMMA 707 . 708) (IDENTIFIER 694 . 707) (COMMA 692 . 693) (IDENTIFIER 680 . 692) (PUBLIC 627 . 633) (LT 679 . 680)))
    (semanticdb-table "semanticdb-table"
      :major-mode java-mode
      :tags 
        '( ("com.yesdat.kafka_to_hdfs" package nil nil [76 109])
            ("com.conductor.kafka.zk.*" include nil nil [111 143])
            ("com.conductor.kafka.hadoop.*" include nil nil [144 180])
            ("org.apache.hadoop.mapreduce.lib.output.LazyOutputFormat" include nil nil [181 244])
            ("org.apache.hadoop.io.compress.GzipCodec" include nil nil [245 292])
            ("org.apache.hadoop.conf.Configuration" include nil nil [293 337])
            ("org.apache.hadoop.conf.Configured" include nil nil [338 379])
            ("org.apache.hadoop.util.Tool" include nil nil [380 415])
            ("org.apache.hadoop.util.ToolRunner" include nil nil [416 457])
            ("org.apache.hadoop.util.GenericOptionsParser" include nil nil [458 509])
            ("org.slf4j.Logger" include nil nil [510 534])
            ("org.slf4j.LoggerFactory" include nil nil [535 566])
            ("com.google.protobuf.Message" include nil nil [567 602])
            ("com.google.protobuf.MessageOrBuilder" include nil nil [603 647])
            ("com.yesdat.proto.YdDspLog.*" include nil nil [649 684])
            ("org.apache.hadoop.io.compress.GzipCodec" include nil nil [685 732])
            ("org.apache.hadoop.io.NullWritable" include nil nil [733 774])
            ("org.apache.hadoop.io.BytesWritable" include nil nil [775 817])
            ("org.apache.hadoop.io.LongWritable" include nil nil [818 859])
            ("org.apache.hadoop.io.Text" include nil nil [860 893])
            ("org.apache.hadoop.mapreduce.Job" include nil nil [894 933])
            ("org.apache.hadoop.fs.Path" include nil nil [934 967])
            ("org.apache.hadoop.mapreduce.lib.output.MultipleOutputs" include nil nil [968 1030])
            ("org.apache.hadoop.mapreduce.lib.output.FileOutputFormat" include nil nil [1031 1094])
            ("org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat" include nil nil [1095 1166])
            ("KafkaToHdfsJob" type
               (:typemodifiers ("public")
                :interfaces ("Tool")
                :superclasses "Configured"
                :members 
                  ( ("LOG" variable
                       (:typemodifiers ("private" "static" "final")
                        :type "Logger")
                        (reparse-symbol class_member_declaration) [1235 1315])
                    ("inferRecordClass" function
                       (:constructor-flag t
                        :arguments 
                          ( ("record" variable (:type "MessageOrBuilder") (reparse-symbol formal_parameters) [1376 1399]))                          )
                        (reparse-symbol class_member_declaration) [1359 1466])
                    ("run" function
                       (:throws ("Exception")
                        :typemodifiers ("public")
                        :arguments 
                          ( ("args" variable
                               (:dereference 1
                                :type "String")
                                (reparse-symbol formal_parameters) [1499 1513]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [1484 4810])
                    ("main" function
                       (:throws ("Exception")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("args" variable
                               (:dereference 1
                                :type "String")
                                (reparse-symbol formal_parameters) [4838 4852]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [4814 4966]))                  
                :type "class")
                nil [1168 4969]))          
      :file "KafkaToHdfsJob.java"
      :pointmax 4969
      :fsize 4968
      :lastmodtime '(22840 64111 0 0)
      :unmatched-syntax '((GT 1357 . 1358) (EXTENDS 1342 . 1349) (QUESTION 1340 . 1341) (PRIVATE 1319 . 1326) (LT 1339 . 1340)))
    (semanticdb-table "semanticdb-table"
      :major-mode java-mode
      :tags 
        '( ("com.yesdat.kafka_to_hdfs" package nil nil [76 109])
            ("com.yesdat.proto.YdDspLog.*" include nil nil [111 146])
            ("org.apache.hadoop.mapreduce.Reducer" include nil nil [147 190])
            ("java.util.Calendar" include nil nil [191 217])
            ("com.google.protobuf.InvalidProtocolBufferException" include nil nil [218 276])
            ("org.apache.hadoop.io.BytesWritable" include nil nil [277 319])
            ("org.apache.hadoop.io.LongWritable" include nil nil [320 361])
            ("org.apache.hadoop.io.NullWritable" include nil nil [362 403])
            ("org.apache.hadoop.mapreduce.lib.output.MultipleOutputs" include nil nil [404 466])
            ("java.io.IOException" include nil nil [467 494])
            ("java.util.TimeZone" include nil nil [495 521])
            ("org.slf4j.Logger" include nil nil [522 546])
            ("org.slf4j.LoggerFactory" include nil nil [547 578]))          
      :file "KafkaToHdfsReducer.java"
      :pointmax 2143
      :fsize 2142
      :lastmodtime '(22840 64111 0 0)
      :unmatched-syntax '((BRACE_BLOCK 687 . 2143) (GT 685 . 686) (IDENTIFIER 672 . 685) (COMMA 670 . 671) (IDENTIFIER 658 . 670) (COMMA 656 . 657) (IDENTIFIER 643 . 656) (COMMA 641 . 642) (IDENTIFIER 629 . 641) (PUBLIC 581 . 587) (LT 628 . 629))))
  :file "!Users!ric!Downloads!trunk!java!com!yesdat!kafka_to_hdfs!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
