;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [612 632])
            ("exception" include (:system-flag t) nil [633 653])
            ("functional" include (:system-flag t) nil [654 675])
            ("memory" include (:system-flag t) nil [676 693])
            ("type_traits" include (:system-flag t) nil [694 716])
            ("vector" include (:system-flag t) nil [717 734])
            ("folly/Optional.h" include (:system-flag t) nil [736 763])
            ("folly/Portability.h" include (:system-flag t) nil [764 794])
            ("folly/futures/DrivableExecutor.h" include (:system-flag t) nil [795 838])
            ("folly/futures/Promise.h" include (:system-flag t) nil [839 873])
            ("folly/Try.h" include (:system-flag t) nil [874 896])
            ("folly/futures/FutureException.h" include (:system-flag t) nil [897 939])
            ("folly/futures/detail/Types.h" include (:system-flag t) nil [940 979])
            ("folly/futures/Future-pre.h" include (:system-flag t) nil [1019 1056])
            ("folly/futures/helpers.h" include (:system-flag t) nil [1202 1236])
            ("folly" type
               (:members 
                  ( ("Future" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1292 1299])
                            ("value_type" type
                               (:typedef ("T" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [1302 1323])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [1455 1464])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [1495 1504])
                            ("Future" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1733 1737])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1738 1742]))                                  
                                :type ("Future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1726 1743])
                            ("Future" function
                               (:template 
                                  ( ("T2" type (:type "class") nil nil))                                  
                                :type ("Future" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :typemodifiers ("typename")
                                        :type ("std::enable_if::type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1802 1873]))                                  
                                :constructor-flag t
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [1747 1875])
                            ("Future" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1879 1889])
                            ("value" function
                               (:prototype-flag t
                                :typemodifiers ("typename")
                                :type ("std::add_lvalue_reference::type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2044 2098])
                            ("value" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :typemodifiers ("typename")
                                :type ("std::add_lvalue_reference::type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2101 2167])
                            ("isReady" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3400 3421])
                            ("hasValue" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3461 3477])
                            ("hasException" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3521 3541])
                            ("getTry" function
                               (:prototype-flag t
                                :type ("Try" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3590 3607])
                            ("getTryVia" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("e" variable
                                       (:pointer 1
                                        :type ("DrivableExecutor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3817 3837]))                                  
                                :type ("Try" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3799 3838])
                            ("poll" function
                               (:prototype-flag t
                                :type ("Optional" type
                                     (:template-specifier 
                                        ( ("Try" type (:template-specifier 
                                            ( ("T" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [4004 4028])
                            ("get" function
                               (:prototype-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4182 4190])
                            ("get" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4369 4382]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4363 4383])
                            ("getVia" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("e" variable
                                       (:pointer 1
                                        :type ("DrivableExecutor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4595 4615]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4586 4616])
                            ("unwrap" function
                               (:prototype-flag t
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4856 4872])
                            ("then" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6048 6051])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6052 6057]))                                  
                                :type ("R::Return" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6024 6177])
                            ("then" function
                               (:prototype-flag t
                                :arguments ((nil variable (:pointer (("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6563 6568]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [6567 6571])) :type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6546 6572]) ("instance" variable (:pointer 1 :type ("Caller" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) #<overlay from 6573 to 6590 in Future.h>))
                                :type "int")
                                (reparse-symbol classsubparts) [6541 6591])
                            ("then" function
                               (:arguments 
                                  ( ("x" variable
                                       (:pointer 1
                                        :type ("Executor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7006 7018])
                                    ("" variable
                                       (:reference 1
                                        :type ("Arg" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7019 7024])
                                    ("" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7025 7029])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7030 7036])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7040 7045]))                                  
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6996 7197])
                            ("then" function
                               (:prototype-flag t
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [7312 7332])
                            ("onError" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8066 8069])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8070 8075]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8051 8076])
                            ("onError" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8332 8335])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8336 8341]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8317 8342])
                            ("onError" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8603 8606])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8607 8612]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8588 8613])
                            ("onError" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8867 8870])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8871 8876]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8852 8877])
                            ("ensure" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9214 9217])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9218 9223]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [9176 9224])
                            ("onTimeout" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9668 9677])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9678 9681])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9682 9687])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9688 9709]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [9627 9711])
                            ("setCallback_" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10011 10014])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10015 10020]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [9972 10021])
                            ("isActive" function (:type "bool") (reparse-symbol classsubparts) [10744 10795])
                            ("raise" function
                               (:template 
                                  ( ("E" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("E" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10831 10834])
                                    ("" variable (:type ("exception" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10835 10845]))                                  )
                                (reparse-symbol classsubparts) [10799 10964])
                            ("raise" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("interrupt" variable (:type ("exception_wrapper" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11517 11545]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11506 11546])
                            ("cancel" function (:type "void") (reparse-symbol classsubparts) [11550 11602])
                            ("within" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11773 11782])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11783 11804]))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [11756 11806])
                            ("within" function
                               (:template 
                                  ( ("E" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12015 12024])
                                    ("exception" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12025 12037])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12038 12059]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [11977 12061])
                            ("delayed" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12221 12230])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12231 12252]))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [12203 12254])
                            ("willEqual" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Future" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [13349 13360]))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [13326 13361])
                            ("filter" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13579 13582])
                                    ("" variable (:type ("predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13583 13593]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [13541 13594])
                            ("reduce" function
                               (:template 
                                  ( ("I" type (:type "class") nil nil)
                                    ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("I" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("I" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13766 13769])
                                    ("" variable (:type ("initial" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13770 13778])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13779 13782])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13783 13788]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [13719 13789])
                            ("thenMulti" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Callback" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14087 14097])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14098 14101])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callbacks" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14102 14113])
                                    ("" variable (:type ("fns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14117 14121]))                                  
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14072 14294])
                            ("thenMulti" function
                               (:template 
                                  ( ("Callback" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Callback" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14341 14351])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14352 14355]))                                  )
                                (reparse-symbol classsubparts) [14298 14456])
                            ("thenMultiWithExecutor" function
                               (:arguments 
                                  ( ("x" variable
                                       (:pointer 1
                                        :type ("Executor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14819 14831])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callback" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14832 14842])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14843 14846])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callbacks" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14847 14858])
                                    ("" variable (:type ("fns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14862 14866]))                                  
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14792 15136])
                            ("thenMultiWithExecutor" function
                               (:template 
                                  ( ("Callback" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("x" variable
                                       (:pointer 1
                                        :type ("Executor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15195 15207])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callback" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15208 15218])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15219 15222]))                                  )
                                (reparse-symbol classsubparts) [15140 15343])
                            ("unit" function (:type ("Future" type
                                 (:template-specifier 
                                    ( ("Unit" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [15399 15463])
                            ("protected" label nil (reparse-symbol classsubparts) [15466 15476])
                            ("corePtr" type
                               (:typedef ("detail::Core" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :pointer 1
                                :type "typedef")
                                (reparse-symbol classsubparts) [15479 15512])
                            ("core_" variable (:type ("corePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15546 15560])
                            ("Future" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("obj" variable (:type ("corePtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15582 15594]))                                  
                                :type ("Future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15575 15610])
                            ("detach" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [15614 15628])
                            ("throwIfInvalid" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [15632 15660])
                            ("Promise" friend nil (reparse-symbol classsubparts) [15664 15684])
                            ("Future" type
                               (:template 
                                  ( ("" type nil nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [15691 15728])
                            ("makeFuture" function
                               (:template 
                                  ( ("T2" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Try" type
                                             (:template-specifier 
                                                ( ("T2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [15783 15792]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [15732 15794])
                            ("times" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("n" variable (:type "int") (reparse-symbol arg-sub-list) [15989 15995])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15996 15999])
                                    ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16000 16006]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [15942 16007])
                            ("when" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("p" variable (:type "bool") (reparse-symbol arg-sub-list) [16212 16219])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16220 16223])
                                    ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16224 16230]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [16166 16231])
                            ("whileDo" function
                               (:template 
                                  ( ("P" type (:type "class") nil nil)
                                    ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("P" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16527 16530])
                                    ("" variable (:type ("predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16531 16541])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16542 16545])
                                    ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16546 16552]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [16469 16553])
                            ("thenImplementation" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16803 16806])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16807 16812])
                                    ("" variable (:type ("detail::argResult" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16813 16831])
                                    ("" variable (:type ("isTry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16831 16837])
                                    ("" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16838 16840])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16841 16846]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16777 16851])
                            ("thenImplementation" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17108 17111])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17112 17117])
                                    ("" variable (:type ("detail::argResult" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17118 17136])
                                    ("" variable (:type ("isTry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17136 17142])
                                    ("" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17143 17145])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17146 17151]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17082 17156])
                            ("getExecutor" function
                               (:pointer 1
                                :type ("Executor" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17160 17216])
                            ("setExecutor" function
                               (:arguments 
                                  ( ("x" variable
                                       (:pointer 1
                                        :type ("Executor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17236 17248])
                                    ("priority" variable
                                       (:default-value "Executor"
                                        :type ("int8_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17249 17275])
                                    ("" variable (:type ("MID_PRI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17277 17285]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [17219 17328]))                          )
                        (reparse-symbol namespacesubparts) [1257 17331]))                  
                :type "namespace")
                nil [1238 17334])
            ("folly/futures/Future-inl.h" include (:system-flag t) nil [17345 17382]))          
      :file "Future.h"
      :pointmax 17383
      :fsize 17382
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((punctuation 17276 . 17277) (punctuation 17275 . 17276) (punctuation 17153 . 17154) (punctuation 17152 . 17153) (punctuation 17151 . 17152) (punctuation 17150 . 17151) (punctuation 17135 . 17136) (punctuation 17110 . 17111) (punctuation 17081 . 17082) (punctuation 17080 . 17081) (punctuation 17079 . 17080) (symbol 17073 . 17079) (punctuation 17072 . 17073) (punctuation 17071 . 17072) (symbol 17070 . 17071) (TYPENAME 17061 . 17069) (punctuation 17059 . 17060) (symbol 17054 . 17059) (punctuation 17053 . 17054) (punctuation 17052 . 17053) (symbol 17039 . 17052) (punctuation 17038 . 17039) (punctuation 17037 . 17038) (symbol 17036 . 17037) (punctuation 17035 . 17036) (symbol 17026 . 17035) (punctuation 17025 . 17026) (punctuation 17024 . 17025) (symbol 17021 . 17024) (TYPENAME 17012 . 17020) (punctuation 17008 . 17009) (symbol 17004 . 17008) (punctuation 17002 . 17003) (punctuation 17001 . 17002) (punctuation 17000 . 17001) (TYPENAME 16992 . 17000) (punctuation 16990 . 16991) (symbol 16985 . 16990) (BOOL 16980 . 16984) (punctuation 16978 . 16979) (symbol 16977 . 16978) (TYPENAME 16968 . 16976) (punctuation 16966 . 16967) (symbol 16965 . 16966) (TYPENAME 16956 . 16964) (punctuation 16955 . 16956) (TEMPLATE 16946 . 16954) (punctuation 16848 . 16849) (punctuation 16847 . 16848) (punctuation 16846 . 16847) (punctuation 16845 . 16846) (punctuation 16830 . 16831) (punctuation 16805 . 16806) (punctuation 16776 . 16777) (punctuation 16775 . 16776) (punctuation 16774 . 16775) (symbol 16768 . 16774) (punctuation 16767 . 16768) (punctuation 16766 . 16767) (symbol 16765 . 16766) (TYPENAME 16756 . 16764) (punctuation 16754 . 16755) (symbol 16749 . 16754) (punctuation 16748 . 16749) (punctuation 16747 . 16748) (symbol 16734 . 16747) (punctuation 16733 . 16734) (punctuation 16732 . 16733) (symbol 16731 . 16732) (punctuation 16730 . 16731) (punctuation 16729 . 16730) (symbol 16720 . 16729) (punctuation 16719 . 16720) (punctuation 16718 . 16719) (symbol 16715 . 16718) (TYPENAME 16706 . 16714) (punctuation 16702 . 16703) (symbol 16698 . 16702) (punctuation 16696 . 16697) (punctuation 16695 . 16696) (punctuation 16694 . 16695) (TYPENAME 16686 . 16694) (punctuation 16684 . 16685) (symbol 16679 . 16684) (BOOL 16674 . 16678) (punctuation 16672 . 16673) (symbol 16671 . 16672) (TYPENAME 16662 . 16670) (punctuation 16660 . 16661) (symbol 16659 . 16660) (TYPENAME 16650 . 16658) (punctuation 16649 . 16650) (TEMPLATE 16640 . 16648) (punctuation 16544 . 16545) (punctuation 16529 . 16530) (punctuation 16222 . 16223) (punctuation 15998 . 15999) (punctuation 15791 . 15792) (punctuation 15687 . 15688) (punctuation 15686 . 15687) (symbol 15685 . 15686) (punctuation 15684 . 15685) (EXPLICIT 15564 . 15572) (punctuation 15217 . 15218) (punctuation 14860 . 14861) (punctuation 14859 . 14860) (punctuation 14858 . 14859) (punctuation 14857 . 14858) (punctuation 14841 . 14842) (punctuation 14788 . 14789) (symbol 14779 . 14788) (punctuation 14777 . 14778) (punctuation 14776 . 14777) (punctuation 14775 . 14776) (CLASS 14770 . 14775) (punctuation 14768 . 14769) (symbol 14760 . 14768) (CLASS 14754 . 14759) (punctuation 14753 . 14754) (TEMPLATE 14744 . 14752) (punctuation 14350 . 14351) (punctuation 14115 . 14116) (punctuation 14114 . 14115) (punctuation 14113 . 14114) (punctuation 14112 . 14113) (punctuation 14096 . 14097) (punctuation 14068 . 14069) (symbol 14059 . 14068) (punctuation 14057 . 14058) (punctuation 14056 . 14057) (punctuation 14055 . 14056) (CLASS 14050 . 14055) (punctuation 14048 . 14049) (symbol 14040 . 14048) (CLASS 14034 . 14039) (punctuation 14033 . 14034) (TEMPLATE 14024 . 14032) (punctuation 13781 . 13782) (punctuation 13768 . 13769) (punctuation 13581 . 13582) (punctuation 13072 . 13073) (punctuation 13071 . 13072) (punctuation 13070 . 13071) (semantic-list 13048 . 13069) (symbol 13041 . 13048) (punctuation 13039 . 13040) (punctuation 13038 . 13039) (punctuation 13037 . 13038) (symbol 13036 . 13037) (punctuation 13035 . 13036) (symbol 13029 . 13035) (punctuation 12977 . 12978) (punctuation 12976 . 12977) (semantic-list 12954 . 12975) (symbol 12947 . 12954) (punctuation 12945 . 12946) (punctuation 12944 . 12945) (symbol 12943 . 12944) (punctuation 12942 . 12943) (symbol 12936 . 12942) (punctuation 12663 . 12664) (punctuation 12662 . 12663) (punctuation 12661 . 12662) (semantic-list 12650 . 12660) (symbol 12646 . 12650) (punctuation 12644 . 12645) (punctuation 12643 . 12644) (punctuation 12642 . 12643) (symbol 12641 . 12642) (punctuation 12640 . 12641) (symbol 12634 . 12640) (punctuation 12577 . 12578) (punctuation 12576 . 12577) (semantic-list 12565 . 12575) (symbol 12561 . 12565) (punctuation 12559 . 12560) (punctuation 12558 . 12559) (symbol 12557 . 12558) (punctuation 12556 . 12557) (symbol 12550 . 12556) (punctuation 12426 . 12427) (punctuation 12425 . 12426) (punctuation 12424 . 12425) (semantic-list 12421 . 12423) (symbol 12417 . 12421) (punctuation 12415 . 12416) (punctuation 12414 . 12415) (punctuation 12413 . 12414) (symbol 12412 . 12413) (punctuation 12411 . 12412) (symbol 12405 . 12411) (punctuation 12356 . 12357) (punctuation 12355 . 12356) (semantic-list 12352 . 12354) (symbol 12348 . 12352) (punctuation 12346 . 12347) (punctuation 12345 . 12346) (symbol 12344 . 12345) (punctuation 12343 . 12344) (symbol 12337 . 12343) (punctuation 10833 . 10834) (semantic-list 10681 . 10740) (punctuation 10679 . 10680) (punctuation 10678 . 10679) (semantic-list 10675 . 10677) (symbol 10665 . 10675) (punctuation 10663 . 10664) (symbol 10662 . 10663) (punctuation 10661 . 10662) (symbol 10655 . 10661) (semantic-list 10640 . 10654) (symbol 10624 . 10640) (string 10641 . 10653) (semantic-list 10564 . 10621) (punctuation 10562 . 10563) (punctuation 10561 . 10562) (semantic-list 10558 . 10560) (symbol 10550 . 10558) (punctuation 10548 . 10549) (symbol 10547 . 10548) (punctuation 10546 . 10547) (symbol 10540 . 10546) (semantic-list 10525 . 10539) (symbol 10509 . 10525) (string 10526 . 10538) (semantic-list 10458 . 10506) (punctuation 10456 . 10457) (semantic-list 10453 . 10455) (symbol 10443 . 10453) (punctuation 10441 . 10442) (punctuation 10440 . 10441) (symbol 10439 . 10440) (punctuation 10438 . 10439) (symbol 10432 . 10438) (semantic-list 10417 . 10431) (symbol 10401 . 10417) (string 10418 . 10430) (semantic-list 10352 . 10398) (punctuation 10350 . 10351) (semantic-list 10347 . 10349) (symbol 10339 . 10347) (punctuation 10337 . 10338) (punctuation 10336 . 10337) (symbol 10335 . 10336) (punctuation 10334 . 10335) (symbol 10328 . 10334) (semantic-list 10313 . 10327) (symbol 10297 . 10313) (string 10314 . 10326) (punctuation 10013 . 10014) (punctuation 9680 . 9681) (punctuation 9216 . 9217) (punctuation 8869 . 8870) (punctuation 8851 . 8852) (punctuation 8850 . 8851) (punctuation 8849 . 8850) (punctuation 8848 . 8849) (symbol 8847 . 8848) (punctuation 8846 . 8847) (symbol 8840 . 8846) (punctuation 8834 . 8835) (symbol 8829 . 8834) (punctuation 8828 . 8829) (punctuation 8827 . 8828) (symbol 8814 . 8827) (punctuation 8813 . 8814) (punctuation 8812 . 8813) (punctuation 8811 . 8812) (symbol 8810 . 8811) (punctuation 8809 . 8810) (symbol 8802 . 8809) (punctuation 8801 . 8802) (punctuation 8800 . 8801) (symbol 8794 . 8800) (punctuation 8793 . 8794) (punctuation 8787 . 8788) (punctuation 8786 . 8787) (symbol 8780 . 8785) (punctuation 8779 . 8780) (punctuation 8778 . 8779) (punctuation 8777 . 8778) (symbol 8760 . 8777) (punctuation 8758 . 8759) (symbol 8757 . 8758) (punctuation 8756 . 8757) (symbol 8744 . 8756) (punctuation 8743 . 8744) (punctuation 8742 . 8743) (symbol 8736 . 8742) (punctuation 8730 . 8731) (symbol 8721 . 8730) (punctuation 8720 . 8721) (punctuation 8719 . 8720) (symbol 8716 . 8719) (TYPENAME 8707 . 8715) (punctuation 8703 . 8704) (symbol 8702 . 8703) (CLASS 8696 . 8701) (punctuation 8695 . 8696) (TEMPLATE 8686 . 8694) (punctuation 8605 . 8606) (punctuation 8587 . 8588) (punctuation 8586 . 8587) (punctuation 8585 . 8586) (punctuation 8584 . 8585) (symbol 8583 . 8584) (punctuation 8582 . 8583) (symbol 8576 . 8582) (punctuation 8570 . 8571) (symbol 8565 . 8570) (punctuation 8564 . 8565) (punctuation 8563 . 8564) (symbol 8550 . 8563) (punctuation 8549 . 8550) (punctuation 8548 . 8549) (punctuation 8547 . 8548) (symbol 8546 . 8547) (punctuation 8545 . 8546) (symbol 8538 . 8545) (punctuation 8537 . 8538) (punctuation 8536 . 8537) (symbol 8530 . 8536) (punctuation 8524 . 8525) (punctuation 8523 . 8524) (symbol 8517 . 8522) (punctuation 8516 . 8517) (punctuation 8515 . 8516) (punctuation 8514 . 8515) (symbol 8497 . 8514) (punctuation 8495 . 8496) (symbol 8494 . 8495) (punctuation 8493 . 8494) (symbol 8481 . 8493) (punctuation 8480 . 8481) (punctuation 8479 . 8480) (symbol 8473 . 8479) (punctuation 8467 . 8468) (symbol 8458 . 8467) (punctuation 8457 . 8458) (punctuation 8456 . 8457) (symbol 8453 . 8456) (TYPENAME 8444 . 8452) (punctuation 8440 . 8441) (symbol 8439 . 8440) (CLASS 8433 . 8438) (punctuation 8432 . 8433) (TEMPLATE 8423 . 8431) (punctuation 8334 . 8335) (punctuation 8316 . 8317) (punctuation 8315 . 8316) (punctuation 8314 . 8315) (punctuation 8313 . 8314) (symbol 8312 . 8313) (punctuation 8311 . 8312) (symbol 8305 . 8311) (punctuation 8299 . 8300) (symbol 8294 . 8299) (punctuation 8293 . 8294) (punctuation 8292 . 8293) (symbol 8279 . 8292) (punctuation 8278 . 8279) (punctuation 8277 . 8278) (punctuation 8276 . 8277) (symbol 8275 . 8276) (punctuation 8274 . 8275) (symbol 8267 . 8274) (punctuation 8266 . 8267) (punctuation 8265 . 8266) (symbol 8259 . 8265) (punctuation 8253 . 8254) (punctuation 8252 . 8253) (symbol 8246 . 8251) (punctuation 8245 . 8246) (punctuation 8244 . 8245) (punctuation 8243 . 8244) (symbol 8226 . 8243) (punctuation 8224 . 8225) (symbol 8223 . 8224) (punctuation 8222 . 8223) (symbol 8210 . 8222) (punctuation 8209 . 8210) (punctuation 8208 . 8209) (symbol 8202 . 8208) (punctuation 8201 . 8202) (punctuation 8195 . 8196) (symbol 8186 . 8195) (punctuation 8185 . 8186) (punctuation 8184 . 8185) (symbol 8181 . 8184) (TYPENAME 8172 . 8180) (punctuation 8168 . 8169) (symbol 8167 . 8168) (CLASS 8161 . 8166) (punctuation 8160 . 8161) (TEMPLATE 8151 . 8159) (punctuation 8068 . 8069) (punctuation 8050 . 8051) (punctuation 8049 . 8050) (punctuation 8048 . 8049) (punctuation 8047 . 8048) (symbol 8046 . 8047) (punctuation 8045 . 8046) (symbol 8039 . 8045) (punctuation 8033 . 8034) (symbol 8028 . 8033) (punctuation 8027 . 8028) (punctuation 8026 . 8027) (symbol 8013 . 8026) (punctuation 8012 . 8013) (punctuation 8011 . 8012) (punctuation 8010 . 8011) (symbol 8009 . 8010) (punctuation 8008 . 8009) (symbol 8001 . 8008) (punctuation 8000 . 8001) (punctuation 7999 . 8000) (symbol 7993 . 7999) (punctuation 7992 . 7993) (punctuation 7986 . 7987) (punctuation 7985 . 7986) (symbol 7979 . 7984) (punctuation 7978 . 7979) (punctuation 7977 . 7978) (punctuation 7976 . 7977) (symbol 7959 . 7976) (punctuation 7957 . 7958) (symbol 7956 . 7957) (punctuation 7955 . 7956) (symbol 7943 . 7955) (punctuation 7942 . 7943) (punctuation 7941 . 7942) (symbol 7935 . 7941) (punctuation 7934 . 7935) (punctuation 7928 . 7929) (symbol 7919 . 7928) (punctuation 7918 . 7919) (punctuation 7917 . 7918) (symbol 7914 . 7917) (TYPENAME 7905 . 7913) (punctuation 7901 . 7902) (symbol 7900 . 7901) (CLASS 7894 . 7899) (punctuation 7893 . 7894) (TEMPLATE 7884 . 7892) (punctuation 7038 . 7039) (punctuation 7037 . 7038) (punctuation 7036 . 7037) (punctuation 7035 . 7036) (punctuation 7023 . 7024) (punctuation 6992 . 6993) (symbol 6988 . 6992) (punctuation 6986 . 6987) (punctuation 6985 . 6986) (punctuation 6984 . 6985) (CLASS 6979 . 6984) (punctuation 6977 . 6978) (symbol 6974 . 6977) (CLASS 6968 . 6973) (punctuation 6966 . 6967) (symbol 6958 . 6966) (CLASS 6952 . 6957) (punctuation 6951 . 6952) (TEMPLATE 6942 . 6950) (punctuation 6537 . 6538) (symbol 6532 . 6537) (punctuation 6531 . 6532) (punctuation 6530 . 6531) (punctuation 6529 . 6530) (symbol 6528 . 6529) (punctuation 6527 . 6528) (symbol 6519 . 6527) (TYPENAME 6510 . 6518) (punctuation 6509 . 6510) (symbol 6503 . 6509) (punctuation 6499 . 6500) (symbol 6495 . 6499) (punctuation 6493 . 6494) (punctuation 6492 . 6493) (punctuation 6491 . 6492) (TYPENAME 6483 . 6491) (punctuation 6481 . 6482) (symbol 6475 . 6481) (TYPENAME 6466 . 6474) (punctuation 6464 . 6465) (symbol 6463 . 6464) (TYPENAME 6454 . 6462) (punctuation 6453 . 6454) (TEMPLATE 6444 . 6452) (punctuation 6050 . 6051) (punctuation 6020 . 6021) (punctuation 6019 . 6020) (symbol 6017 . 6019) (punctuation 6015 . 6016) (symbol 6014 . 6015) (punctuation 6013 . 6014) (symbol 5999 . 6013) (punctuation 5998 . 5999) (punctuation 5997 . 5998) (symbol 5991 . 5997) (punctuation 5989 . 5990) (symbol 5987 . 5988) (TYPENAME 5978 . 5986) (punctuation 5970 . 5971) (symbol 5966 . 5970) (punctuation 5965 . 5966) (punctuation 5964 . 5965) (punctuation 5963 . 5964) (symbol 5962 . 5963) (punctuation 5961 . 5962) (symbol 5935 . 5961) (punctuation 5934 . 5935) (punctuation 5933 . 5934) (symbol 5927 . 5933) (TYPENAME 5918 . 5926) (punctuation 5916 . 5917) (symbol 5913 . 5915) (TYPENAME 5904 . 5912) (punctuation 5896 . 5897) (symbol 5895 . 5896) (TYPENAME 5886 . 5894) (punctuation 5878 . 5879) (TEMPLATE 5869 . 5877) (punctuation 4855 . 4856) (punctuation 4854 . 4855) (punctuation 4853 . 4854) (punctuation 4852 . 4853) (symbol 4847 . 4852) (punctuation 4846 . 4847) (punctuation 4845 . 4846) (punctuation 4844 . 4845) (symbol 4843 . 4844) (punctuation 4842 . 4843) (symbol 4834 . 4842) (TYPENAME 4825 . 4833) (punctuation 4824 . 4825) (symbol 4818 . 4824) (punctuation 4790 . 4791) (symbol 4785 . 4790) (punctuation 4784 . 4785) (punctuation 4783 . 4784) (punctuation 4782 . 4783) (symbol 4781 . 4782) (punctuation 4780 . 4781) (symbol 4772 . 4780) (punctuation 4771 . 4772) (symbol 4762 . 4771) (punctuation 4761 . 4762) (punctuation 4760 . 4761) (symbol 4757 . 4760) (TYPENAME 4748 . 4756) (punctuation 4744 . 4745) (symbol 4743 . 4744) (punctuation 4741 . 4742) (symbol 4739 . 4740) (CLASS 4733 . 4738) (punctuation 4732 . 4733) (TEMPLATE 4723 . 4731) (punctuation 3340 . 3341) (punctuation 3339 . 3340) (semantic-list 3268 . 3338) (symbol 3265 . 3268) (punctuation 3329 . 3330) (punctuation 3328 . 3329) (punctuation 3263 . 3264) (symbol 3262 . 3263) (punctuation 3261 . 3262) (symbol 3255 . 3261) (punctuation 3329 . 3330) (punctuation 3328 . 3329) (INLINE 3248 . 3254) (punctuation 3329 . 3330) (punctuation 3328 . 3329) (punctuation 3052 . 3053) (punctuation 3051 . 3052) (punctuation 3050 . 3051) (semantic-list 2979 . 3049) (symbol 2976 . 2979) (punctuation 3040 . 3041) (punctuation 3039 . 3040) (punctuation 2974 . 2975) (symbol 2973 . 2974) (punctuation 2972 . 2973) (symbol 2966 . 2972) (punctuation 3040 . 3041) (punctuation 3039 . 3040) (INLINE 2959 . 2965) (punctuation 3040 . 3041) (punctuation 3039 . 3040) (punctuation 1736 . 1737) (punctuation 1707 . 1708) (symbol 1703 . 1707) (punctuation 1702 . 1703) (punctuation 1701 . 1702) (punctuation 1700 . 1701) (symbol 1695 . 1700) (punctuation 1694 . 1695) (punctuation 1693 . 1694) (punctuation 1692 . 1693) (symbol 1688 . 1692) (punctuation 1687 . 1688) (punctuation 1686 . 1687) (punctuation 1685 . 1686) (symbol 1683 . 1685) (punctuation 1682 . 1683) (symbol 1677 . 1682) (punctuation 1676 . 1677) (punctuation 1675 . 1676) (symbol 1672 . 1675) (TYPENAME 1663 . 1671) (punctuation 1662 . 1663) (symbol 1654 . 1662) (punctuation 1653 . 1654) (punctuation 1637 . 1638) (symbol 1628 . 1637) (punctuation 1627 . 1628) (punctuation 1626 . 1627) (symbol 1623 . 1626) (TYPENAME 1614 . 1622) (punctuation 1600 . 1601) (TYPENAME 1591 . 1599) (punctuation 1589 . 1590) (symbol 1588 . 1589) (punctuation 1586 . 1587) (symbol 1583 . 1585) (CLASS 1577 . 1582) (punctuation 1576 . 1577) (TEMPLATE 1567 . 1575) (semantic-list 1484 . 1494) (punctuation 1483 . 1484) (OPERATOR 1475 . 1483) (punctuation 1492 . 1493) (punctuation 1473 . 1474) (symbol 1467 . 1473) (punctuation 1492 . 1493) (semantic-list 1444 . 1454) (symbol 1438 . 1444) (punctuation 1452 . 1453) (punctuation 1420 . 1421) (DELETE 1414 . 1420) (punctuation 1412 . 1413) (semantic-list 1396 . 1411) (punctuation 1395 . 1396) (OPERATOR 1387 . 1395) (punctuation 1385 . 1386) (symbol 1379 . 1385) (punctuation 1375 . 1376) (DELETE 1369 . 1375) (punctuation 1367 . 1368) (semantic-list 1351 . 1366) (symbol 1345 . 1351) (symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599) (punctuation 12663 . 12664) (punctuation 12662 . 12663) (punctuation 12661 . 12662) (semantic-list 12650 . 12660) (symbol 12646 . 12650) (punctuation 12644 . 12645) (punctuation 12643 . 12644) (punctuation 12642 . 12643) (symbol 12641 . 12642) (punctuation 12640 . 12641) (symbol 12634 . 12640) (punctuation 12577 . 12578) (punctuation 12576 . 12577) (semantic-list 12565 . 12575) (symbol 12561 . 12565) (punctuation 12559 . 12560) (punctuation 12558 . 12559) (symbol 12557 . 12558) (punctuation 12556 . 12557) (symbol 12550 . 12556) (punctuation 12426 . 12427) (punctuation 12425 . 12426) (punctuation 12424 . 12425) (semantic-list 12421 . 12423) (symbol 12417 . 12421) (punctuation 12415 . 12416) (punctuation 12414 . 12415) (punctuation 12413 . 12414) (symbol 12412 . 12413) (punctuation 12411 . 12412) (symbol 12405 . 12411) (punctuation 12356 . 12357) (punctuation 12355 . 12356) (semantic-list 12352 . 12354) (symbol 12348 . 12352) (punctuation 12346 . 12347) (punctuation 12345 . 12346) (symbol 12344 . 12345) (punctuation 12343 . 12344) (symbol 12337 . 12343) (punctuation 10833 . 10834) (semantic-list 10681 . 10740) (punctuation 10679 . 10680) (punctuation 10678 . 10679) (semantic-list 10675 . 10677) (symbol 10665 . 10675) (punctuation 10663 . 10664) (symbol 10662 . 10663) (punctuation 10661 . 10662) (symbol 10655 . 10661) (semantic-list 10640 . 10654) (symbol 10624 . 10640) (string 10641 . 10653) (semantic-list 10564 . 10621) (punctuation 10562 . 10563) (punctuation 10561 . 10562) (semantic-list 10558 . 10560) (symbol 10550 . 10558) (punctuation 10548 . 10549) (symbol 10547 . 10548) (punctuation 10546 . 10547) (symbol 10540 . 10546) (semantic-list 10525 . 10539) (symbol 10509 . 10525) (string 10526 . 10538) (semantic-list 10458 . 10506) (punctuation 10456 . 10457) (semantic-list 10453 . 10455) (symbol 10443 . 10453) (punctuation 10441 . 10442) (punctuation 10440 . 10441) (symbol 10439 . 10440) (punctuation 10438 . 10439) (symbol 10432 . 10438) (semantic-list 10417 . 10431) (symbol 10401 . 10417) (string 10418 . 10430) (semantic-list 10352 . 10398) (punctuation 10350 . 10351) (semantic-list 10347 . 10349) (symbol 10339 . 10347) (punctuation 10337 . 10338) (punctuation 10336 . 10337) (symbol 10335 . 10336) (punctuation 10334 . 10335) (symbol 10328 . 10334) (semantic-list 10313 . 10327) (symbol 10297 . 10313) (string 10314 . 10326) (punctuation 10013 . 10014) (punctuation 9680 . 9681) (punctuation 9216 . 9217) (punctuation 8869 . 8870) (punctuation 8851 . 8852) (punctuation 8850 . 8851) (punctuation 8849 . 8850) (punctuation 8848 . 8849) (symbol 8847 . 8848) (punctuation 8846 . 8847) (symbol 8840 . 8846) (punctuation 8834 . 8835) (symbol 8829 . 8834) (punctuation 8828 . 8829) (punctuation 8827 . 8828) (symbol 8814 . 8827) (punctuation 8813 . 8814) (punctuation 8812 . 8813) (punctuation 8811 . 8812) (symbol 8810 . 8811) (punctuation 8809 . 8810) (symbol 8802 . 8809) (punctuation 8801 . 8802) (punctuation 8800 . 8801) (symbol 8794 . 8800) (punctuation 8793 . 8794) (punctuation 8787 . 8788) (punctuation 8786 . 8787) (symbol 8780 . 8785) (punctuation 8779 . 8780) (punctuation 8778 . 8779) (punctuation 8777 . 8778) (symbol 8760 . 8777) (punctuation 8758 . 8759) (symbol 8757 . 8758) (punctuation 8756 . 8757) (symbol 8744 . 8756) (punctuation 8743 . 8744) (punctuation 8742 . 8743) (symbol 8736 . 8742) (punctuation 8730 . 8731) (symbol 8721 . 8730) (punctuation 8720 . 8721) (punctuation 8719 . 8720) (symbol 8716 . 8719) (TYPENAME 8707 . 8715) (punctuation 8703 . 8704) (symbol 8702 . 8703) (CLASS 8696 . 8701) (punctuation 8695 . 8696) (TEMPLATE 8686 . 8694) (punctuation 8605 . 8606) (punctuation 8587 . 8588) (punctuation 8586 . 8587) (punctuation 8585 . 8586) (punctuation 8584 . 8585) (symbol 8583 . 8584) (punctuation 8582 . 8583) (symbol 8576 . 8582) (punctuation 8570 . 8571) (symbol 8565 . 8570) (punctuation 8564 . 8565) (punctuation 8563 . 8564) (symbol 8550 . 8563) (punctuation 8549 . 8550) (punctuation 8548 . 8549) (punctuation 8547 . 8548) (symbol 8546 . 8547) (punctuation 8545 . 8546) (symbol 8538 . 8545) (punctuation 8537 . 8538) (punctuation 8536 . 8537) (symbol 8530 . 8536) (punctuation 8524 . 8525) (punctuation 8523 . 8524) (symbol 8517 . 8522) (punctuation 8516 . 8517) (punctuation 8515 . 8516) (punctuation 8514 . 8515) (symbol 8497 . 8514) (punctuation 8495 . 8496) (symbol 8494 . 8495) (punctuation 8493 . 8494) (symbol 8481 . 8493) (punctuation 8480 . 8481) (punctuation 8479 . 8480) (symbol 8473 . 8479) (punctuation 8467 . 8468) (symbol 8458 . 8467) (punctuation 8457 . 8458) (punctuation 8456 . 8457) (symbol 8453 . 8456) (TYPENAME 8444 . 8452) (punctuation 8440 . 8441) (symbol 8439 . 8440) (CLASS 8433 . 8438) (punctuation 8432 . 8433) (TEMPLATE 8423 . 8431) (punctuation 8334 . 8335) (punctuation 8316 . 8317) (punctuation 8315 . 8316) (punctuation 8314 . 8315) (punctuation 8313 . 8314) (symbol 8312 . 8313) (punctuation 8311 . 8312) (symbol 8305 . 8311) (punctuation 8299 . 8300) (symbol 8294 . 8299) (punctuation 8293 . 8294) (punctuation 8292 . 8293) (symbol 8279 . 8292) (punctuation 8278 . 8279) (punctuation 8277 . 8278) (punctuation 8276 . 8277) (symbol 8275 . 8276) (punctuation 8274 . 8275) (symbol 8267 . 8274) (punctuation 8266 . 8267) (punctuation 8265 . 8266) (symbol 8259 . 8265) (punctuation 8253 . 8254) (punctuation 8252 . 8253) (symbol 8246 . 8251) (punctuation 8245 . 8246) (punctuation 8244 . 8245) (punctuation 8243 . 8244) (symbol 8226 . 8243) (punctuation 8224 . 8225) (symbol 8223 . 8224) (punctuation 8222 . 8223) (symbol 8210 . 8222) (punctuation 8209 . 8210) (punctuation 8208 . 8209) (symbol 8202 . 8208) (punctuation 8201 . 8202) (punctuation 8195 . 8196) (symbol 8186 . 8195) (punctuation 8185 . 8186) (punctuation 8184 . 8185) (symbol 8181 . 8184) (TYPENAME 8172 . 8180) (punctuation 8168 . 8169) (symbol 8167 . 8168) (CLASS 8161 . 8166) (punctuation 8160 . 8161) (TEMPLATE 8151 . 8159) (punctuation 8068 . 8069) (punctuation 8050 . 8051) (punctuation 8049 . 8050) (punctuation 8048 . 8049) (punctuation 8047 . 8048) (symbol 8046 . 8047) (punctuation 8045 . 8046) (symbol 8039 . 8045) (punctuation 8033 . 8034) (symbol 8028 . 8033) (punctuation 8027 . 8028) (punctuation 8026 . 8027) (symbol 8013 . 8026) (punctuation 8012 . 8013) (punctuation 8011 . 8012) (punctuation 8010 . 8011) (symbol 8009 . 8010) (punctuation 8008 . 8009) (symbol 8001 . 8008) (punctuation 8000 . 8001) (punctuation 7999 . 8000) (symbol 7993 . 7999) (punctuation 7992 . 7993) (punctuation 7986 . 7987) (punctuation 7985 . 7986) (symbol 7979 . 7984) (punctuation 7978 . 7979) (punctuation 7977 . 7978) (punctuation 7976 . 7977) (symbol 7959 . 7976) (punctuation 7957 . 7958) (symbol 7956 . 7957) (punctuation 7955 . 7956) (symbol 7943 . 7955) (punctuation 7942 . 7943) (punctuation 7941 . 7942) (symbol 7935 . 7941) (punctuation 7934 . 7935) (punctuation 7928 . 7929) (symbol 7919 . 7928) (punctuation 7918 . 7919) (punctuation 7917 . 7918) (symbol 7914 . 7917) (TYPENAME 7905 . 7913) (punctuation 7901 . 7902) (symbol 7900 . 7901) (CLASS 7894 . 7899) (punctuation 7893 . 7894) (TEMPLATE 7884 . 7892) (punctuation 7038 . 7039) (punctuation 7037 . 7038) (punctuation 7036 . 7037) (punctuation 7035 . 7036) (punctuation 7023 . 7024) (punctuation 6992 . 6993) (symbol 6988 . 6992) (punctuation 6986 . 6987) (punctuation 6985 . 6986) (punctuation 6984 . 6985) (CLASS 6979 . 6984) (punctuation 6977 . 6978) (symbol 6974 . 6977) (CLASS 6968 . 6973) (punctuation 6966 . 6967) (symbol 6958 . 6966) (CLASS 6952 . 6957) (punctuation 6951 . 6952) (TEMPLATE 6942 . 6950) (punctuation 6537 . 6538) (symbol 6532 . 6537) (punctuation 6531 . 6532) (punctuation 6530 . 6531) (punctuation 6529 . 6530) (symbol 6528 . 6529) (punctuation 6527 . 6528) (symbol 6519 . 6527) (TYPENAME 6510 . 6518) (punctuation 6509 . 6510) (symbol 6503 . 6509) (punctuation 6499 . 6500) (symbol 6495 . 6499) (punctuation 6493 . 6494) (punctuation 6492 . 6493) (punctuation 6491 . 6492) (TYPENAME 6483 . 6491) (punctuation 6481 . 6482) (symbol 6475 . 6481) (TYPENAME 6466 . 6474) (punctuation 6464 . 6465) (symbol 6463 . 6464) (TYPENAME 6454 . 6462) (punctuation 6453 . 6454) (TEMPLATE 6444 . 6452) (punctuation 6050 . 6051) (punctuation 6020 . 6021) (punctuation 6019 . 6020) (symbol 6017 . 6019) (punctuation 6015 . 6016) (symbol 6014 . 6015) (punctuation 6013 . 6014) (symbol 5999 . 6013) (punctuation 5998 . 5999) (punctuation 5997 . 5998) (symbol 5991 . 5997) (punctuation 5989 . 5990) (symbol 5987 . 5988) (TYPENAME 5978 . 5986) (punctuation 5970 . 5971) (symbol 5966 . 5970) (punctuation 5965 . 5966) (punctuation 5964 . 5965) (punctuation 5963 . 5964) (symbol 5962 . 5963) (punctuation 5961 . 5962) (symbol 5935 . 5961) (punctuation 5934 . 5935) (punctuation 5933 . 5934) (symbol 5927 . 5933) (TYPENAME 5918 . 5926) (punctuation 5916 . 5917) (symbol 5913 . 5915) (TYPENAME 5904 . 5912) (punctuation 5896 . 5897) (symbol 5895 . 5896) (TYPENAME 5886 . 5894) (punctuation 5878 . 5879) (TEMPLATE 5869 . 5877) (punctuation 4855 . 4856) (punctuation 4854 . 4855) (punctuation 4853 . 4854) (punctuation 4852 . 4853) (symbol 4847 . 4852) (punctuation 4846 . 4847) (punctuation 4845 . 4846) (punctuation 4844 . 4845) (symbol 4843 . 4844) (punctuation 4842 . 4843) (symbol 4834 . 4842) (TYPENAME 4825 . 4833) (punctuation 4824 . 4825) (symbol 4818 . 4824) (punctuation 4790 . 4791) (symbol 4785 . 4790) (punctuation 4784 . 4785) (punctuation 4783 . 4784) (punctuation 4782 . 4783) (symbol 4781 . 4782) (punctuation 4780 . 4781) (symbol 4772 . 4780) (punctuation 4771 . 4772) (symbol 4762 . 4771) (punctuation 4761 . 4762) (punctuation 4760 . 4761) (symbol 4757 . 4760) (TYPENAME 4748 . 4756) (punctuation 4744 . 4745) (symbol 4743 . 4744) (punctuation 4741 . 4742) (symbol 4739 . 4740) (CLASS 4733 . 4738) (punctuation 4732 . 4733) (TEMPLATE 4723 . 4731) (punctuation 3340 . 3341) (punctuation 3339 . 3340) (semantic-list 3268 . 3338) (symbol 3265 . 3268) (punctuation 3329 . 3330) (punctuation 3328 . 3329) (punctuation 3263 . 3264) (symbol 3262 . 3263) (punctuation 3261 . 3262) (symbol 3255 . 3261) (punctuation 3329 . 3330) (punctuation 3328 . 3329) (INLINE 3248 . 3254) (punctuation 3329 . 3330) (punctuation 3328 . 3329) (punctuation 3052 . 3053) (punctuation 3051 . 3052) (punctuation 3050 . 3051) (semantic-list 2979 . 3049) (symbol 2976 . 2979) (punctuation 3040 . 3041) (punctuation 3039 . 3040) (punctuation 2974 . 2975) (symbol 2973 . 2974) (punctuation 2972 . 2973) (symbol 2966 . 2972) (punctuation 3040 . 3041) (punctuation 3039 . 3040) (INLINE 2959 . 2965) (punctuation 3040 . 3041) (punctuation 3039 . 3040) (punctuation 1736 . 1737) (punctuation 1707 . 1708) (symbol 1703 . 1707) (punctuation 1702 . 1703) (punctuation 1701 . 1702) (punctuation 1700 . 1701) (symbol 1695 . 1700) (punctuation 1694 . 1695) (punctuation 1693 . 1694) (punctuation 1692 . 1693) (symbol 1688 . 1692) (punctuation 1687 . 1688) (punctuation 1686 . 1687) (punctuation 1685 . 1686) (symbol 1683 . 1685) (punctuation 1682 . 1683) (symbol 1677 . 1682) (punctuation 1676 . 1677) (punctuation 1675 . 1676) (symbol 1672 . 1675) (TYPENAME 1663 . 1671) (punctuation 1662 . 1663) (symbol 1654 . 1662) (punctuation 1653 . 1654) (punctuation 1637 . 1638) (symbol 1628 . 1637) (punctuation 1627 . 1628) (punctuation 1626 . 1627) (symbol 1623 . 1626) (TYPENAME 1614 . 1622) (punctuation 1600 . 1601) (TYPENAME 1591 . 1599) (punctuation 1589 . 1590) (symbol 1588 . 1589) (punctuation 1586 . 1587) (symbol 1583 . 1585) (CLASS 1577 . 1582) (punctuation 1576 . 1577) (TEMPLATE 1567 . 1575) (semantic-list 1484 . 1494) (punctuation 1483 . 1484) (OPERATOR 1475 . 1483) (punctuation 1492 . 1493) (punctuation 1473 . 1474) (symbol 1467 . 1473) (punctuation 1492 . 1493) (semantic-list 1444 . 1454) (symbol 1438 . 1444) (punctuation 1452 . 1453) (punctuation 1420 . 1421) (DELETE 1414 . 1420) (punctuation 1412 . 1413) (semantic-list 1396 . 1411) (punctuation 1395 . 1396) (OPERATOR 1387 . 1395) (punctuation 1385 . 1386) (symbol 1379 . 1385) (punctuation 1375 . 1376) (DELETE 1369 . 1375) (punctuation 1367 . 1368) (semantic-list 1351 . 1366) (symbol 1345 . 1351) (symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/futures/Future.h" include (:system-flag t) nil [597 630])
            ("folly/futures/ThreadWheelTimekeeper.h" include (:system-flag t) nil [631 679])
            ("folly/Likely.h" include (:system-flag t) nil [680 705])
            ("folly" type
               (:members 
                  ( ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("Unit" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [800 819])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("bool" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [829 848])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("int" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [858 876])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("int64_t" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [886 908])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("std::string" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [918 944])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("double" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [954 975]))                  
                :type "namespace")
                nil [707 978])
            ("folly" type
               (:members 
                  ( ("futures" type
                       (:members 
                          ( ("sleep" function
                               (:arguments 
                                  ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1038 1051])
                                    ("tk" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1052 1067]))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [1019 1243]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [998 1246]))                  
                :type "namespace")
                nil [980 1247]))          
      :file "Future.cpp"
      :pointmax 1248
      :fsize 1247
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((TEMPLATE 945 . 953) (TEMPLATE 909 . 917) (TEMPLATE 877 . 885) (TEMPLATE 849 . 857) (TEMPLATE 820 . 828) (TEMPLATE 791 . 799)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [612 632])
            ("cassert" include (:system-flag t) nil [633 651])
            ("chrono" include (:system-flag t) nil [652 669])
            ("random" include (:system-flag t) nil [670 687])
            ("thread" include (:system-flag t) nil [688 705])
            ("folly/Baton.h" include (:system-flag t) nil [706 730])
            ("folly/Optional.h" include (:system-flag t) nil [731 758])
            ("folly/Random.h" include (:system-flag t) nil [759 784])
            ("folly/Traits.h" include (:system-flag t) nil [785 810])
            ("folly/futures/detail/Core.h" include (:system-flag t) nil [811 849])
            ("folly/futures/Timekeeper.h" include (:system-flag t) nil [850 887])
            ("FOLLY_FUTURE_USING_FIBER" variable (:constant-flag t) nil [936 960])
            ("folly" type
               (:members 
                  ( ("Timekeeper" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1063 1080])
                    ("detail" type
                       (:members 
                          ( ("FutureBatonType" type
                               (:typedef ("folly::Baton" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [1182 1221]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1082 1230])
                    ("detail" type
                       (:members 
                          ( ("getTimekeeperSingleton" function
                               (:prototype-flag t
                                :type ("std::shared_ptr" type
                                     (:template-specifier 
                                        ( ("Timekeeper" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [1251 1304])
                            ("CoreCallbackState" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("F" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [1524 1531])
                                    ("noexcept" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1626 1657]))                                          
                                        :type ("CoreCallbackState" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1610 1762])
                                    ("noexcept" function
                                       (:arguments 
                                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1826 1856]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1810 1985])
                                    ("CoreCallbackState" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [2052 2134])
                                    ("noexcept" function
                                       (:arguments 
                                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2212 2268]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2196 2363])
                                    ("setTry" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Try" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [2535 2543])
                                            ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2544 2546]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [2523 2593])
                                    ("setException" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("exception_wrapper" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2615 2634])
                                            ("" variable (:type ("ew" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2635 2638]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [2597 2692])
                                    ("private" label nil (reparse-symbol classsubparts) [2817 2825])
                                    ("" type
                                       (:members 
                                          ( ("func_" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2922 2930]))                                          
                                        :type "union")
                                        (reparse-symbol classsubparts) [2910 2935])
                                    ("promise_" variable (:type ("Promise" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [2938 2984]))                                  )
                                (reparse-symbol namespacesubparts) [1463 2987])
                            ("noexcept" function
                               (:arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3094 3211]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [3080 3307]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1232 3309])
                    ("core_" function
                       (:arguments 
                          ( ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3384 3390])
                            ("" variable (:type ("core_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3390 3396]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [3378 3425])
                    ("Future" function
                       (:constructor-flag t
                        :parent "Future"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3627 3631])
                            ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3632 3636]))                          
                        :type ("Future" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3609 3703])
                    ("Future" function
                       (:template 
                          ( ("T2" type (:type "class") nil nil))                          
                        :type ("Future" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :typemodifiers ("typename")
                                :type ("std::enable_if::type" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3765 3827]))                          
                        :parent "Future"
                        :constructor-flag t)
                        (reparse-symbol namespacesubparts) [3724 3876])
                    ("Future" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :parent "Future"
                        :destructor-flag t)
                        (reparse-symbol namespacesubparts) [3878 3933])
                    ("detach" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [3935 4049])
                    ("throwIfInvalid" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :parent "Future"
                        :methodconst-flag t)
                        (reparse-symbol namespacesubparts) [4051 4147])
                    ("setCallback_" function
                       (:template 
                          ( ("F" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4216 4219])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4220 4225]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [4168 4294])
                    ("unwrap" function
                       (:parent "Future"
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4451 4587])
                    ("thenImplementation" function
                       (:parent "Future"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4868 4871])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4872 4877])
                            ("" variable (:type ("detail::argResult" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4878 4896])
                            ("" variable (:type ("isTry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4896 4902])
                            ("" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4903 4905])
                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4906 4911]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4833 7426])
                    ("thenImplementation" function
                       (:parent "Future"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7700 7703])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7704 7709])
                            ("" variable (:type ("detail::argResult" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7710 7728])
                            ("" variable (:type ("isTry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7728 7734])
                            ("" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7735 7737])
                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7738 7743]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7665 8732])
                    ("then" function
                       (:parent "Future"
                        :arguments ((nil variable (:pointer (("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8884 8889]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [8888 8892])) :type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8867 8893]) ("instance" variable (:pointer 1 :type ("Caller" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) #<overlay from 8894 to 8911 in Future-inl.h>))
                        :type "int")
                        (reparse-symbol namespacesubparts) [8851 9191])
                    ("then" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("Unit" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [9193 9271])
                    ("onError" function
                       (:parent "Future"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9515 9518])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9519 9524]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [9491 10227])
                    ("onError" function
                       (:parent "Future"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10478 10481])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10482 10487]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [10454 11361])
                    ("ensure" function
                       (:template 
                          ( ("F" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11429 11432])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11433 11438]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [11382 11584])
                    ("onTimeout" function
                       (:template 
                          ( ("F" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11655 11668])
                            ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11669 11672])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11673 11678])
                            ("tk" variable
                               (:pointer 1
                                :type ("Timekeeper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11679 11694]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [11605 11820])
                    ("onError" function
                       (:parent "Future"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12067 12070])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12071 12076]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12043 12858])
                    ("onError" function
                       (:parent "Future"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13106 13109])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13110 13115]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13082 13681])
                    ("value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::add_lvalue_reference::type" type (:type "class") nil nil)
                        :typemodifiers ("typename")
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [13683 13823])
                    ("value" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::add_lvalue_reference::type" type (:type "class") nil nil)
                        :typemodifiers ("typename")
                        :parent "Future"
                        :methodconst-flag t)
                        (reparse-symbol namespacesubparts) [13825 13977])
                    ("getTry" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Try" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [13979 14076])
                    ("getTryVia" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Try" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("e" variable
                               (:pointer 1
                                :type ("DrivableExecutor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14126 14146]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [14078 14180])
                    ("poll" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Optional" type
                             (:template-specifier 
                                ( ("Try" type (:template-specifier 
                                    ( ("T" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [14182 14337])
                    ("isReady" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :parent "Future"
                        :methodconst-flag t)
                        (reparse-symbol namespacesubparts) [15044 15143])
                    ("hasValue" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [15145 15224])
                    ("hasException" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "bool"
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [15226 15313])
                    ("raise" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("exception" variable (:type ("exception_wrapper" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15356 15384]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [15315 15426])
                    ("makeFuture" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15510 15513])
                            ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15514 15516]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [15499 15596])
                    ("makeFuture" function
                       (:typemodifiers ("inline")
                        :type ("Future" type
                             (:template-specifier 
                                ( ("Unit" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [15598 15697])
                    ("makeFutureWith" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15920 15923])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15924 15929]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15900 16289])
                    ("makeFutureWith" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16569 16572])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16573 16578]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [16549 16784])
                    ("makeFuture" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("e" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::exception_ptr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16826 16854]))                          )
                        (reparse-symbol namespacesubparts) [16786 16890])
                    ("makeFuture" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("ew" variable (:type ("exception_wrapper" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16932 16953]))                          )
                        (reparse-symbol namespacesubparts) [16892 17001])
                    ("makeFuture" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("E" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("e" variable
                               (:reference 1
                                :constant-flag t
                                :type ("E" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17150 17161]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [17003 17224])
                    ("makeFuture" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Try" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [17266 17274])
                            ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17275 17277]))                          )
                        (reparse-symbol namespacesubparts) [17226 17336])
                    ("via" function
                       (:arguments 
                          ( ("executor" variable
                               (:pointer 1
                                :type ("Executor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17362 17381])
                            ("priority" variable (:type ("int8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17382 17398]))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("Unit" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [17345 17449])
                    ("mapSetCallback" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("InputIterator" type (:type "class") nil nil)
                            ("F" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("first" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17589 17609])
                            ("last" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17610 17629])
                            ("func" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17630 17637]))                          )
                        (reparse-symbol namespacesubparts) [17520 17782])
                    ("collectAll" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Fs" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17945 17949])
                            ("" variable (:type ("fs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17953 17956]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [17929 18213])
                    ("collectAll" function
                       (:arguments 
                          ( ("first" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18384 18404])
                            ("last" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18405 18424]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [18373 18964])
                    ("detail" type
                       (:members 
                          ( ("CollectContext" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("Nothing" type
                                       (:members 
                                          ( ("Nothing" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [19095 19107]))                                                  
                                                :type ("Nothing" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [19087 19110]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [19057 19115])
                                    ("std::conditional::type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [19134 19225])
                                    ("std::conditional::type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [19252 19356])
                                    ("CollectContext" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19384 19393]))                                          
                                        :type ("CollectContext" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [19369 19408])
                                    ("CollectContext" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [19411 19801])
                                    ("setPartialResult" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("i" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19833 19842])
                                            ("t" variable
                                               (:reference 1
                                                :type ("Try" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [19843 19853]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [19804 19897])
                                    ("p" variable (:type ("Promise" type
                                         (:template-specifier 
                                            ( ("Result" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [19900 19918])
                                    ("result" variable (:type ("InternalResult" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19921 19943])
                                    ("threw" variable (:type ("std::atomic" type
                                         (:template-specifier 
                                            ( ("bool" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [19946 19978]))                                  )
                                (reparse-symbol namespacesubparts) [19009 19981]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [18989 19984])
                    ("collect" function
                       (:arguments 
                          ( ("first" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20146 20166])
                            ("last" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20167 20186]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [20138 20674])
                    ("collect" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Fs" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [20828 20832])
                            ("" variable (:type ("fs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20836 20839]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [20815 21090])
                    ("collectAny" function
                       (:arguments 
                          ( ("first" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21305 21325])
                            ("last" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21326 21345]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [21294 21825])
                    ("collectAnyWithoutException" function
                       (:arguments 
                          ( ("first" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22032 22052])
                            ("last" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22053 22072]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [22005 22828])
                    ("collectN" function
                       (:arguments 
                          ( ("first" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23010 23030])
                            ("last" variable (:type ("InputIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23031 23050])
                            ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23051 23060]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [23001 23985])
                    ("reduce" function
                       (:template 
                          ( ("It" type (:type "class") nil nil)
                            ("T" type (:type "class") nil nil)
                            ("F" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("first" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24064 24073])
                            ("last" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24074 24082])
                            ("" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24083 24086])
                            ("" variable (:type ("initial" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24087 24095])
                            ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [24096 24099])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24100 24105]))                          )
                        (reparse-symbol namespacesubparts) [24009 25127])
                    ("window" function
                       (:template 
                          ( ("Collection" type (:type "class") nil nil)
                            ("F" type (:type "class") nil nil)
                            ("ItT" type (:type "class") nil nil)
                            ("Result" type (:type "class") nil nil))                          
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("Future" type (:template-specifier 
                                    ( ("Result" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("input" variable (:type ("Collection" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25250 25267])
                            ("func" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25268 25275])
                            ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25276 25285]))                          )
                        (reparse-symbol namespacesubparts) [25153 26508])
                    ("reduce" function
                       (:template 
                          ( ("I" type (:type "class") nil nil)
                            ("F" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("I" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("I" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26596 26599])
                            ("" variable (:type ("initial" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26600 26608])
                            ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26609 26612])
                            ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26613 26618]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [26540 26880])
                    ("unorderedReduce" function
                       (:template 
                          ( ("It" type (:type "class") nil nil)
                            ("T" type (:type "class") nil nil)
                            ("F" type (:type "class") nil nil)
                            ("ItT" type (:type "class") nil nil)
                            ("Arg" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("first" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26999 27008])
                            ("last" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27009 27017])
                            ("initial" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27018 27028])
                            ("func" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27029 27036]))                          )
                        (reparse-symbol namespacesubparts) [26913 28859])
                    ("within" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28919 28932])
                            ("tk" variable
                               (:pointer 1
                                :type ("Timekeeper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [28933 28948]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [28872 28990])
                    ("within" function
                       (:template 
                          ( ("E" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29058 29071])
                            ("e" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29072 29076])
                            ("tk" variable
                               (:pointer 1
                                :type ("Timekeeper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [29077 29092]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [29011 30126])
                    ("delayed" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30188 30201])
                            ("tk" variable
                               (:pointer 1
                                :type ("Timekeeper" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [30202 30217]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [30140 30409])
                    ("detail" type
                       (:members 
                          ( ("waitImpl" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("f" variable
                                       (:reference 1
                                        :type ("Future" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [30464 30477]))                                  )
                                (reparse-symbol namespacesubparts) [30431 30681])
                            ("waitImpl" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("f" variable
                                       (:reference 1
                                        :type ("Future" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [30716 30729])
                                    ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30730 30743]))                                  )
                                (reparse-symbol namespacesubparts) [30683 31159])
                            ("waitViaImpl" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("f" variable
                                       (:reference 1
                                        :type ("Future" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [31197 31210])
                                    ("e" variable
                                       (:pointer 1
                                        :type ("DrivableExecutor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [31211 31231]))                                  )
                                (reparse-symbol namespacesubparts) [31161 31580]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [30411 31583])
                    ("get" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [32312 32389])
                    ("get" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32427 32440]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [32391 32544])
                    ("getVia" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("e" variable
                               (:pointer 1
                                :type ("DrivableExecutor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [32585 32605]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [32546 32649])
                    ("detail" type
                       (:members 
                          ( ("TryEquals" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("equals" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("t1" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Try" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [32735 32752])
                                            ("t2" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Try" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [32753 32770]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [32716 32817]))                                  )
                                (reparse-symbol namespacesubparts) [32672 32822]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [32651 32824])
                    ("willEqual" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("bool" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("f" variable
                               (:reference 1
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [32879 32892]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [32826 33161])
                    ("filter" function
                       (:template 
                          ( ("F" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("T" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33229 33232])
                            ("" variable (:type ("predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33233 33243]))                          
                        :parent "Future")
                        (reparse-symbol namespacesubparts) [33182 33434])
                    ("when" function
                       (:template 
                          ( ("F" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("Unit" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("p" variable (:type "bool") (reparse-symbol arg-sub-list) [33480 33487])
                            ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33488 33491])
                            ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33492 33498]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [33436 33563])
                    ("whileDo" function
                       (:template 
                          ( ("P" type (:type "class") nil nil)
                            ("F" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("Unit" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("P" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33614 33617])
                            ("" variable (:type ("predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33618 33628])
                            ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33629 33632])
                            ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33633 33639]))                          )
                        (reparse-symbol namespacesubparts) [33565 33926])
                    ("times" function
                       (:template 
                          ( ("F" type (:type "class") nil nil))                          
                        :type ("Future" type
                             (:template-specifier 
                                ( ("Unit" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("n" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol arg-sub-list) [33966 33978])
                            ("" variable
                               (:reference 1
                                :type ("F" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [33979 33982])
                            ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33983 33989]))                          )
                        (reparse-symbol namespacesubparts) [33928 34169])
                    ("futures" type
                       (:members 
                          ( ("map" function
                               (:template 
                                  ( ("It" type (:type "class") nil nil)
                                    ("F" type (:type "class") nil nil)
                                    ("ItT" type (:type "class") nil nil)
                                    ("Result" type (:type "class") nil nil))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("Future" type (:template-specifier 
                                            ( ("Result" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("first" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34281 34290])
                                    ("last" variable (:type ("It" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34291 34299])
                                    ("func" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34300 34307]))                                  )
                                (reparse-symbol namespacesubparts) [34193 34467]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [34171 34469])
                    ("futures" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("retrying_policy_raw_tag" type (:type "struct") (reparse-symbol namespacesubparts) [34512 34546])
                                    ("retrying_policy_fut_tag" type (:type "struct") (reparse-symbol namespacesubparts) [34547 34581])
                                    ("retrying_policy_traits" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("ew" variable
                                               (:default-value "exception_wrapper"
                                                :type "int")
                                                (reparse-symbol classsubparts) [34647 34670])
                                            ("FOLLY_CREATE_HAS_MEMBER_FN_TRAITS" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("has_op_call" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34707 34719]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [34673 34732])
                                            ("has_op" variable (:type "int") (reparse-symbol classsubparts) [34957 34970])
                                            ("has_op" variable (:type "int") (reparse-symbol classsubparts) [34988 35009])
                                            ("type" variable (:type "int") (reparse-symbol classsubparts) [35188 35193]))                                          )
                                        (reparse-symbol namespacesubparts) [34583 35196])
                                    ("retryingImpl" function
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil)
                                            ("FF" type (:type "class") nil nil)
                                            ("Prom" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("k" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35262 35271])
                                            ("" variable
                                               (:reference 1
                                                :type ("Policy" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [35272 35280])
                                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35281 35283])
                                            ("" variable
                                               (:reference 1
                                                :type ("FF" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [35284 35288])
                                            ("" variable (:type ("ff" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35289 35292])
                                            ("prom" variable (:type ("Prom" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35293 35303]))                                          )
                                        (reparse-symbol namespacesubparts) [35198 36069])
                                    ("retrying" function
                                       (:arguments 
                                          ( ("k" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36156 36165])
                                            ("" variable
                                               (:reference 1
                                                :type ("Policy" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36166 36174])
                                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36175 36177])
                                            ("" variable
                                               (:reference 1
                                                :type ("FF" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36178 36182])
                                            ("" variable (:type ("ff" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36183 36186]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [36142 36440])
                                    ("retrying" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Policy" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36527 36535])
                                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36536 36538])
                                            ("" variable
                                               (:reference 1
                                                :type ("FF" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36539 36543])
                                            ("" variable (:type ("ff" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36544 36547])
                                            ("" variable (:type ("retrying_policy_raw_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36548 36572]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [36513 36753])
                                    ("retrying" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Policy" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36840 36848])
                                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36849 36851])
                                            ("" variable
                                               (:reference 1
                                                :type ("FF" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [36852 36856])
                                            ("" variable (:type ("ff" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36857 36860])
                                            ("" variable (:type ("retrying_policy_fut_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [36861 36885]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [36826 36958])
                                    ("retryingJitteredExponentialBackoffDur" function
                                       (:template 
                                          ( ("URNG" type (:type "class") nil nil))                                          
                                        :type ("Duration" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37106 37115])
                                            ("backoff_min" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37120 37141])
                                            ("backoff_max" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37146 37167])
                                            ("jitter_param" variable (:type "double") (reparse-symbol arg-sub-list) [37172 37192])
                                            ("rng" variable
                                               (:reference 1
                                                :type ("URNG" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37197 37207]))                                          )
                                        (reparse-symbol namespacesubparts) [37032 37480])
                                    ("retryingPolicyCappedJitteredExponentialBackoff" function
                                       (:arguments 
                                          ( ("max_tries" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37632 37649])
                                            ("backoff_min" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37654 37675])
                                            ("backoff_max" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37680 37701])
                                            ("jitter_param" variable (:type "double") (reparse-symbol arg-sub-list) [37706 37726])
                                            ("" variable
                                               (:reference 1
                                                :type ("URNG" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37731 37737])
                                            ("" variable (:type ("rng" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37738 37742])
                                            ("" variable
                                               (:reference 1
                                                :type ("Policy" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37747 37755])
                                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37756 37758]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [37580 38453])
                                    ("retryingPolicyCappedJitteredExponentialBackoff" function
                                       (:arguments 
                                          ( ("max_tries" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38605 38622])
                                            ("backoff_min" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38627 38648])
                                            ("backoff_max" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38653 38674])
                                            ("jitter_param" variable (:type "double") (reparse-symbol arg-sub-list) [38679 38699])
                                            ("" variable
                                               (:reference 1
                                                :type ("URNG" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [38704 38710])
                                            ("" variable (:type ("rng" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38711 38715])
                                            ("" variable
                                               (:reference 1
                                                :type ("Policy" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [38720 38728])
                                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38729 38731])
                                            ("" variable (:type ("retrying_policy_raw_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38736 38760]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [38553 39075])
                                    ("retryingPolicyCappedJitteredExponentialBackoff" function
                                       (:arguments 
                                          ( ("max_tries" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39227 39244])
                                            ("backoff_min" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39249 39270])
                                            ("backoff_max" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39275 39296])
                                            ("jitter_param" variable (:type "double") (reparse-symbol arg-sub-list) [39301 39321])
                                            ("" variable
                                               (:reference 1
                                                :type ("URNG" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [39326 39332])
                                            ("" variable (:type ("rng" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39333 39337])
                                            ("" variable
                                               (:reference 1
                                                :type ("Policy" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [39342 39350])
                                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39351 39353])
                                            ("" variable (:type ("retrying_policy_fut_tag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39358 39382]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [39175 39581]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [34492 39583])
                            ("retrying" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Policy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39670 39678])
                                    ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39679 39681])
                                    ("" variable
                                       (:reference 1
                                        :type ("FF" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39682 39686])
                                    ("" variable (:type ("ff" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39687 39690]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [39656 39843])
                            ("retryingPolicyBasic" function
                               (:arguments 
                                  ( ("max_tries" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39931 39948]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [39906 40028])
                            ("retryingPolicyCappedJitteredExponentialBackoff" function
                               (:arguments 
                                  ( ("max_tries" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40180 40197])
                                    ("backoff_min" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40202 40223])
                                    ("backoff_max" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40228 40249])
                                    ("jitter_param" variable (:type "double") (reparse-symbol arg-sub-list) [40254 40274])
                                    ("" variable
                                       (:reference 1
                                        :type ("URNG" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40279 40285])
                                    ("" variable (:type ("rng" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40286 40290])
                                    ("" variable
                                       (:reference 1
                                        :type ("Policy" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40295 40303])
                                    ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40304 40306]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [40128 40594])
                            ("retryingPolicyCappedJitteredExponentialBackoff" function
                               (:arguments 
                                  ( ("max_tries" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40717 40734])
                                    ("backoff_min" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40739 40760])
                                    ("backoff_max" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [40765 40786])
                                    ("jitter_param" variable (:type "double") (reparse-symbol arg-sub-list) [40791 40811]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [40665 41059]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [34471 41062])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("Unit" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [41145 41164])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("bool" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [41181 41200])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("int" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [41217 41235])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("int64_t" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [41252 41274])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("std::string" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [41291 41317])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("double" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [41334 41355]))                  
                :type "namespace")
                nil [1044 41358]))          
      :file "Future-inl.h"
      :pointmax 41378
      :fsize 41377
      :lastmodtime '(22900 3087 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("FOLLY_FUTURE_USING_FIBER" . ((number "0" 961 . 962)))
          )
))
  :file "!Users!ric!Downloads!trunk!thirdparty!folly!folly!futures!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
