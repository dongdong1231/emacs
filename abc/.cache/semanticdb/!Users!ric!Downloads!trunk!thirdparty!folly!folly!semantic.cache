;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/Traits.h" include (:system-flag t) nil [611 636])
            ("array" include (:system-flag t) nil [637 653])
            ("type_traits" include (:system-flag t) nil [654 676])
            ("utility" include (:system-flag t) nil [677 695])
            ("folly" type
               (:members 
                  ( ("array_detail" type
                       (:members 
                          ( ("is_ref_wrapper" type
                               (:superclasses 
                                  ( ("std::false_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [761 804])
                            ("is_ref_wrapper" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("std::true_type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("std::reference_wrapper" type (:template-specifier 
                                      ( ("T" type nil nil nil))                                      ) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [805 896])
                            ("return_type_helper" type
                               (:members 
                                  ( ("type" variable
                                       (:default-value "D"
                                        :type "int")
                                        (reparse-symbol classsubparts) [1083 1092]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1047 1095]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [716 1518])
                    ("make_array" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("TList" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1645 1652])
                            ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1656 1658]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1634 1816]))                  
                :type "namespace")
                nil [697 1819]))          
      :file "Array.h"
      :pointmax 1830
      :fsize 1829
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((punctuation 1654 . 1655) (punctuation 1653 . 1654) (punctuation 1652 . 1653) (punctuation 1651 . 1652) (punctuation 1632 . 1633) (punctuation 1631 . 1632) (punctuation 1630 . 1631) (punctuation 1629 . 1630) (symbol 1624 . 1629) (punctuation 1622 . 1623) (symbol 1621 . 1622) (punctuation 1620 . 1621) (symbol 1609 . 1620) (punctuation 1608 . 1609) (punctuation 1607 . 1608) (symbol 1595 . 1607) (symbol 1585 . 1594) (punctuation 1583 . 1584) (symbol 1578 . 1583) (punctuation 1576 . 1577) (punctuation 1575 . 1576) (punctuation 1574 . 1575) (TYPENAME 1566 . 1574) (punctuation 1564 . 1565) (VOID 1560 . 1564) (punctuation 1558 . 1559) (symbol 1556 . 1557) (TYPENAME 1547 . 1555) (punctuation 1546 . 1547) (TEMPLATE 1537 . 1545) (punctuation 1515 . 1516) (punctuation 1514 . 1515) (semantic-list 1507 . 1514) (punctuation 1506 . 1507) (punctuation 1505 . 1506) (punctuation 1504 . 1505) (SIZEOF 1498 . 1504) (punctuation 1496 . 1497) (symbol 1492 . 1496) (punctuation 1491 . 1492) (punctuation 1490 . 1491) (punctuation 1489 . 1490) (punctuation 1488 . 1489) (punctuation 1487 . 1488) (punctuation 1486 . 1487) (symbol 1481 . 1486) (punctuation 1479 . 1480) (symbol 1478 . 1479) (punctuation 1477 . 1478) (symbol 1459 . 1477) (TYPENAME 1450 . 1458) (punctuation 1449 . 1450) (symbol 1444 . 1449) (punctuation 1438 . 1439) (punctuation 1437 . 1438) (symbol 1434 . 1437) (punctuation 1432 . 1433) (symbol 1420 . 1431) (USING 1414 . 1419) (punctuation 1412 . 1413) (symbol 1407 . 1412) (punctuation 1405 . 1406) (punctuation 1404 . 1405) (punctuation 1403 . 1404) (TYPENAME 1395 . 1403) (punctuation 1393 . 1394) (symbol 1392 . 1393) (TYPENAME 1383 . 1391) (punctuation 1382 . 1383) (TEMPLATE 1373 . 1381) (punctuation 1370 . 1371) (semantic-list 1167 . 1370) (punctuation 1165 . 1166) (punctuation 1164 . 1165) (punctuation 1163 . 1164) (punctuation 1162 . 1163) (symbol 1157 . 1162) (punctuation 1155 . 1156) (VOID 1151 . 1155) (punctuation 1150 . 1151) (symbol 1132 . 1150) (STRUCT 1125 . 1131) (punctuation 1123 . 1124) (symbol 1118 . 1123) (punctuation 1116 . 1117) (punctuation 1115 . 1116) (punctuation 1114 . 1115) (TYPENAME 1106 . 1114) (punctuation 1105 . 1106) (TEMPLATE 1096 . 1104) (USING 1077 . 1082) (punctuation 1045 . 1046) (punctuation 1044 . 1045) (punctuation 1043 . 1044) (punctuation 1042 . 1043) (TYPENAME 1034 . 1042) (punctuation 1032 . 1033) (symbol 1031 . 1032) (TYPENAME 1022 . 1030) (punctuation 1021 . 1022) (TEMPLATE 1012 . 1020) (punctuation 1009 . 1010) (punctuation 1008 . 1009) (punctuation 1007 . 1008) (symbol 1003 . 1007) (punctuation 1002 . 1003) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (symbol 999 . 1000) (punctuation 998 . 999) (symbol 993 . 998) (punctuation 992 . 993) (punctuation 991 . 992) (symbol 988 . 991) (TYPENAME 979 . 987) (punctuation 978 . 979) (symbol 964 . 978) (punctuation 963 . 964) (symbol 955 . 963) (punctuation 954 . 955) (punctuation 953 . 954) (symbol 948 . 953) (punctuation 942 . 943) (symbol 926 . 941) (USING 920 . 925) (punctuation 918 . 919) (symbol 917 . 918) (TYPENAME 908 . 916) (punctuation 907 . 908) (TEMPLATE 898 . 906) (punctuation 759 . 760) (TYPENAME 751 . 759) (punctuation 750 . 751) (TEMPLATE 741 . 749) (symbol 605 . 609) (symbol 598 . 604) (punctuation 597 . 598)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("functional" include (:system-flag t) nil [612 633])
            ("iosfwd" include (:system-flag t) nil [634 651])
            ("memory" include (:system-flag t) nil [652 669])
            ("string" include (:system-flag t) nil [670 687])
            ("utility" include (:system-flag t) nil [688 706])
            ("folly/Range.h" include (:system-flag t) nil [721 745])
            ("folly/IPAddressException.h" include (:system-flag t) nil [746 783])
            ("folly/IPAddressV4.h" include (:system-flag t) nil [784 814])
            ("folly/IPAddressV6.h" include (:system-flag t) nil [815 845])
            ("folly/detail/IPAddress.h" include (:system-flag t) nil [846 881])
            ("folly" type
               (:members 
                  ( ("IPAddress" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [902 918])
                    ("CIDRNetwork" type
                       (:typedef ("std::pair" type
                             (:template-specifier 
                                ( ("IPAddress" type nil nil nil)
                                  ("uint8_t" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [958 1008])
                    ("IPAddress" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1971 1978])
                            ("validate" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("ip" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2072 2087]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2051 2088])
                            ("createIPv4" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("addr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IPAddress" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2312 2334]))                                  
                                :type ("IPAddressV4" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2282 2335])
                            ("createIPv6" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("addr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IPAddress" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2463 2485]))                                  
                                :type ("IPAddressV6" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2433 2486])
                            ("createNetwork" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("ipSlashCidr" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3044 3068])
                                    ("defaultCidr" variable
                                       (:default-value "-1"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [3069 3089])
                                    ("mask" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [3091 3107]))                                  
                                :type ("CIDRNetwork" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3006 3109])
                            ("networkToString" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("network" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CIDRNetwork" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3342 3369]))                                  
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3307 3370])
                            ("fromBinary" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("bytes" variable (:type ("ByteRange" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3569 3585]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3541 3586])
                            ("fromLong" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("src" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3731 3744]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3705 3745])
                            ("fromLongHBO" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("src" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3817 3830]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3788 3831])
                            ("longestCommonPrefix" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("one" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CIDRNetwork" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3961 3984])
                                    ("two" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CIDRNetwork" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4026 4049]))                                  
                                :type ("CIDRNetwork" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3922 4050])
                            ("IPAddress" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4110 4122])
                            ("IPAddress" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ip" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4512 4527]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4502 4528])
                            ("IPAddress" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("addr" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("sockaddr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4681 4702]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4671 4703])
                            ("IPAddress" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ipV4Addr" variable
                                       (:constant-flag t
                                        :type ("IPAddressV4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4775 4802]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4765 4803])
                            ("IPAddress" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("addr" variable
                                       (:constant-flag t
                                        :type ("in_addr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4831 4850]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4821 4851])
                            ("IPAddress" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("ipV6Addr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IPAddressV6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4923 4951]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4913 4952])
                            ("IPAddress" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("addr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("in6_addr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4980 5001]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4970 5002])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("ipV4Addr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IPAddressV4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5055 5083]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5034 5084])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("ipV6Addr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IPAddressV6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5137 5165]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5116 5166])
                            ("asV4" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("IPAddressV4" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5474 5592])
                            ("asV6" function
                               (:methodconst-flag t
                                :constant-flag t
                                :type ("IPAddressV6" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5727 5845])
                            ("family" function
                               (:methodconst-flag t
                                :type ("sa_family_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5886 5932])
                            ("toSockaddrStorage" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("dest" variable
                                       (:pointer 1
                                        :type ("sockaddr_storage" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6015 6038])
                                    ("port" variable
                                       (:default-value "0"
                                        :type ("uint16_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6039 6056]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [5993 6857])
                            ("inSubnet" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("ipSlashCidr" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7531 7555]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7517 7562])
                            ("inSubnet" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("subnet" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IPAddress" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7832 7856])
                                    ("cidr" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7857 7870]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7818 7877])
                            ("inSubnetWithMask" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("subnet" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("IPAddress" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8255 8279])
                                    ("mask" variable (:type ("ByteRange" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8280 8295]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8233 8302])
                            ("isIPv4Mapped" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [8358 8433])
                            ("empty" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [8483 8536])
                            ("isV4" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [8692 8742])
                            ("isV6" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [8799 8850])
                            ("isZero" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [8901 8999])
                            ("bitCount" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9054 9172])
                            ("byteCount" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9227 9284])
                            ("getNthMSBit" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("bitIndex" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9349 9365]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9332 9440])
                            ("getNthMSByte" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("byteIndex" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9510 9527]))                                  
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9489 9534])
                            ("getNthLSBit" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("bitIndex" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9582 9598]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [9565 9661])
                            ("getNthLSByte" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("byteIndex" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9714 9731]))                                  
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9693 9797])
                            ("toJson" function
                               (:methodconst-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10100 10205])
                            ("hash" function
                               (:methodconst-flag t
                                :type ("std::size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10230 10329])
                            ("isLoopback" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [10389 10499])
                            ("isLinkLocal" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [10559 10672])
                            ("isLinkLocalBroadcast" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [10732 10872])
                            ("isNonroutable" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [11083 11202])
                            ("isPrivate" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [11347 11454])
                            ("isMulticast" function
                               (:methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [11514 11627])
                            ("mask" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("numBits" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11880 11896]))                                  
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11865 12013])
                            ("str" function
                               (:methodconst-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12198 12294])
                            ("toFullyQualified" function
                               (:methodconst-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12533 12668])
                            ("toFullyQualifiedAppend" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("out" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12763 12780]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [12735 12903])
                            ("version" function
                               (:methodconst-flag t
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12937 13041])
                            ("bytes" function
                               (:methodconst-flag t
                                :pointer 1
                                :constant-flag t
                                :type "unsigned char")
                                (reparse-symbol classsubparts) [13110 13203])
                            ("private" label nil (reparse-symbol classsubparts) [13206 13214])
                            ("asV4Throw" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [13230 13253])
                            ("asV6Throw" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [13269 13292])
                            ("IPAddressV46" type
                               (:members 
                                  ( ("ipV4Addr" variable (:type ("IPAddressV4" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13329 13350])
                                    ("ipV6Addr" variable (:type ("IPAddressV6" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13355 13376])
                                    ("IPAddressV46" function (:type "int") (reparse-symbol classsubparts) [13408 13480])
                                    ("IPAddressV46" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("addr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("IPAddressV4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [13507 13531]))                                          
                                        :type ("IPAddress" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13494 13550])
                                    ("IPAddressV46" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("addr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("IPAddressV6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [13577 13601]))                                          
                                        :type ("IPAddress" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [13564 13620]))                                  
                                :type "union")
                                (reparse-symbol classsubparts) [13296 13638])
                            ("IPAddressV46" type
                               (:typedef ("IPAddressV46" type (:type "union") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [13296 13638])
                            ("addr_" variable (:type ("IPAddressV46" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13641 13660])
                            ("family_" variable (:type ("sa_family_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13663 13683]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1952 13686])
                    ("hash_value" function
                       (:prototype-flag t
                        :arguments 
                          ( ("addr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13810 13832]))                          
                        :type ("std::size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13787 13833])
                    ("<<" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("os" variable
                               (:reference 1
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13859 13876])
                            ("addr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13877 13899]))                          
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13834 13900])
                    ("toAppend" function
                       (:prototype-flag t
                        :arguments 
                          ( ("addr" variable (:type ("IPAddress" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13989 14004])
                            ("result" variable
                               (:pointer 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14005 14025]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [13975 14026])
                    ("toAppend" function
                       (:prototype-flag t
                        :arguments 
                          ( ("addr" variable (:type ("IPAddress" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14041 14056])
                            ("result" variable
                               (:pointer 1
                                :type ("fbstring" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14057 14074]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [14027 14075])
                    ("==" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("addr1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14332 14355])
                            ("addr2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14356 14379]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14316 14380])
                    ("<" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("addr1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14428 14451])
                            ("addr2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14452 14475]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14413 14476])
                    ("!=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14521 14540])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14541 14560]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14498 14584])
                    (">" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14607 14626])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14627 14646]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14585 14666])
                    ("<=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14690 14709])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14710 14729]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14667 14752])
                    (">=" function
                       (:operator-flag t
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14776 14795])
                            ("b" variable
                               (:reference 1
                                :constant-flag t
                                :type ("IPAddress" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14796 14815]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14753 14838]))                  
                :type "namespace")
                nil [883 14841])
            ("std" type
               (:members 
                  ( ("hash" type
                       (:type "struct"
                        :members 
                          ( ("()" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("addr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("folly::IPAddress" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14932 14961]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14914 14997]))                          
                        :template-specifier 
                          ( ("folly::IPAddress" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [14869 15000]))                  
                :type "namespace")
                nil [14853 15002]))          
      :file "IPAddress.h"
      :pointmax 15011
      :fsize 15010
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((EXPLICIT 13555 . 13563) (EXPLICIT 13485 . 13493) (EXPLICIT 13555 . 13563) (EXPLICIT 13485 . 13493) (semantic-list 13256 . 13268) (semantic-list 13217 . 13229) (semantic-list 8615 . 8635) (CONST 8609 . 8614) (semantic-list 8606 . 8608) (BOOL 8602 . 8606) (OPERATOR 8593 . 8601) (EXPLICIT 8584 . 8592) (EXPLICIT 4662 . 4670) (EXPLICIT 4493 . 4501) (symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("fcntl.h" include (:system-flag t) nil [612 630])
            ("sys/stat.h" include (:system-flag t) nil [631 652])
            ("sys/types.h" include (:system-flag t) nil [653 675])
            ("string" include (:system-flag t) nil [677 694])
            ("system_error" include (:system-flag t) nil [695 718])
            ("folly/ExceptionWrapper.h" include (:system-flag t) nil [720 755])
            ("folly/Expected.h" include (:system-flag t) nil [756 783])
            ("folly/Portability.h" include (:system-flag t) nil [784 814])
            ("folly/Range.h" include (:system-flag t) nil [815 839])
            ("folly/portability/Unistd.h" include (:system-flag t) nil [840 877])
            ("folly" type
               (:members 
                  ( ("File" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [955 962])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [1044 1053])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [1235 1244])
                            ("File" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("name" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [1328 1345])
                                    ("flags" variable
                                       (:default-value "O_RDONLY"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [1346 1366])
                                    ("mode" variable
                                       (:default-value "0666"
                                        :type ("mode_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1368 1386]))                                  
                                :type ("File" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1323 1388])
                            ("File" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("name" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1412 1436])
                                    ("flags" variable
                                       (:default-value "O_RDONLY"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [1437 1457])
                                    ("mode" variable
                                       (:default-value "0666"
                                        :type ("mode_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1459 1477]))                                  
                                :type ("File" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1400 1479])
                            ("File" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("name" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1496 1513])
                                    ("flags" variable
                                       (:default-value "O_RDONLY"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [1514 1534])
                                    ("mode" variable
                                       (:default-value "0666"
                                        :type ("mode_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1536 1554]))                                  
                                :type ("File" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1491 1556])
                            ("File" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2084 2092])
                            ("temporary" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :type ("File" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2173 2197])
                            ("fd" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [2276 2306])
                            ("dup" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("File" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2515 2532])
                            ("close" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2647 2660])
                            ("closeNoThrow" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [2773 2793])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [2955 2964])
                            ("swap" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("File" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3024 3036]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3014 3037])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [3067 3076])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("File" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3095 3101]))                                  
                                :type ("File" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3079 3103])
                            ("lock" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3575 3587])
                            ("try_lock" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3590 3606])
                            ("unlock" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3609 3623])
                            ("lock_shared" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3627 3646])
                            ("try_lock_shared" function
                               (:prototype-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [3649 3672])
                            ("unlock_shared" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [3675 3696])
                            ("private" label nil (reparse-symbol classsubparts) [3699 3707])
                            ("doLock" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("op" variable (:type "int") (reparse-symbol arg-sub-list) [3722 3729]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3710 3730])
                            ("doTryLock" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("op" variable (:type "int") (reparse-symbol arg-sub-list) [3748 3755]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3733 3756])
                            ("fd_" variable (:type "int") (reparse-symbol classsubparts) [3844 3852])
                            ("ownsFd_" variable (:type "bool") (reparse-symbol classsubparts) [3855 3868]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [941 3871])
                    ("swap" function
                       (:prototype-flag t
                        :arguments 
                          ( ("a" variable
                               (:reference 1
                                :type ("File" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3883 3891])
                            ("b" variable
                               (:reference 1
                                :type ("File" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3892 3900]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3873 3901]))                  
                :type "namespace")
                nil [879 3905]))          
      :file "File.h"
      :pointmax 3926
      :fsize 3925
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((punctuation 3839 . 3840) (DELETE 3833 . 3839) (punctuation 3831 . 3832) (semantic-list 3817 . 3830) (punctuation 3816 . 3817) (OPERATOR 3808 . 3816) (punctuation 3806 . 3807) (symbol 3802 . 3806) (punctuation 3798 . 3799) (DELETE 3792 . 3798) (punctuation 3790 . 3791) (semantic-list 3776 . 3789) (symbol 3772 . 3776) (punctuation 3100 . 3101) (semantic-list 3058 . 3066) (symbol 3054 . 3058) (punctuation 3064 . 3065) (semantic-list 2952 . 2954) (symbol 2945 . 2952) (INT 2941 . 2944) (semantic-list 2411 . 2438) (CONST 2405 . 2410) (semantic-list 2402 . 2404) (BOOL 2398 . 2402) (OPERATOR 2389 . 2397) (EXPLICIT 2380 . 2388) (semantic-list 1889 . 2080) (symbol 1880 . 1888) (semantic-list 1863 . 1879) (symbol 1855 . 1863) (punctuation 1872 . 1873) (punctuation 1871 . 1872) (punctuation 1870 . 1871) (punctuation 1869 . 1870) (punctuation 1853 . 1854) (symbol 1836 . 1853) (punctuation 1834 . 1835) (symbol 1830 . 1834) (punctuation 1829 . 1830) (symbol 1821 . 1829) (punctuation 1872 . 1873) (punctuation 1871 . 1872) (punctuation 1870 . 1871) (punctuation 1869 . 1870) (STATIC 1814 . 1820) (punctuation 1872 . 1873) (punctuation 1871 . 1872) (punctuation 1870 . 1871) (punctuation 1869 . 1870) (punctuation 1810 . 1811) (symbol 1806 . 1810) (punctuation 1804 . 1805) (punctuation 1803 . 1804) (punctuation 1802 . 1803) (TYPENAME 1794 . 1802) (punctuation 1793 . 1794) (TEMPLATE 1784 . 1792) (EXPLICIT 1482 . 1490) (EXPLICIT 1391 . 1399) (EXPLICIT 1314 . 1322) (semantic-list 1205 . 1234) (symbol 1201 . 1205) (EXPLICIT 1192 . 1200) (semantic-list 1041 . 1043) (symbol 1037 . 1041) (symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("type_traits" include (:system-flag t) nil [612 634])
            ("folly" type
               (:members 
                  ( ("Unit" type
                       (:members 
                          ( ("Lift" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("std::conditional" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol classsubparts) [1861 1958])
                            ("Drop" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("std::conditional" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol classsubparts) [1961 2058])
                            ("==" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Unit" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2078 2100]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2062 2123])
                            ("!=" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Unit" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2142 2164]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2126 2188]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1459 2191])
                    ("unit" variable (:type ("Unit" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [2203 2216]))                  
                :type "namespace")
                nil [636 2219]))          
      :file "Unit.h"
      :pointmax 2220
      :fsize 2219
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((symbol 2193 . 2202) (symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("type_traits" include (:system-flag t) nil [612 634])
            ("folly/Conv.h" include (:system-flag t) nil [636 659])
            ("folly/Expected.h" include (:system-flag t) nil [660 687])
            ("folly/Likely.h" include (:system-flag t) nil [688 713])
            ("folly/Range.h" include (:system-flag t) nil [714 738])
            ("folly" type
               (:members 
                  ( ("kMaxVarintLength32" variable
                       (:default-value "5"
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1192 1222])
                    ("kMaxVarintLength64" variable
                       (:default-value "10"
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1313 1344])
                    ("encodeVarint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("val" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1591 1604])
                            ("buf" variable
                               (:pointer 1
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1605 1618]))                          
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1571 1619])
                    ("decodeVarint" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("uint64_t" type (:type "class") nil nil)
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :type ("Range" type
                                     (:template-specifier 
                                        ( ("T" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [1768 1784]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [1727 1785])
                    ("DecodeVarintError" type (:type "class") (reparse-symbol namespacesubparts) [1792 1859])
                    ("tryDecodeVarint" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Expected" type
                             (:template-specifier 
                                ( ("uint64_t" type nil nil nil)
                                  ("DecodeVarintError" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :type ("Range" type
                                     (:template-specifier 
                                        ( ("T" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2175 2191]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [2102 2192])
                    ("encodeZigZag" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("val" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2526 2538]))                          
                        :type ("uint64_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2497 2777])
                    ("decodeZigZag" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("val" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2807 2820]))                          
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2779 2880])
                    ("encodeVarint" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("val" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2934 2947])
                            ("buf" variable
                               (:pointer 1
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2948 2961]))                          
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2907 3108])
                    ("decodeVarint" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("uint64_t" type (:type "class") nil nil)
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :type ("Range" type
                                     (:template-specifier 
                                        ( ("T" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3158 3174]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [3110 3464])
                    ("tryDecodeVarint" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("Expected" type
                             (:template-specifier 
                                ( ("uint64_t" type nil nil nil)
                                  ("DecodeVarintError" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :type ("Range" type
                                     (:template-specifier 
                                        ( ("T" type (:pointer 1) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [3546 3562]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [3466 5160]))                  
                :type "namespace")
                nil [740 5163]))          
      :file "Varint.h"
      :pointmax 5173
      :fsize 5172
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((punctuation 1855 . 1856) (number 1854 . 1855) (punctuation 1852 . 1853) (symbol 1840 . 1851) (punctuation 1836 . 1837) (number 1835 . 1836) (punctuation 1833 . 1834) (symbol 1820 . 1832) (ENUM 1787 . 1791) (symbol 1303 . 1312) (symbol 1182 . 1191) (symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("FOLLY_INTRINSIC_CONSTEXPR" variable (:constant-flag t) nil [2016 2041])
            ("folly/Portability.h" include (:system-flag t) nil [2056 2086])
            ("folly/portability/Builtins.h" include (:system-flag t) nil [2087 2126])
            ("folly/Assume.h" include (:system-flag t) nil [2128 2153])
            ("folly/detail/BitIteratorDetail.h" include (:system-flag t) nil [2154 2197])
            ("folly/Likely.h" include (:system-flag t) nil [2198 2223])
            ("cassert" include (:system-flag t) nil [2225 2243])
            ("cstring" include (:system-flag t) nil [2244 2262])
            ("cinttypes" include (:system-flag t) nil [2263 2283])
            ("iterator" include (:system-flag t) nil [2284 2303])
            ("limits" include (:system-flag t) nil [2304 2321])
            ("type_traits" include (:system-flag t) nil [2322 2344])
            ("boost/iterator/iterator_adaptor.hpp" include (:system-flag t) nil [2345 2391])
            ("stdint.h" include (:system-flag t) nil [2392 2411])
            ("folly" type
               (:members 
                  ( ("findFirstSet" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2754 2758]))                          
                        :constant-flag t
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [2535 2834])
                    ("findFirstSet" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3095 3099]))                          
                        :constant-flag t
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [2836 3177])
                    ("findFirstSet" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3444 3448]))                          
                        :constant-flag t
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [3179 3532])
                    ("findFirstSet" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3708 3712]))                          
                        :constant-flag t
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [3534 3992])
                    ("findLastSet" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4327 4331]))                          
                        :constant-flag t
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [4109 4568])
                    ("findLastSet" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4828 4832]))                          
                        :constant-flag t
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [4570 4912])
                    ("findLastSet" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5178 5182]))                          
                        :constant-flag t
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [4914 5279])
                    ("findLastSet" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5457 5461]))                          
                        :constant-flag t
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [5281 5541])
                    ("nextPowTwo" function
                       (:arguments 
                          ( ("v" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5702 5706]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5686 5757])
                    ("prevPowTwo" function
                       (:arguments 
                          ( ("v" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5922 5926]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5902 5979])
                    ("isPowTwo" function
                       (:arguments 
                          ( ("v" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6129 6133]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6115 6174])
                    ("popcount" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6387 6391]))                          
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [6204 6435])
                    ("popcount" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6665 6669]))                          
                        :typemodifiers ("inline" "typename"))
                        (reparse-symbol namespacesubparts) [6437 6715])
                    ("detail" type
                       (:members 
                          ( ("uint_types_by_size" type
                               (:template 
                                  ( ("size_t" type (:typevar "Size") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [6798 6847])
                            ("FB_GEN" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6857 6863])
                            ("byteswap_gen" function
                               (:typemodifiers ("static" "inline")
                                :arguments 
                                  ( ("" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("sz" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("v" variable (:type ("_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7289 7307])
                            ("byteswap_gen" function
                               (:typemodifiers ("static" "inline")
                                :arguments 
                                  ( ("" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("sz" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("v" variable (:type ("_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type ("uint64_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7416 7445])
                            ("byteswap_gen" function
                               (:typemodifiers ("static" "inline")
                                :arguments 
                                  ( ("" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("sz" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("v" variable (:type ("_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type ("uint32_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7446 7475])
                            ("byteswap_gen" function
                               (:typemodifiers ("static" "inline")
                                :arguments 
                                  ( ("" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("" variable (:type ("sz" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                    ("v" variable (:type ("_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                  
                                :type ("uint16_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [7476 7505])
                            ("EndianInt" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("static_assert" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type ("std::is_floating_point::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7665 7698]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [7569 7776])
                                    ("swap" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7793 7797]))                                          
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7779 8132])
                                    ("big" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8148 8152]))                                          
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8135 8211])
                                    ("little" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8230 8234]))                                          
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8214 8290]))                                  )
                                (reparse-symbol namespacesubparts) [7529 8293]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [6778 8296])
                    ("FB_GEN1" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8580 8587])
                    ("FB_GEN2" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8656 8663])
                    ("FB_GEN" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8756 8762])
                    ("Endian" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [8843 8850])
                            ("Order" type
                               (:superclasses 
                                  ( ("uint8_t" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [8858 8906])
                            ("Order::BIG" variable (:type "int") (reparse-symbol classsubparts) [8975 8986])
                            ("swap" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9023 9027]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [8990 9082])
                            ("big" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9117 9121]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [9085 9175])
                            ("little" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("x" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9213 9217]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [9178 9274]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [8827 9362])
                    ("BitIterator" type
                       (:template 
                          ( ("BaseIter" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [9451 9495])
                    ("findFirstSet" function
                       (:template 
                          ( ("BaseIter" type (:type "class") nil nil))                          
                        :type ("BitIterator" type
                             (:template-specifier 
                                ( ("BaseIter" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("" variable (:type ("BitIterator" type
                                 (:template-specifier 
                                    ( ("BaseIter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [9557 9579])
                            ("" variable (:type ("BitIterator" type
                                 (:template-specifier 
                                    ( ("BaseIter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [9615 9637]))                          
                        :prototype-flag t)
                        (reparse-symbol namespacesubparts) [9496 9638])
                    ("BitIterator" type
                       (:template 
                          ( ("BaseIter" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [9945 9952])
                            ("bitsPerBlock" function
                               (:typemodifiers ("static")
                                :type "unsigned int")
                                (reparse-symbol classsubparts) [10040 10236])
                            ("BitIterator" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("iter" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BaseIter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10362 10383])
                                    ("bitOff" variable
                                       (:default-value "0"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10384 10399]))                                  
                                :type ("BitIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10350 10537])
                            ("bitOffset" function
                               (:methodconst-flag t
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10541 10594])
                            ("advanceToNextBlock" function (:type "void") (reparse-symbol classsubparts) [10598 10679])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BaseIter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10706 10728]))                                  
                                :type ("BitIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10683 10813])
                            ("private" label nil (reparse-symbol classsubparts) [10816 10824])
                            ("boost" friend nil (reparse-symbol classsubparts) [10827 10845])
                            ("iterator_core_access" variable (:type "int") (reparse-symbol classsubparts) [10847 10868])
                            ("findFirstSet" function
                               (:prototype-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("" variable (:type ("BitIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10905 10917])
                                    ("" variable (:type ("BitIterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10918 10930]))                                  
                                :type ("BitIterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10871 10931])
                            ("BitRef" variable (:type "int") (reparse-symbol classsubparts) [11099 11106])
                            ("advanceInBlock" function
                               (:arguments 
                                  ( ("n" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11130 11139]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11110 11207])
                            ("dereference" function
                               (:methodconst-flag t
                                :type ("BitRef" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11211 11299])
                            ("advance" function
                               (:arguments 
                                  ( ("n" variable (:type ("ssize_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11316 11326]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [11303 11545])
                            ("increment" function (:type "void") (reparse-symbol classsubparts) [11549 11647])
                            ("decrement" function (:type "void") (reparse-symbol classsubparts) [11651 11779])
                            ("equal" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11794 11819]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [11783 11940])
                            ("distance_to" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BitIterator" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11964 11989]))                                  
                                :type ("ssize_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11944 12138])
                            ("bitOffset_" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12142 12160]))                          
                        :superclasses 
                          ( ("bititerator_detail::BitIteratorBase::type" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [9835 12163])
                    ("makeBitIterator" function
                       (:template 
                          ( ("BaseIter" type (:type "class") nil nil))                          
                        :type ("BitIterator" type
                             (:template-specifier 
                                ( ("BaseIter" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("iter" variable
                               (:reference 1
                                :constant-flag t
                                :type ("BaseIter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12323 12344]))                          )
                        (reparse-symbol namespacesubparts) [12259 12386])
                    ("findFirstSet" function
                       (:template 
                          ( ("BaseIter" type (:type "class") nil nil))                          
                        :type ("BitIterator" type
                             (:template-specifier 
                                ( ("BaseIter" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("begin" variable (:type ("BitIterator" type
                                 (:template-specifier 
                                    ( ("BaseIter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [12570 12598])
                            ("end" variable (:type ("BitIterator" type
                                 (:template-specifier 
                                    ( ("BaseIter" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [12634 12660]))                          )
                        (reparse-symbol namespacesubparts) [12509 13842])
                    ("Unaligned" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [13883 13900])
                    ("FOLLY_PACK_ATTR" variable (:type "int") (reparse-symbol namespacesubparts) [14188 14204])
                    ("loadUnaligned" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("p" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [14323 14337]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [14281 14649])
                    ("storeUnaligned" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("p" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [14744 14752])
                            ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14753 14761]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [14698 15368]))                  
                :type "namespace")
                nil [2413 15371]))          
      :file "Bits.h"
      :pointmax 15392
      :fsize 15391
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((symbol 14205 . 14219) (semantic-list 14083 . 14187) (punctuation 14081 . 14082) (symbol 14077 . 14081) (punctuation 14076 . 14077) (punctuation 14075 . 14076) (punctuation 14074 . 14075) (symbol 14069 . 14074) (punctuation 14068 . 14069) (punctuation 14067 . 14068) (punctuation 14066 . 14067) (symbol 14065 . 14066) (punctuation 14064 . 14065) (symbol 14058 . 14064) (punctuation 14057 . 14058) (punctuation 14056 . 14057) (symbol 14053 . 14056) (punctuation 14052 . 14053) (symbol 14043 . 14052) (punctuation 14042 . 14043) (punctuation 14041 . 14042) (symbol 14038 . 14041) (TYPENAME 14029 . 14037) (punctuation 14023 . 14024) (symbol 14022 . 14023) (punctuation 14016 . 14017) (symbol 14007 . 14016) (STRUCT 14000 . 14006) (punctuation 13998 . 13999) (symbol 13997 . 13998) (CLASS 13991 . 13996) (punctuation 13990 . 13991) (TEMPLATE 13981 . 13989) (symbol 13965 . 13980) (punctuation 13881 . 13882) (VOID 13877 . 13881) (punctuation 13876 . 13877) (symbol 13870 . 13876) (CLASS 13864 . 13869) (punctuation 13862 . 13863) (symbol 13861 . 13862) (CLASS 13855 . 13860) (punctuation 13854 . 13855) (TEMPLATE 13845 . 13853) (punctuation 11097 . 11098) (symbol 11082 . 11092) (punctuation 11081 . 11082) (punctuation 11080 . 11081) (punctuation 11079 . 11080) (symbol 11071 . 11079) (punctuation 11070 . 11071) (symbol 11055 . 11070) (punctuation 11054 . 11055) (punctuation 11053 . 11054) (symbol 11050 . 11053) (TYPENAME 11041 . 11049) (punctuation 11033 . 11034) (symbol 11024 . 11033) (punctuation 11023 . 11024) (punctuation 11022 . 11023) (punctuation 11021 . 11022) (symbol 11013 . 11021) (punctuation 11012 . 11013) (symbol 10997 . 11012) (punctuation 10996 . 10997) (punctuation 10995 . 10996) (symbol 10992 . 10995) (TYPENAME 10983 . 10991) (punctuation 10975 . 10976) (symbol 10963 . 10975) (punctuation 10962 . 10963) (punctuation 10961 . 10962) (symbol 10943 . 10961) (TYPEDEF 10935 . 10942) (punctuation 10846 . 10847) (punctuation 10845 . 10846) (EXPLICIT 10341 . 10349) (semantic-list 9349 . 9352) (symbol 9343 . 9349) (number 9350 . 9351) (semantic-list 9336 . 9340) (symbol 9330 . 9336) (number 9337 . 9339) (semantic-list 9323 . 9327) (symbol 9317 . 9323) (number 9324 . 9326) (semantic-list 9310 . 9314) (symbol 9304 . 9310) (number 9311 . 9313) (punctuation 8973 . 8974) (symbol 8966 . 8972) (punctuation 8965 . 8966) (punctuation 8964 . 8965) (symbol 8959 . 8964) (punctuation 8957 . 8958) (symbol 8941 . 8956) (punctuation 8939 . 8940) (symbol 8933 . 8938) (symbol 8927 . 8932) (symbol 8917 . 8926) (STATIC 8910 . 8916) (symbol 8898 . 8901) (punctuation 8892 . 8893) (symbol 8886 . 8892) (symbol 8898 . 8901) (punctuation 8892 . 8893) (symbol 8886 . 8892) (ENUM 8853 . 8857) (string 7705 . 7774) (punctuation 7653 . 7654) (punctuation 7652 . 7653) (semantic-list 7590 . 7651) (punctuation ";" 7476 . 7505) (semantic-list #("{                       \\
    using type = uint##sz##_t;                              \\
  }" 0 1 (macros (("fn" symbol "__builtin_bswap16" 7487 . 7504) ("sz" number "16" 7483 . 7485)))) 7476 . 7505) (punctuation ">" 7476 . 7505) (number "8" 7476 . 7505) (punctuation "/" 7476 . 7505) (number "16" 7476 . 7505) (punctuation "<" 7476 . 7505) (symbol "uint_types_by_size" 7476 . 7505) (STRUCT "struct" 7476 . 7505) (punctuation ">" 7476 . 7505) (punctuation "<" 7476 . 7505) (TEMPLATE "template" 7476 . 7505) (punctuation ";" 7446 . 7475) (semantic-list #("{                       \\
    using type = uint##sz##_t;                              \\
  }" 0 1 (macros (("fn" symbol "__builtin_bswap32" 7457 . 7474) ("sz" number "32" 7453 . 7455)))) 7446 . 7475) (punctuation ">" 7446 . 7475) (number "8" 7446 . 7475) (punctuation "/" 7446 . 7475) (number "32" 7446 . 7475) (punctuation "<" 7446 . 7475) (symbol "uint_types_by_size" 7446 . 7475) (STRUCT "struct" 7446 . 7475) (punctuation ">" 7446 . 7475) (punctuation "<" 7446 . 7475) (TEMPLATE "template" 7446 . 7475) (punctuation ";" 7416 . 7445) (semantic-list #("{                       \\
    using type = uint##sz##_t;                              \\
  }" 0 1 (macros (("fn" symbol "__builtin_bswap64" 7427 . 7444) ("sz" number "64" 7423 . 7425)))) 7416 . 7445) (punctuation ">" 7416 . 7445) (number "8" 7416 . 7445) (punctuation "/" 7416 . 7445) (number "64" 7416 . 7445) (punctuation "<" 7416 . 7445) (symbol "uint_types_by_size" 7416 . 7445) (STRUCT "struct" 7416 . 7445) (punctuation ">" 7416 . 7445) (punctuation "<" 7416 . 7445) (TEMPLATE "template" 7416 . 7445) (punctuation ";" 7289 . 7307) (semantic-list #("{                       \\
    using type = uint##sz##_t;                              \\
  }" 0 1 (macros (("fn" symbol "uint8_t" 7299 . 7306) ("sz" number "8" 7296 . 7297)))) 7289 . 7307) (punctuation ">" 7289 . 7307) (number "8" 7289 . 7307) (punctuation "/" 7289 . 7307) (number "8" 7289 . 7307) (punctuation "<" 7289 . 7307) (symbol "uint_types_by_size" 7289 . 7307) (STRUCT "struct" 7289 . 7307) (punctuation ">" 7289 . 7307) (punctuation "<" 7289 . 7307) (TEMPLATE "template" 7289 . 7307) (punctuation 6114 . 6115) (punctuation 6113 . 6114) (punctuation 6112 . 6113) (BOOL 6108 . 6112) (punctuation 6102 . 6103) (symbol 6097 . 6102) (punctuation 6096 . 6097) (punctuation 6095 . 6096) (punctuation 6094 . 6095) (symbol 6093 . 6094) (punctuation 6092 . 6093) (symbol 6081 . 6092) (punctuation 6080 . 6081) (punctuation 6079 . 6080) (symbol 6076 . 6079) (punctuation 6074 . 6075) (punctuation 6073 . 6074) (symbol 6067 . 6072) (punctuation 6066 . 6067) (punctuation 6065 . 6066) (punctuation 6064 . 6065) (symbol 6063 . 6064) (punctuation 6062 . 6063) (symbol 6051 . 6062) (punctuation 6050 . 6051) (punctuation 6049 . 6050) (symbol 6046 . 6049) (punctuation 6040 . 6041) (symbol 6031 . 6040) (punctuation 6030 . 6031) (punctuation 6029 . 6030) (symbol 6026 . 6029) (TYPENAME 6017 . 6025) (symbol 6007 . 6016) (INLINE 6000 . 6006) (punctuation 5998 . 5999) (symbol 5997 . 5998) (CLASS 5991 . 5996) (punctuation 5990 . 5991) (TEMPLATE 5981 . 5989) (punctuation 5901 . 5902) (punctuation 5900 . 5901) (punctuation 5899 . 5900) (symbol 5898 . 5899) (punctuation 5896 . 5897) (symbol 5891 . 5896) (punctuation 5890 . 5891) (punctuation 5889 . 5890) (punctuation 5888 . 5889) (symbol 5887 . 5888) (punctuation 5886 . 5887) (symbol 5875 . 5886) (punctuation 5874 . 5875) (punctuation 5873 . 5874) (symbol 5870 . 5873) (punctuation 5868 . 5869) (punctuation 5867 . 5868) (symbol 5861 . 5866) (punctuation 5860 . 5861) (punctuation 5859 . 5860) (punctuation 5858 . 5859) (symbol 5857 . 5858) (punctuation 5856 . 5857) (symbol 5845 . 5856) (punctuation 5844 . 5845) (punctuation 5843 . 5844) (symbol 5840 . 5843) (punctuation 5839 . 5840) (symbol 5830 . 5839) (punctuation 5824 . 5825) (punctuation 5823 . 5824) (symbol 5820 . 5823) (TYPENAME 5811 . 5819) (CONST "const" 5785 . 5810) (INLINE 5778 . 5784) (punctuation 5776 . 5777) (symbol 5775 . 5776) (CLASS 5769 . 5774) (punctuation 5768 . 5769) (TEMPLATE 5759 . 5767) (punctuation 5685 . 5686) (punctuation 5684 . 5685) (punctuation 5683 . 5684) (symbol 5682 . 5683) (punctuation 5678 . 5679) (symbol 5673 . 5678) (punctuation 5672 . 5673) (punctuation 5671 . 5672) (punctuation 5670 . 5671) (symbol 5669 . 5670) (punctuation 5668 . 5669) (symbol 5657 . 5668) (punctuation 5656 . 5657) (punctuation 5655 . 5656) (symbol 5652 . 5655) (punctuation 5650 . 5651) (punctuation 5649 . 5650) (symbol 5643 . 5648) (punctuation 5642 . 5643) (punctuation 5641 . 5642) (punctuation 5640 . 5641) (symbol 5639 . 5640) (punctuation 5638 . 5639) (symbol 5627 . 5638) (punctuation 5626 . 5627) (punctuation 5625 . 5626) (symbol 5622 . 5625) (punctuation 5618 . 5619) (symbol 5609 . 5618) (punctuation 5608 . 5609) (punctuation 5607 . 5608) (symbol 5604 . 5607) (TYPENAME 5595 . 5603) (CONST "const" 5569 . 5594) (INLINE 5562 . 5568) (punctuation 5560 . 5561) (symbol 5559 . 5560) (CLASS 5553 . 5558) (punctuation 5552 . 5553) (TEMPLATE 5543 . 5551) (symbol 1808 . 1812) (symbol 1801 . 1807) (punctuation 1800 . 1801))
      :lexical-table 
        '(("fn" . (nil))
          ("FOLLY_INTRINSIC_CONSTEXPR" . ((CONST "const" 2042 . 2047)))
          ("sz" . (nil))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("atomic" include (:system-flag t) nil [612 629])
            ("chrono" include (:system-flag t) nil [630 647])
            ("glog/logging.h" include (:system-flag t) nil [648 673])
            ("FB_LOG_EVERY_MS" variable (:constant-flag t) nil [1085 1100]))          
      :file "Logging.h"
      :pointmax 2531
      :fsize 2530
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599))
      :lexical-table 
        '(("FB_LOG_EVERY_MS" (spp-arg-list ("severity" "milli_interval") 1100 . 1126) . 
              ((FOR "for" 1158 . 1161) (semantic-list "(decltype(milli_interval) FB_LEM_once = 1,                             \\
                                FB_LEM_interval = (milli_interval);          \\
       FB_LEM_once; )" 1162 . 1335) (FOR "for" 1397 . 1400) (semantic-list "(::std::chrono::milliseconds::rep FB_LEM_prev, FB_LEM_now =          \\
             FB_LEM_interval <= 0 ? 0 :                                      \\
             ::std::chrono::duration_cast< ::std::chrono::milliseconds>(     \\
                 ::std::chrono::system_clock::now().time_since_epoch()       \\
                 ).count();                                                  \\
         FB_LEM_once; )" 1401 . 1811) (FOR "for" 1873 . 1876) (semantic-list "(static ::std::atomic< ::std::chrono::milliseconds::rep>           \\
               FB_LEM_hist; FB_LEM_once; FB_LEM_once = 0)" 1877 . 2003) (IF "if" 2033 . 2035) (semantic-list "(FB_LEM_interval > 0 &&                                           \\
            (FB_LEM_now - (FB_LEM_prev =                                     \\
                           FB_LEM_hist.load(std::memory_order_acquire)) <    \\
                                                          FB_LEM_interval || \\
             !FB_LEM_hist.compare_exchange_strong(FB_LEM_prev,FB_LEM_now)))" 2036 . 2416) (semantic-list "{\\
        }" 2417 . 2429) (ELSE "else" 2430 . 2434) (symbol "LOG" 2509 . 2512) (semantic-list "(severity)" 2512 . 2522)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/Portability.h" include (:system-flag t) nil [612 642])
            ("folly/Preprocessor.h" include (:system-flag t) nil [643 674])
            ("folly/ScopeGuard.h" include (:system-flag t) nil [704 733])
            ("folly/Traits.h" include (:system-flag t) nil [734 759])
            ("folly/portability/GFlags.h" include (:system-flag t) nil [760 797])
            ("cassert" include (:system-flag t) nil [799 817])
            ("chrono" include (:system-flag t) nil [818 835])
            ("functional" include (:system-flag t) nil [836 857])
            ("limits" include (:system-flag t) nil [858 875])
            ("type_traits" include (:system-flag t) nil [876 898])
            ("boost/function_types/function_arity.hpp" include (:system-flag t) nil [900 950])
            ("glog/logging.h" include (:system-flag t) nil [951 976])
            ("DECLARE_bool" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("benchmark" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [991 1001]))                  
                :type "int")
                nil [978 1002])
            ("folly" type
               (:members 
                  ( ("runBenchmarks" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [1086 1107])
                    ("runBenchmarksOnFlag" function
                       (:typemodifiers ("inline")
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1242 1355])
                    ("detail" type
                       (:members 
                          ( ("std::pair" variable (:type "int") (reparse-symbol namespacesubparts) [1402 1472])
                            ("addBenchmarkImpl" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("file" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [1607 1624])
                                    ("name" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [1647 1664])
                                    ("" variable (:type ("std::function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1687 1701])
                                    ("" variable (:type ("TimeIterPair" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1701 1727]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1585 1730]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1357 1733])
                    ("BenchmarkSuspender" type
                       (:members 
                          ( ("std::chrono::high_resolution_clock" variable (:type "int") (reparse-symbol classsubparts) [1863 1898])
                            ("Clock::time_point" variable (:type "int") (reparse-symbol classsubparts) [1919 1937])
                            ("Clock::duration" variable (:type "int") (reparse-symbol classsubparts) [1957 1973])
                            ("BenchmarkSuspender" function
                               (:constructor-flag t
                                :type ("BenchmarkSuspender" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [1977 2029])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("BenchmarkSuspender" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2299 2320])
                                    ("" variable (:type ("rhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2321 2325]))                                  
                                :type ("BenchmarkSuspender" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2269 2445])
                            ("BenchmarkSuspender" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2449 2529])
                            ("dismiss" function (:type "void") (reparse-symbol classsubparts) [2533 2616])
                            ("rehire" function (:type "void") (reparse-symbol classsubparts) [2620 2699])
                            ("timeSpent" variable
                               (:typemodifiers ("static")
                                :type ("Duration" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3111 3137])
                            ("private" label nil (reparse-symbol classsubparts) [3140 3148])
                            ("tally" function (:type "void") (reparse-symbol classsubparts) [3151 3245])
                            ("start" variable (:type ("TimePoint" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3249 3265]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1819 3268])
                    ("addBenchmark" function
                       (:arguments 
                          ( ("file" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3720 3737])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3738 3755])
                            ("" variable
                               (:reference 1
                                :type ("Lambda" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3756 3764])
                            ("" variable (:type ("lambda" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3765 3772]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3702 4296])
                    ("addBenchmark" function
                       (:arguments 
                          ( ("file" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4712 4729])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4730 4747])
                            ("" variable
                               (:reference 1
                                :type ("Lambda" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4748 4756])
                            ("" variable (:type ("lambda" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4757 4764]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4694 4942])
                    ("detail" type
                       (:members 
                          ( ("DoNotOptimizeAwayNeedsIndirect" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("std::decay::type" variable
                                       (:typemodifiers ("typename")
                                        :type "int")
                                        (reparse-symbol classsubparts) [5966 5995])
                                    ("std::is_pointer::value" variable (:type "int") (reparse-symbol classsubparts) [6308 6340]))                                  )
                                (reparse-symbol namespacesubparts) [5886 6343]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [5867 6345]))                  
                :type "namespace")
                nil [1004 8039])
            ("BENCHMARK_IMPL" variable (:constant-flag t) nil [8165 8179])
            ("BENCHMARK_MULTI_IMPL" variable (:constant-flag t) nil [8892 8912])
            ("BENCHMARK" variable (:constant-flag t) nil [9935 9944])
            ("BENCHMARK_MULTI" variable (:constant-flag t) nil [10845 10860])
            ("BENCHMARK_PARAM" variable (:constant-flag t) nil [11879 11894])
            ("BENCHMARK_PARAM_MULTI" variable (:constant-flag t) nil [12114 12135])
            ("BENCHMARK_NAMED_PARAM" variable (:constant-flag t) nil [12991 13012])
            ("BENCHMARK_NAMED_PARAM_MULTI" variable (:constant-flag t) nil [13710 13737])
            ("BENCHMARK_RELATIVE" variable (:constant-flag t) nil [14850 14868])
            ("BENCHMARK_RELATIVE_MULTI" variable (:constant-flag t) nil [15383 15407])
            ("BENCHMARK_RELATIVE_PARAM" variable (:constant-flag t) nil [15799 15823])
            ("BENCHMARK_RELATIVE_PARAM_MULTI" variable (:constant-flag t) nil [16052 16082])
            ("BENCHMARK_RELATIVE_NAMED_PARAM" variable (:constant-flag t) nil [16260 16290])
            ("BENCHMARK_RELATIVE_NAMED_PARAM_MULTI" variable (:constant-flag t) nil [16988 17024])
            ("BENCHMARK_DRAW_LINE" variable (:constant-flag t) nil [17546 17565])
            ("BENCHMARK_SUSPEND" variable (:constant-flag t) nil [18091 18108]))          
      :file "Benchmark.h"
      :pointmax 18264
      :fsize 18263
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((semantic-list 7981 . 8028) (symbol 7976 . 7980) (punctuation 7975 . 7976) (punctuation 7974 . 7975) (punctuation 7973 . 7974) (symbol 7968 . 7973) (punctuation 7967 . 7968) (punctuation 7966 . 7967) (punctuation 7965 . 7966) (symbol 7964 . 7965) (punctuation 7963 . 7964) (symbol 7933 . 7963) (punctuation 7932 . 7933) (punctuation 7931 . 7932) (symbol 7925 . 7931) (punctuation 7919 . 7920) (symbol 7910 . 7919) (punctuation 7909 . 7910) (punctuation 7908 . 7909) (symbol 7905 . 7908) (TYPENAME 7896 . 7904) (punctuation 7894 . 7895) (punctuation 7893 . 7894) (semantic-list 7882 . 7892) (symbol 7865 . 7882) (symbol 7860 . 7864) (punctuation 7858 . 7859) (symbol 7857 . 7858) (TYPENAME 7848 . 7856) (punctuation 7847 . 7848) (TEMPLATE 7838 . 7846) (semantic-list 7799 . 7836) (symbol 7794 . 7798) (punctuation 7793 . 7794) (punctuation 7792 . 7793) (punctuation 7791 . 7792) (symbol 7786 . 7791) (punctuation 7785 . 7786) (punctuation 7784 . 7785) (punctuation 7783 . 7784) (symbol 7782 . 7783) (punctuation 7781 . 7782) (symbol 7751 . 7781) (punctuation 7750 . 7751) (punctuation 7749 . 7750) (symbol 7743 . 7749) (punctuation 7742 . 7743) (punctuation 7736 . 7737) (symbol 7727 . 7736) (punctuation 7726 . 7727) (punctuation 7725 . 7726) (symbol 7722 . 7725) (TYPENAME 7713 . 7721) (punctuation 7711 . 7712) (punctuation 7710 . 7711) (semantic-list 7699 . 7709) (symbol 7682 . 7699) (symbol 7677 . 7681) (punctuation 7675 . 7676) (symbol 7674 . 7675) (TYPENAME 7665 . 7673) (punctuation 7664 . 7665) (TEMPLATE 7655 . 7663) (semantic-list 7324 . 7653) (symbol 7319 . 7323) (punctuation 7318 . 7319) (punctuation 7317 . 7318) (punctuation 7316 . 7317) (symbol 7311 . 7316) (punctuation 7310 . 7311) (punctuation 7309 . 7310) (punctuation 7308 . 7309) (symbol 7307 . 7308) (punctuation 7306 . 7307) (symbol 7276 . 7306) (punctuation 7275 . 7276) (punctuation 7274 . 7275) (symbol 7268 . 7274) (punctuation 7262 . 7263) (symbol 7253 . 7262) (punctuation 7252 . 7253) (punctuation 7251 . 7252) (symbol 7248 . 7251) (TYPENAME 7239 . 7247) (punctuation 7237 . 7238) (punctuation 7236 . 7237) (semantic-list 7219 . 7235) (symbol 7202 . 7219) (symbol 7197 . 7201) (punctuation 7195 . 7196) (symbol 7194 . 7195) (TYPENAME 7185 . 7193) (punctuation 7184 . 7185) (TEMPLATE 7175 . 7183) (semantic-list 6517 . 7173) (symbol 6512 . 6516) (punctuation 6511 . 6512) (punctuation 6510 . 6511) (punctuation 6509 . 6510) (symbol 6504 . 6509) (punctuation 6503 . 6504) (punctuation 6502 . 6503) (punctuation 6501 . 6502) (symbol 6500 . 6501) (punctuation 6499 . 6500) (symbol 6469 . 6499) (punctuation 6468 . 6469) (punctuation 6467 . 6468) (symbol 6461 . 6467) (punctuation 6460 . 6461) (punctuation 6454 . 6455) (symbol 6445 . 6454) (punctuation 6444 . 6445) (punctuation 6443 . 6444) (symbol 6440 . 6443) (TYPENAME 6431 . 6439) (punctuation 6429 . 6430) (punctuation 6428 . 6429) (semantic-list 6411 . 6427) (symbol 6394 . 6411) (symbol 6389 . 6393) (punctuation 6387 . 6388) (symbol 6386 . 6387) (TYPENAME 6377 . 6385) (punctuation 6376 . 6377) (TEMPLATE 6367 . 6375) (punctuation 6306 . 6307) (punctuation 6305 . 6306) (semantic-list 6298 . 6304) (SIZEOF 6292 . 6298) (punctuation 6290 . 6291) (semantic-list 6280 . 6289) (SIZEOF 6274 . 6280) (punctuation 6266 . 6267) (punctuation 6265 . 6266) (symbol 6259 . 6264) (punctuation 6258 . 6259) (punctuation 6257 . 6258) (punctuation 6256 . 6257) (symbol 6249 . 6256) (punctuation 6248 . 6249) (symbol 6229 . 6248) (punctuation 6228 . 6229) (punctuation 6227 . 6228) (symbol 6222 . 6227) (punctuation 6221 . 6222) (punctuation 6219 . 6220) (symbol 6213 . 6218) (BOOL 6208 . 6212) (STATIC 6201 . 6207) (symbol 6191 . 6200) (punctuation 5964 . 5965) (symbol 5956 . 5963) (USING 5950 . 5955) (punctuation 4755 . 4756) (punctuation 4693 . 4694) (punctuation 4692 . 4693) (punctuation 4691 . 4692) (number 4689 . 4690) (punctuation 4687 . 4688) (punctuation 4686 . 4687) (symbol 4678 . 4683) (punctuation 4677 . 4678) (punctuation 4676 . 4677) (punctuation 4675 . 4676) (semantic-list 4654 . 4675) (symbol 4646 . 4654) (semantic-list 4672 . 4674) (OPERATOR 4664 . 4672) (punctuation 4663 . 4664) (punctuation 4662 . 4663) (punctuation 4655 . 4656) (punctuation 4645 . 4646) (symbol 4631 . 4645) (punctuation 4630 . 4631) (punctuation 4629 . 4630) (symbol 4615 . 4629) (punctuation 4614 . 4615) (punctuation 4613 . 4614) (symbol 4608 . 4613) (punctuation 4604 . 4605) (symbol 4595 . 4604) (punctuation 4594 . 4595) (punctuation 4593 . 4594) (symbol 4590 . 4593) (TYPENAME 4581 . 4589) (punctuation 4579 . 4580) (symbol 4573 . 4579) (TYPENAME 4564 . 4572) (punctuation 4563 . 4564) (TEMPLATE 4554 . 4562) (punctuation 3763 . 3764) (punctuation 3701 . 3702) (punctuation 3700 . 3701) (punctuation 3699 . 3700) (number 3697 . 3698) (punctuation 3695 . 3696) (punctuation 3694 . 3695) (symbol 3686 . 3691) (punctuation 3685 . 3686) (punctuation 3684 . 3685) (punctuation 3683 . 3684) (semantic-list 3662 . 3683) (symbol 3654 . 3662) (semantic-list 3680 . 3682) (OPERATOR 3672 . 3680) (punctuation 3671 . 3672) (punctuation 3670 . 3671) (punctuation 3663 . 3664) (punctuation 3653 . 3654) (symbol 3639 . 3653) (punctuation 3638 . 3639) (punctuation 3637 . 3638) (symbol 3623 . 3637) (punctuation 3622 . 3623) (punctuation 3621 . 3622) (symbol 3616 . 3621) (punctuation 3612 . 3613) (symbol 3603 . 3612) (punctuation 3602 . 3603) (punctuation 3601 . 3602) (symbol 3598 . 3601) (TYPENAME 3589 . 3597) (punctuation 3587 . 3588) (symbol 3581 . 3587) (TYPENAME 3572 . 3580) (punctuation 3571 . 3572) (TEMPLATE 3562 . 3570) (semantic-list 3025 . 3048) (CONST 3019 . 3024) (semantic-list 3016 . 3018) (BOOL 3012 . 3016) (OPERATOR 3003 . 3011) (EXPLICIT 2994 . 3002) (semantic-list 2783 . 2849) (symbol 2778 . 2782) (punctuation 2777 . 2778) (punctuation 2776 . 2777) (punctuation 2775 . 2776) (semantic-list 2773 . 2775) (symbol 2772 . 2773) (punctuation 2771 . 2772) (symbol 2762 . 2771) (punctuation 2761 . 2762) (punctuation 2760 . 2761) (symbol 2757 . 2760) (TYPENAME 2748 . 2756) (punctuation 2746 . 2747) (punctuation 2745 . 2746) (semantic-list 2739 . 2744) (symbol 2729 . 2739) (symbol 2724 . 2728) (punctuation 2720 . 2721) (symbol 2719 . 2720) (CLASS 2713 . 2718) (punctuation 2712 . 2713) (TEMPLATE 2703 . 2711) (punctuation 2319 . 2320) (punctuation 2265 . 2266) (DELETE 2259 . 2265) (punctuation 2257 . 2258) (semantic-list 2228 . 2256) (punctuation 2227 . 2228) (OPERATOR 2219 . 2227) (punctuation 2217 . 2218) (symbol 2199 . 2217) (semantic-list 2147 . 2195) (symbol 2138 . 2146) (semantic-list 2110 . 2137) (symbol 2092 . 2110) (punctuation 2131 . 2132) (punctuation 2088 . 2089) (DELETE 2082 . 2088) (punctuation 2080 . 2081) (semantic-list 2051 . 2079) (symbol 2033 . 2051) (punctuation 1955 . 1956) (symbol 1946 . 1954) (USING 1940 . 1945) (punctuation 1917 . 1918) (symbol 1907 . 1916) (USING 1901 . 1906) (punctuation 1861 . 1862) (symbol 1855 . 1860) (USING 1849 . 1854) (punctuation 1727 . 1728) (semantic-list 1713 . 1727) (punctuation 1700 . 1701) (punctuation 1396 . 1397) (symbol 1383 . 1395) (USING 1377 . 1382) (symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599))
      :lexical-table 
        '(("BENCHMARK_PARAM_MULTI" (spp-arg-list ("name" "param") 12135 . 12148) . ((symbol "BENCHMARK_NAMED_PARAM_MULTI" 12182 . 12209) (semantic-list "(name, param, param)" 12209 . 12229)))
          ("BENCHMARK_DRAW_LINE" (spp-arg-list nil 17565 . 17567) . 
              ((STATIC "static" 17616 . 17622) (BOOL "bool" 17623 . 17627) (symbol "FB_ANONYMOUS_VARIABLE" 17628 . 17649) (semantic-list "(follyBenchmarkUnused)" 17649 . 17671) (punctuation "=" 17672 . 17673) (semantic-list "(             \\
    ::folly::addBenchmark(__FILE__, \"-\", []() -> unsigned { return 0; }), \\
    true)" 17674 . 17775) (punctuation ";" 17775 . 17776)))
          ("BENCHMARK_PARAM" (spp-arg-list ("name" "param") 11894 . 11907) . ((symbol "BENCHMARK_NAMED_PARAM" 11947 . 11968) (semantic-list "(name, param, param)" 11968 . 11988)))
          ("BENCHMARK_RELATIVE" (spp-arg-list ("name" "...") 14868 . 14879) . ((symbol "BENCHMARK_IMPL" 14910 . 14924) (semantic-list "(                                               \\
    name,                                                       \\
    \"%\" FB_STRINGIZE(name),                                     \\
    FB_ARG_2_OR_1(1, ## __VA_ARGS__),                           \\
    FB_ONE_OR_NONE(unsigned, ## __VA_ARGS__),                   \\
    __VA_ARGS__)" 14924 . 15254)))
          ("BENCHMARK_RELATIVE_NAMED_PARAM" (spp-arg-list ("name" "param_name" "...") 16290 . 16313) . 
              ((symbol "BENCHMARK_IMPL" 16328 . 16342) (semantic-list "(                                                       \\
      FB_CONCATENATE(name, FB_CONCATENATE(_, param_name)),              \\
      \"%\" FB_STRINGIZE(name) \"(\" FB_STRINGIZE(param_name) \")\",          \\
      iters,                                                            \\
      unsigned,                                                         \\
      iters)" 16342 . 16708) (semantic-list "{                                                          \\
    name(iters, ## __VA_ARGS__);                                        \\
  }" 16709 . 16847)))
          ("BENCHMARK_IMPL" (spp-arg-list ("funName" "stringName" "rv" "paramType" "paramName") 8179 . 8226) . 
              ((STATIC "static" 8233 . 8239) (VOID "void" 8240 . 8244) (symbol "funName" 8245 . 8252) (semantic-list "(paramType)" 8252 . 8263) (punctuation ";" 8263 . 8264) (STATIC "static" 8307 . 8313) (BOOL "bool" 8314 . 8318) (symbol "FB_ANONYMOUS_VARIABLE" 8319 . 8340) (semantic-list "(follyBenchmarkUnused)" 8340 . 8362) (punctuation "=" 8363 . 8364) (semantic-list "(           \\
    ::folly::addBenchmark(__FILE__, stringName,                         \\
      [](paramType paramName) -> unsigned { funName(paramName);         \\
                                            return rv; }),              \\
    true)" 8365 . 8610) (punctuation ";" 8610 . 8611) (STATIC "static" 8677 . 8683) (VOID "void" 8684 . 8688) (symbol "funName" 8689 . 8696) (semantic-list "(paramType paramName)" 8696 . 8717)))
          ("BENCHMARK" (spp-arg-list ("name" "...") 9944 . 9955) . ((symbol "BENCHMARK_IMPL" 9995 . 10009) (semantic-list "(                                               \\
    name,                                                       \\
    FB_STRINGIZE(name),                                         \\
    FB_ARG_2_OR_1(1, ## __VA_ARGS__),                           \\
    FB_ONE_OR_NONE(unsigned, ## __VA_ARGS__),                   \\
    __VA_ARGS__)" 10009 . 10339)))
          ("BENCHMARK_NAMED_PARAM_MULTI" (spp-arg-list ("name" "param_name" "...") 13737 . 13760) . 
              ((symbol "BENCHMARK_MULTI_IMPL" 13778 . 13798) (semantic-list "(                                                 \\
      FB_CONCATENATE(name, FB_CONCATENATE(_, param_name)),              \\
      FB_STRINGIZE(name) \"(\" FB_STRINGIZE(param_name) \")\",              \\
      unsigned,                                                         \\
      iters)" 13798 . 14084) (semantic-list "{                                                          \\
    return name(iters, ## __VA_ARGS__);                                 \\
  }" 14085 . 14223)))
          ("BENCHMARK_NAMED_PARAM" (spp-arg-list ("name" "param_name" "...") 13012 . 13035) . 
              ((symbol "BENCHMARK_IMPL" 13059 . 13073) (semantic-list "(                                                       \\
      FB_CONCATENATE(name, FB_CONCATENATE(_, param_name)),              \\
      FB_STRINGIZE(name) \"(\" FB_STRINGIZE(param_name) \")\",              \\
      iters,                                                            \\
      unsigned,                                                         \\
      iters)" 13073 . 13439) (semantic-list "{                                                          \\
    name(iters, ## __VA_ARGS__);                                        \\
  }" 13440 . 13578)))
          ("BENCHMARK_RELATIVE_MULTI" (spp-arg-list ("name" "...") 15407 . 15418) . ((symbol "BENCHMARK_MULTI_IMPL" 15443 . 15463) (semantic-list "(                                         \\
    name,                                                       \\
    \"%\" FB_STRINGIZE(name),                                     \\
    FB_ONE_OR_NONE(unsigned, ## __VA_ARGS__),                   \\
    __VA_ARGS__)" 15463 . 15721)))
          ("BENCHMARK_RELATIVE_PARAM_MULTI" (spp-arg-list ("name" "param") 16082 . 16095) . ((symbol "BENCHMARK_RELATIVE_NAMED_PARAM_MULTI" 16120 . 16156) (semantic-list "(name, param, param)" 16156 . 16176)))
          ("BENCHMARK_RELATIVE_NAMED_PARAM_MULTI" (spp-arg-list ("name" "param_name" "...") 17024 . 17047) . 
              ((symbol "BENCHMARK_MULTI_IMPL" 17056 . 17076) (semantic-list "(                                                 \\
      FB_CONCATENATE(name, FB_CONCATENATE(_, param_name)),              \\
      \"%\" FB_STRINGIZE(name) \"(\" FB_STRINGIZE(param_name) \")\",          \\
      unsigned,                                                         \\
      iters)" 17076 . 17362) (semantic-list "{                                                          \\
    return name(iters, ## __VA_ARGS__);                                 \\
  }" 17363 . 17501)))
          ("BENCHMARK_SUSPEND" . 
              ((IF "if" 18143 . 18145) (semantic-list "(auto FB_ANONYMOUS_VARIABLE(BENCHMARK_SUSPEND) =   \\
      ::folly::BenchmarkSuspender())" 18146 . 18235) (semantic-list "{}" 18236 . 18238) (ELSE "else" 18259 . 18263)))
          ("BENCHMARK_MULTI_IMPL" (spp-arg-list ("funName" "stringName" "paramType" "paramName") 8912 . 8955) . 
              ((STATIC "static" 8960 . 8966) (UNSIGNED "unsigned" 8967 . 8975) (symbol "funName" 8976 . 8983) (semantic-list "(paramType)" 8983 . 8994) (punctuation ";" 8994 . 8995) (STATIC "static" 9034 . 9040) (BOOL "bool" 9041 . 9045) (symbol "FB_ANONYMOUS_VARIABLE" 9046 . 9067) (semantic-list "(follyBenchmarkUnused)" 9067 . 9089) (punctuation "=" 9090 . 9091) (semantic-list "(           \\
    ::folly::addBenchmark(__FILE__, stringName,                         \\
      [](paramType paramName) { return funName(paramName); }),          \\
    true)" 9092 . 9263) (punctuation ";" 9263 . 9264) (STATIC "static" 9330 . 9336) (UNSIGNED "unsigned" 9337 . 9345) (symbol "funName" 9346 . 9353) (semantic-list "(paramType paramName)" 9353 . 9374)))
          ("BENCHMARK_RELATIVE_PARAM" (spp-arg-list ("name" "param") 15823 . 15836) . ((symbol "BENCHMARK_RELATIVE_NAMED_PARAM" 15867 . 15897) (semantic-list "(name, param, param)" 15897 . 15917)))
          ("BENCHMARK_MULTI" (spp-arg-list ("name" "...") 10860 . 10871) . ((symbol "BENCHMARK_MULTI_IMPL" 10905 . 10925) (semantic-list "(                                         \\
    name,                                                       \\
    FB_STRINGIZE(name),                                         \\
    FB_ONE_OR_NONE(unsigned, ## __VA_ARGS__),                   \\
    __VA_ARGS__)" 10925 . 11183)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/Benchmark.h" include (:system-flag t) nil [659 687])
            ("folly/Foreach.h" include (:system-flag t) nil [688 714])
            ("folly/json.h" include (:system-flag t) nil [715 738])
            ("folly/String.h" include (:system-flag t) nil [739 764])
            ("algorithm" include (:system-flag t) nil [766 786])
            ("boost/regex.hpp" include (:system-flag t) nil [787 813])
            ("cmath" include (:system-flag t) nil [814 830])
            ("iostream" include (:system-flag t) nil [831 850])
            ("limits" include (:system-flag t) nil [851 868])
            ("utility" include (:system-flag t) nil [869 887])
            ("vector" include (:system-flag t) nil [888 905])
            ("cstring" include (:system-flag t) nil [906 924])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [926 946])
            ("DEFINE_bool" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("benchmark" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [960 970])
                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [971 977]))                  
                :type "int")
                nil [948 997])
            ("DEFINE_bool" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1010 1015])
                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1016 1022]))                  
                :type "int")
                nil [998 1049])
            ("DEFINE_string" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("bm_regex" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1070 1079]))                  
                :type "int")
                nil [1051 1153])
            ("DEFINE_int64" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("bm_min_usec" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1173 1185]))                  
                :type "int")
                nil [1155 1261])
            ("DEFINE_int32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("bm_min_iters" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1281 1294]))                  
                :type "int")
                nil [1263 1363])
            ("DEFINE_int64" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("bm_max_iters" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1383 1396]))                  
                :type "int")
                nil [1365 1471])
            ("DEFINE_int32" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("bm_max_secs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1491 1503]))                  
                :type "int")
                nil [1473 1570])
            ("folly" type
               (:members 
                  ( ("BenchmarkSuspender::timeSpent" variable (:type ("std::chrono::high_resolution_clock::duration" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1591 1666])
                    ("BenchmarkFun" variable (:type "int") (reparse-symbol namespacesubparts) [1721 1734])
                    ("benchmarks" function (:type ("vector" type
                         (:template-specifier 
                            ( ("tuple" type (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("string" type nil nil nil)
                                  ("BenchmarkFun" type nil nil nil))                                ) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [1737 1886])
                    ("FB_FOLLY_GLOBAL_BENCHMARK_BASELINE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1896 1930])
                    ("FB_STRINGIZE_X2" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1970 1985])
                    ("BENCHMARK" function
                       (:arguments 
                          ( ("" variable (:type ("FB_FOLLY_GLOBAL_BENCHMARK_BASELINE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2043 2078]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2033 2154])
                    ("getGlobalBenchmarkBaselineIndex" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [2156 2551])
                    ("addBenchmarkImpl" function
                       (:parent "detail"
                        :arguments 
                          ( ("file" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [2649 2666])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [2667 2684])
                            ("fun" variable (:type ("BenchmarkFun" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2715 2732]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2619 2793])
                    ("estimateTime" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("begin" variable
                               (:pointer 1
                                :type "double")
                                (reparse-symbol arg-sub-list) [2899 2914])
                            ("end" variable
                               (:pointer 1
                                :type "double")
                                (reparse-symbol arg-sub-list) [2915 2928]))                          
                        :type "double")
                        (reparse-symbol namespacesubparts) [2872 3113])
                    ("runBenchmarkGetNSPerIteration" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("fun" variable
                               (:reference 1
                                :constant-flag t
                                :type ("BenchmarkFun" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3159 3183])
                            ("globalBaseline" variable
                               (:constant-flag t
                                :type "double")
                                (reparse-symbol arg-sub-list) [3228 3256]))                          
                        :type "double")
                        (reparse-symbol namespacesubparts) [3115 5558])
                    ("ScaleInfo" type
                       (:members 
                          ( ("boundary" variable (:type "double") (reparse-symbol classsubparts) [5581 5597])
                            ("suffix" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol classsubparts) [5600 5619]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [5560 5622])
                    ("kTimeSuffixes" variable
                       (:dereference 1
                        :typemodifiers ("static")
                        :constant-flag t
                        :type ("ScaleInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5624 5886])
                    ("kMetricSuffixes" variable
                       (:dereference 1
                        :typemodifiers ("static")
                        :constant-flag t
                        :type ("ScaleInfo" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5888 6491])
                    ("humanReadable" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("n" variable (:type "double") (reparse-symbol arg-sub-list) [6521 6530])
                            ("decimals" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [6531 6553])
                            ("scales" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("ScaleInfo" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6582 6606]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6493 6968])
                    ("readableTime" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("n" variable (:type "double") (reparse-symbol arg-sub-list) [6997 7006])
                            ("decimals" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7007 7029]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [6970 7085])
                    ("metricReadable" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("n" variable (:type "double") (reparse-symbol arg-sub-list) [7116 7125])
                            ("decimals" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [7126 7148]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7087 7206])
                    ("printBenchmarkResultsAsTable" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("tuple" type (:template-specifier 
                                            ( ("string" type nil nil nil)
                                              ("string" type nil nil nil)
                                              ("double" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7252 7303]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7208 9262])
                    ("printBenchmarkResultsAsJson" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("tuple" type (:template-specifier 
                                            ( ("string" type nil nil nil)
                                              ("string" type nil nil nil)
                                              ("double" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9307 9358]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9264 9525])
                    ("printBenchmarkResults" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("tuple" type (:template-specifier 
                                            ( ("string" type nil nil nil)
                                              ("string" type nil nil nil)
                                              ("double" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [9564 9615]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9527 9734])
                    ("runBenchmarks" function (:type "void") (reparse-symbol namespacesubparts) [9736 10863]))                  
                :type "namespace")
                nil [1572 10866]))          
      :file "Benchmark.cpp"
      :pointmax 10886
      :fsize 10885
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((punctuation 1719 . 1720) (semantic-list 1705 . 1719) (symbol 1693 . 1705) (punctuation 1692 . 1693) (punctuation 1691 . 1692) (symbol 1685 . 1691) (punctuation 1684 . 1685) (symbol 1676 . 1684) (TYPEDEF 1668 . 1675) (string 1515 . 1568) (number 1508 . 1509) (string 1414 . 1469) (number 1406 . 1408) (punctuation 1404 . 1405) (punctuation 1403 . 1404) (number 1401 . 1402) (string 1306 . 1361) (number 1299 . 1300) (string 1199 . 1259) (number 1190 . 1193) (string 1092 . 1151) (string 1084 . 1086) (string 1023 . 1047) (string 978 . 995)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/Likely.h" include (:system-flag t) nil [903 928])
            ("folly/LockTraits.h" include (:system-flag t) nil [929 958])
            ("folly/Preprocessor.h" include (:system-flag t) nil [959 990])
            ("folly/SharedMutex.h" include (:system-flag t) nil [991 1021])
            ("folly/Traits.h" include (:system-flag t) nil [1022 1047])
            ("glog/logging.h" include (:system-flag t) nil [1048 1073])
            ("mutex" include (:system-flag t) nil [1074 1090])
            ("type_traits" include (:system-flag t) nil [1091 1113])
            ("folly" type
               (:members 
                  ( ("LockedPtrBase" type
                       (:template 
                          ( ("LockedType" type (:type "class") nil nil)
                            ("Mutex" type (:type "class") nil nil)
                            ("LockPolicy" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1134 1213])
                    ("LockedPtr" type
                       (:template 
                          ( ("LockedType" type (:type "class") nil nil)
                            ("LockPolicy" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1214 1276])
                    ("LockedGuardPtr" type
                       (:template 
                          ( ("LockedType" type (:type "class") nil nil)
                            ("LockPolicy" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1277 1366])
                    ("SynchronizedBase" type
                       (:template 
                          ( ("Subclass" type (:type "class") nil nil)
                            ("detail::MutexLevel" type (:typevar "level") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2238 2313])
                    ("SynchronizedBase" type
                       (:template 
                          ( ("Subclass" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [2576 2583])
                            ("folly::LockedPtr" variable (:type "int") (reparse-symbol classsubparts) [2606 2654])
                            ("folly::LockedPtr" variable (:type "int") (reparse-symbol classsubparts) [2689 2743])
                            ("folly::LockedPtr" variable (:type "int") (reparse-symbol classsubparts) [2771 2822])
                            ("wlock" function (:type ("LockedPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3084 3159])
                            ("wlock" function
                               (:methodconst-flag t
                                :type ("ConstWLockedPtr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3162 3261])
                            ("rlock" function
                               (:methodconst-flag t
                                :type ("ConstLockedPtr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3381 3478])
                            ("wlock" function
                               (:template 
                                  ( ("Rep" type (:type "class") nil nil)
                                    ("Period" type (:type "class") nil nil))                                  
                                :type ("LockedPtr" type (:type "class") nil nil)
                                :arguments 
                                  ( ("timeout" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::chrono::duration" type
                                             (:template-specifier 
                                                ( ("Rep" type nil nil nil)
                                                  ("Period" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3754 3804]))                                  )
                                (reparse-symbol classsubparts) [3701 3871])
                            ("wlock" function
                               (:template 
                                  ( ("Rep" type (:type "class") nil nil)
                                    ("Period" type (:type "class") nil nil))                                  
                                :type ("ConstWLockedPtr" type (:type "class") nil nil)
                                :arguments 
                                  ( ("timeout" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::chrono::duration" type
                                             (:template-specifier 
                                                ( ("Rep" type nil nil nil)
                                                  ("Period" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3940 3990]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [3874 4075])
                            ("rlock" function
                               (:template 
                                  ( ("Rep" type (:type "class") nil nil)
                                    ("Period" type (:type "class") nil nil))                                  
                                :type ("ConstLockedPtr" type (:type "class") nil nil)
                                :arguments 
                                  ( ("timeout" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::chrono::duration" type
                                             (:template-specifier 
                                                ( ("Rep" type nil nil nil)
                                                  ("Period" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4363 4413]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [4298 4497])
                            ("withWLock" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5176 5186])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5187 5196]))                                  )
                                (reparse-symbol classsubparts) [5133 5333])
                            ("withWLock" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5379 5389])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5390 5399]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [5336 5554])
                            ("withWLockPtr" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5903 5913])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5914 5923]))                                  )
                                (reparse-symbol classsubparts) [5857 5959])
                            ("withWLockPtr" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6008 6018])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6019 6028]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [5962 6070])
                            ("withRLock" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6295 6305])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6306 6315]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [6252 6467])
                            ("withRLockPtr" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6517 6527])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6528 6537]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [6471 6579]))                          
                        :template-specifier 
                          ( ("Subclass" type nil nil nil)
                            ("detail::MutexLevel::SHARED" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [2486 6582])
                    ("SynchronizedBase" type
                       (:template 
                          ( ("Subclass" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [6996 7003])
                            ("folly::LockedPtr" variable (:type "int") (reparse-symbol classsubparts) [7033 7079])
                            ("folly::LockedPtr" variable (:type "int") (reparse-symbol classsubparts) [7120 7172])
                            ("folly::LockedGuardPtr" variable (:type "int") (reparse-symbol classsubparts) [7213 7264])
                            ("folly::LockedGuardPtr" variable (:type "int") (reparse-symbol classsubparts) [7310 7367])
                            ("ulock" function (:type ("UpgradeLockedPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7516 7605])
                            ("ulock" function
                               (:methodconst-flag t
                                :type ("ConstUpgradeLockedPtr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7608 7719])
                            ("ulock" function
                               (:template 
                                  ( ("Rep" type (:type "class") nil nil)
                                    ("Period" type (:type "class") nil nil))                                  
                                :type ("UpgradeLockedPtr" type (:type "class") nil nil)
                                :arguments 
                                  ( ("timeout" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::chrono::duration" type
                                             (:template-specifier 
                                                ( ("Rep" type nil nil nil)
                                                  ("Period" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7928 7978]))                                  )
                                (reparse-symbol classsubparts) [7868 8052])
                            ("ulock" function
                               (:template 
                                  ( ("Rep" type (:type "class") nil nil)
                                    ("Period" type (:type "class") nil nil))                                  
                                :type ("UpgradeLockedPtr" type (:type "class") nil nil)
                                :arguments 
                                  ( ("timeout" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::chrono::duration" type
                                             (:template-specifier 
                                                ( ("Rep" type nil nil nil)
                                                  ("Period" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8122 8172]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [8055 8263])
                            ("withULock" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9054 9064])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9065 9074]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [9011 9195])
                            ("withULockPtr" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9688 9698])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9699 9708]))                                  )
                                (reparse-symbol classsubparts) [9642 9744])
                            ("withULockPtr" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9793 9803])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9804 9813]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [9747 9855]))                          
                        :superclasses 
                          ( ("SynchronizedBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("Subclass" type nil nil nil)
                            ("detail::MutexLevel::UPGRADE" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [6837 9858])
                    ("SynchronizedBase" type
                       (:template 
                          ( ("Subclass" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [10112 10119])
                            ("folly::LockedPtr" variable (:type "int") (reparse-symbol classsubparts) [10142 10190])
                            ("folly::LockedPtr" variable (:type "int") (reparse-symbol classsubparts) [10224 10278])
                            ("lock" function (:type ("LockedPtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10388 10462])
                            ("lock" function
                               (:methodconst-flag t
                                :type ("ConstLockedPtr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10577 10673])
                            ("lock" function
                               (:template 
                                  ( ("Rep" type (:type "class") nil nil)
                                    ("Period" type (:type "class") nil nil))                                  
                                :type ("LockedPtr" type (:type "class") nil nil)
                                :arguments 
                                  ( ("timeout" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::chrono::duration" type
                                             (:template-specifier 
                                                ( ("Rep" type nil nil nil)
                                                  ("Period" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [10889 10939]))                                  )
                                (reparse-symbol classsubparts) [10837 11006])
                            ("lock" function
                               (:template 
                                  ( ("Rep" type (:type "class") nil nil)
                                    ("Period" type (:type "class") nil nil))                                  
                                :type ("ConstLockedPtr" type (:type "class") nil nil)
                                :arguments 
                                  ( ("timeout" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::chrono::duration" type
                                             (:template-specifier 
                                                ( ("Rep" type nil nil nil)
                                                  ("Period" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [11227 11277]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [11170 11361])
                            ("withLock" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12012 12022])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12023 12032]))                                  )
                                (reparse-symbol classsubparts) [11970 12169])
                            ("withLock" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12214 12224])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12225 12234]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [12172 12389])
                            ("withLockPtr" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12746 12756])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12757 12766]))                                  )
                                (reparse-symbol classsubparts) [12701 12801])
                            ("withLockPtr" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Function" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12849 12859])
                                    ("" variable (:type ("function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12860 12869]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [12804 12910]))                          
                        :template-specifier 
                          ( ("Subclass" type nil nil nil)
                            ("detail::MutexLevel::UNIQUE" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [10022 12913])
                    ("ScopedUnlocker" type
                       (:template 
                          ( ("SynchronizedType" type (:type "class") nil nil)
                            ("LockPolicy" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [23851 23924])
                    ("detail" type
                       (:members 
                          ( ("type" variable (:type "int") (reparse-symbol namespacesubparts) [24315 24320])
                            ("type" variable (:type "int") (reparse-symbol namespacesubparts) [24700 24705]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [23926 24707])
                    ("LockedPtrBase" type
                       (:template 
                          ( ("SynchronizedType" type (:type "class") nil nil)
                            ("Mutex" type (:type "class") nil nil)
                            ("LockPolicy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [25710 25717])
                            ("MutexType" variable
                               (:default-value "Mutex"
                                :type "int")
                                (reparse-symbol classsubparts) [25726 25744])
                            ("folly" friend nil (reparse-symbol classsubparts) [25747 25765])
                            ("ScopedUnlocker" variable (:type "int") (reparse-symbol classsubparts) [25767 25812])
                            ("LockedPtrBase" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [25854 25944])
                            ("unlock" function (:type "void") (reparse-symbol classsubparts) [26209 26324])
                            ("protected" label nil (reparse-symbol classsubparts) [26327 26337])
                            ("LockedPtrBase" function
                               (:constructor-flag t
                                :type ("LockedPtrBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26340 26358])
                            ("LockedPtrBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("parent" variable
                                       (:pointer 1
                                        :type ("SynchronizedType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26384 26409]))                                  
                                :type ("LockedPtrBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [26370 26472])
                            ("LockedPtrBase" function
                               (:template 
                                  ( ("Rep" type (:type "class") nil nil)
                                    ("Period" type (:type "class") nil nil))                                  
                                :type ("LockedPtrBase" type (:type "class") nil nil)
                                :arguments 
                                  ( ("parent" variable
                                       (:pointer 1
                                        :type ("SynchronizedType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26533 26558])
                                    ("timeout" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::chrono::duration" type
                                             (:template-specifier 
                                                ( ("Rep" type nil nil nil)
                                                  ("Period" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [26565 26615]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [26475 26718])
                            ("parent_" function
                               (:arguments 
                                  ( ("" variable (:type ("rhs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26775 26779])
                                    ("" variable (:type ("parent_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26779 26787]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [26767 26820])
                            ("getSynchronized" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("data" variable (:type ("UnlockerData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27380 27398]))                                  
                                :type ("SynchronizedType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27339 27421])
                            ("releaseLock" function (:type ("UnlockerData" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27425 27601])
                            ("reacquireLock" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("UnlockerData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [27623 27637])
                                    ("" variable (:type ("data" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27638 27643]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [27604 27740])
                            ("parent_" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("SynchronizedType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [27744 27780]))                          )
                        (reparse-symbol namespacesubparts) [25622 27783])
                    ("LockedPtrBase" type
                       (:template 
                          ( ("SynchronizedType" type (:type "class") nil nil)
                            ("LockPolicy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [28138 28145])
                            ("std::mutex" variable (:type "int") (reparse-symbol classsubparts) [28166 28177])
                            ("folly" friend nil (reparse-symbol classsubparts) [28180 28198])
                            ("ScopedUnlocker" variable (:type "int") (reparse-symbol classsubparts) [28200 28245])
                            ("LockedPtrBase" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [28287 28446])
                            ("lock_" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28508 28528]))                                  
                                :type ("LockedPtrBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [28502 28584])
                            ("getUniqueLock" function (:type ("std::unique_lock" type
                                 (:template-specifier 
                                    ( ("std::mutex" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [29104 29173])
                            ("unlock" function (:type "void") (reparse-symbol classsubparts) [29438 29532])
                            ("protected" label nil (reparse-symbol classsubparts) [29535 29545])
                            ("LockedPtrBase" function
                               (:constructor-flag t
                                :type ("LockedPtrBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29548 29566])
                            ("LockedPtrBase" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("parent" variable
                                       (:pointer 1
                                        :type ("SynchronizedType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29592 29617]))                                  
                                :type ("LockedPtrBase" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29578 29667])
                            ("std::pair" variable (:type "int") (reparse-symbol classsubparts) [29698 29757])
                            ("getSynchronized" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("data" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("UnlockerData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29802 29827]))                                  
                                :type ("SynchronizedType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29761 29857])
                            ("releaseLock" function (:type ("UnlockerData" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29861 30040])
                            ("reacquireLock" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("UnlockerData" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30062 30076])
                                    ("" variable (:type ("data" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30077 30082]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [30043 30168])
                            ("lock_" variable (:type ("std::unique_lock" type
                                 (:template-specifier 
                                    ( ("std::mutex" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [30288 30323])
                            ("parent_" variable
                               (:pointer 1
                                :default-value "nullptr"
                                :type ("SynchronizedType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30326 30362]))                          
                        :template-specifier 
                          ( ("SynchronizedType" type nil nil nil)
                            ("std::mutex" type nil nil nil)
                            ("LockPolicy" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [28021 30365])
                    ("ScopedUnlocker" type
                       (:template 
                          ( ("SynchronizedType" type (:type "class") nil nil)
                            ("LockPolicy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [30517 30524])
                            ("ScopedUnlocker" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("p" variable
                                       (:pointer 1
                                        :type ("LockedPtr" type
                                             (:template-specifier 
                                                ( ("SynchronizedType" type nil nil nil)
                                                  ("LockPolicy" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [30551 30594]))                                  
                                :type ("ScopedUnlocker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30536 30641])
                            ("ptr_" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30816 30822])
                                    ("" variable (:type ("ptr_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30822 30827]))                                  
                                :type ("ScopedUnlocker" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30811 30890])
                            ("ScopedUnlocker" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [30956 31046])
                            ("getSynchronized" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("SynchronizedType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [31140 31263])
                            ("private" label nil (reparse-symbol classsubparts) [31266 31274])
                            ("LockedPtr::UnlockerData" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [31290 31353])
                            ("ptr_" variable
                               (:pointer 1
                                :type ("LockedPtr" type
                                     (:template-specifier 
                                        ( ("SynchronizedType" type nil nil nil)
                                          ("LockPolicy" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [31356 31411])
                            ("data_" variable (:type ("Data" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31414 31425]))                          )
                        (reparse-symbol namespacesubparts) [30441 31428])
                    ("LockedGuardPtr" type
                       (:template 
                          ( ("SynchronizedType" type (:type "class") nil nil)
                            ("LockPolicy" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [38168 38176])
                            ("detail::SynchronizedDataType" variable (:type "int") (reparse-symbol classsubparts) [38269 38316])
                            ("public" label nil (reparse-symbol classsubparts) [38319 38326])
                            ("SynchronizedType::DataType" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [38346 38382])
                            ("SynchronizedType::MutexType" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [38403 38440])
                            ("std::remove_const::type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [38464 38515])
                            ("LockedGuardPtr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("parent" variable
                                       (:pointer 1
                                        :type ("SynchronizedType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38628 38653]))                                  
                                :type ("LockedGuardPtr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38613 38716])
                            ("LockedGuardPtr" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [38758 38822])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :type ("CDataType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38867 38931])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("CDataType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [38976 39038])
                            ("private" label nil (reparse-symbol classsubparts) [39041 39049])
                            ("parent_" variable
                               (:pointer 1
                                :type ("SynchronizedType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [39101 39142]))                          )
                        (reparse-symbol namespacesubparts) [38092 39145])
                    ("acquireLocked" function
                       (:template 
                          ( ("Sync1" type (:type "class") nil nil)
                            ("Sync2" type (:type "class") nil nil))                          
                        :type ("std::tuple" type
                             (:template-specifier 
                                ( ("detail::LockedPtrType" type (:template-specifier 
                                    ( ("Sync1" type nil nil nil))                                    ) nil nil)
                                  ("detail::LockedPtrType" type (:template-specifier 
                                    ( ("Sync2" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("l1" variable
                               (:reference 1
                                :type ("Sync1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39924 39934])
                            ("l2" variable
                               (:reference 1
                                :type ("Sync2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39935 39945]))                          )
                        (reparse-symbol namespacesubparts) [39803 40291])
                    ("acquireLockedPair" function
                       (:template 
                          ( ("Sync1" type (:type "class") nil nil)
                            ("Sync2" type (:type "class") nil nil))                          
                        :type ("std::pair" type
                             (:template-specifier 
                                ( ("detail::LockedPtrType" type (:template-specifier 
                                    ( ("Sync1" type nil nil nil))                                    ) nil nil)
                                  ("detail::LockedPtrType" type (:template-specifier 
                                    ( ("Sync2" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("l1" variable
                               (:reference 1
                                :type ("Sync1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40550 40560])
                            ("l2" variable
                               (:reference 1
                                :type ("Sync2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40561 40571]))                          )
                        (reparse-symbol namespacesubparts) [40426 40711])
                    ("swap" function
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("M" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("lhs" variable
                               (:reference 1
                                :type ("Synchronized" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("M" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [41002 41026])
                            ("rhs" variable
                               (:reference 1
                                :type ("Synchronized" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("M" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [41027 41051]))                          )
                        (reparse-symbol namespacesubparts) [40964 41072])
                    ("SYNCHRONIZED_VAR" variable (:constant-flag t) (reparse-symbol namespacesubparts) [41348 41364])
                    ("SYNCHRONIZED" variable (:constant-flag t) (reparse-symbol namespacesubparts) [41942 41954])
                    ("TIMED_SYNCHRONIZED" variable (:constant-flag t) (reparse-symbol namespacesubparts) [43331 43349])
                    ("SYNCHRONIZED_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [44410 44428])
                    ("TIMED_SYNCHRONIZED_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [44675 44699])
                    ("SYNCHRONIZED_DUAL" variable (:constant-flag t) (reparse-symbol namespacesubparts) [45119 45136]))                  
                :type "namespace")
                nil [1115 45968]))          
      :file "Synchronized.h"
      :pointmax 45991
      :fsize 45990
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((EXPLICIT 38604 . 38612) (punctuation 38544 . 38545) (DELETE 38538 . 38544) (punctuation 38536 . 38537) (semantic-list 38533 . 38535) (symbol 38519 . 38533) (punctuation 38462 . 38463) (symbol 38449 . 38461) (USING 38443 . 38448) (punctuation 38401 . 38402) (symbol 38391 . 38400) (USING 38385 . 38390) (punctuation 38344 . 38345) (symbol 38335 . 38343) (USING 38329 . 38334) (punctuation 38267 . 38268) (symbol 38257 . 38266) (USING 38251 . 38256) (punctuation 37661 . 37662) (semantic-list 31967 . 37661) (punctuation 31965 . 31966) (symbol 31955 . 31965) (punctuation 31931 . 31932) (symbol 31922 . 31931) (punctuation 31921 . 31922) (punctuation 31920 . 31921) (symbol 31904 . 31920) (TYPENAME 31895 . 31903) (punctuation 31871 . 31872) (symbol 31855 . 31871) (punctuation 31831 . 31832) (symbol 31818 . 31831) (PUBLIC 31811 . 31817) (punctuation 31809 . 31810) (symbol 31799 . 31808) (CLASS 31793 . 31798) (punctuation 31791 . 31792) (symbol 31781 . 31791) (CLASS 31775 . 31780) (punctuation 31773 . 31774) (symbol 31757 . 31773) (CLASS 31751 . 31756) (punctuation 31750 . 31751) (TEMPLATE 31741 . 31749) (punctuation 31288 . 31289) (symbol 31283 . 31287) (USING 31277 . 31282) (punctuation 30951 . 30952) (DELETE 30945 . 30951) (punctuation 30943 . 30944) (semantic-list 30918 . 30942) (punctuation 30917 . 30918) (OPERATOR 30909 . 30917) (punctuation 30934 . 30935) (punctuation 30907 . 30908) (symbol 30893 . 30907) (punctuation 30934 . 30935) (punctuation 30821 . 30822) (punctuation 30809 . 30810) (symbol 30794 . 30802) (semantic-list 30769 . 30793) (symbol 30755 . 30769) (punctuation 30785 . 30786) (punctuation 30751 . 30752) (DELETE 30745 . 30751) (punctuation 30743 . 30744) (semantic-list 30719 . 30742) (punctuation 30718 . 30719) (OPERATOR 30710 . 30718) (punctuation 30708 . 30709) (symbol 30694 . 30708) (punctuation 30690 . 30691) (DELETE 30684 . 30690) (punctuation 30682 . 30683) (semantic-list 30658 . 30681) (symbol 30644 . 30658) (EXPLICIT 30527 . 30535) (punctuation 30075 . 30076) (punctuation 29690 . 29691) (symbol 29677 . 29689) (USING 29671 . 29676) (EXPLICIT 29569 . 29577) (semantic-list 28642 . 28753) (symbol 28633 . 28641) (semantic-list 28611 . 28632) (punctuation 28610 . 28611) (OPERATOR 28602 . 28610) (punctuation 28626 . 28627) (punctuation 28600 . 28601) (symbol 28587 . 28600) (punctuation 28626 . 28627) (semantic-list 28517 . 28528) (punctuation 28500 . 28501) (symbol 28485 . 28493) (semantic-list 28463 . 28484) (symbol 28450 . 28463) (punctuation 28478 . 28479) (punctuation 28199 . 28200) (punctuation 28198 . 28199) (punctuation 28164 . 28165) (symbol 28154 . 28163) (USING 28148 . 28153) (punctuation 27636 . 27637) (punctuation 27066 . 27067) (punctuation 27065 . 27066) (symbol 27049 . 27065) (punctuation 27047 . 27048) (symbol 27034 . 27046) (USING 27028 . 27033) (semantic-list 26878 . 27024) (symbol 26869 . 26877) (semantic-list 26847 . 26868) (punctuation 26846 . 26847) (OPERATOR 26838 . 26846) (punctuation 26862 . 26863) (punctuation 26836 . 26837) (symbol 26823 . 26836) (punctuation 26862 . 26863) (punctuation 26778 . 26779) (punctuation 26765 . 26766) (symbol 26756 . 26764) (semantic-list 26734 . 26755) (symbol 26721 . 26734) (punctuation 26749 . 26750) (EXPLICIT 26361 . 26369) (punctuation 25766 . 25767) (punctuation 25765 . 25766) (USING 25720 . 25725) (punctuation 24699 . 24700) (punctuation 24698 . 24699) (punctuation 24697 . 24698) (symbol 24688 . 24697) (punctuation 24687 . 24688) (punctuation 24686 . 24687) (symbol 24670 . 24686) (TYPENAME 24661 . 24669) (punctuation 24655 . 24656) (symbol 24641 . 24655) (punctuation 24640 . 24641) (punctuation 24639 . 24640) (symbol 24623 . 24639) (TYPENAME 24614 . 24622) (punctuation 24608 . 24609) (symbol 24603 . 24608) (punctuation 24602 . 24603) (punctuation 24601 . 24602) (punctuation 24600 . 24601) (symbol 24584 . 24600) (punctuation 24583 . 24584) (symbol 24575 . 24583) (punctuation 24574 . 24575) (punctuation 24573 . 24574) (symbol 24570 . 24573) (punctuation 24564 . 24565) (symbol 24553 . 24564) (punctuation 24552 . 24553) (punctuation 24551 . 24552) (symbol 24548 . 24551) (TYPENAME 24539 . 24547) (punctuation 24537 . 24538) (symbol 24523 . 24536) (USING 24517 . 24522) (punctuation 24515 . 24516) (symbol 24499 . 24515) (CLASS 24493 . 24498) (punctuation 24492 . 24493) (TEMPLATE 24483 . 24491) (punctuation 24314 . 24315) (punctuation 24313 . 24314) (punctuation 24312 . 24313) (symbol 24304 . 24312) (punctuation 24303 . 24304) (punctuation 24302 . 24303) (symbol 24286 . 24302) (TYPENAME 24277 . 24285) (punctuation 24271 . 24272) (CONST 24266 . 24271) (symbol 24257 . 24265) (punctuation 24256 . 24257) (punctuation 24255 . 24256) (symbol 24239 . 24255) (TYPENAME 24230 . 24238) (punctuation 24224 . 24225) (symbol 24219 . 24224) (punctuation 24218 . 24219) (punctuation 24217 . 24218) (punctuation 24216 . 24217) (symbol 24200 . 24216) (punctuation 24199 . 24200) (symbol 24191 . 24199) (punctuation 24190 . 24191) (punctuation 24189 . 24190) (symbol 24186 . 24189) (punctuation 24180 . 24181) (symbol 24169 . 24180) (punctuation 24168 . 24169) (punctuation 24167 . 24168) (symbol 24164 . 24167) (TYPENAME 24155 . 24163) (punctuation 24153 . 24154) (symbol 24132 . 24152) (USING 24126 . 24131) (punctuation 24124 . 24125) (symbol 24108 . 24124) (CLASS 24102 . 24107) (punctuation 24101 . 24102) (TEMPLATE 24092 . 24100) (punctuation 23848 . 23849) (semantic-list 14357 . 23848) (punctuation 14355 . 14356) (symbol 14350 . 14355) (punctuation 14349 . 14350) (punctuation 14348 . 14349) (punctuation 14347 . 14348) (symbol 14342 . 14347) (punctuation 14341 . 14342) (symbol 14326 . 14341) (punctuation 14298 . 14299) (punctuation 14297 . 14298) (symbol 14292 . 14297) (punctuation 14290 . 14291) (symbol 14289 . 14290) (punctuation 14288 . 14289) (symbol 14276 . 14288) (punctuation 14248 . 14249) (symbol 14232 . 14248) (PUBLIC 14225 . 14231) (punctuation 14223 . 14224) (symbol 14210 . 14222) (STRUCT 14203 . 14209) (punctuation 14201 . 14202) (symbol 14190 . 14201) (punctuation 14188 . 14189) (symbol 14182 . 14187) (CLASS 14176 . 14181) (punctuation 14174 . 14175) (symbol 14173 . 14174) (CLASS 14167 . 14172) (punctuation 14166 . 14167) (TEMPLATE 14157 . 14165) (punctuation 12858 . 12859) (punctuation 12755 . 12756) (punctuation 12223 . 12224) (punctuation 12021 . 12022) (punctuation 10223 . 10224) (punctuation 10222 . 10223) (punctuation 10214 . 10215) (symbol 10199 . 10213) (USING 10193 . 10198) (punctuation 10141 . 10142) (punctuation 10140 . 10141) (punctuation 10138 . 10139) (symbol 10128 . 10137) (USING 10122 . 10127) (punctuation 9802 . 9803) (punctuation 9697 . 9698) (punctuation 9063 . 9064) (punctuation 7309 . 7310) (punctuation 7308 . 7309) (punctuation 7300 . 7301) (symbol 7273 . 7299) (USING 7267 . 7272) (punctuation 7212 . 7213) (punctuation 7211 . 7212) (punctuation 7203 . 7204) (symbol 7181 . 7202) (USING 7175 . 7180) (punctuation 7119 . 7120) (punctuation 7118 . 7119) (punctuation 7110 . 7111) (symbol 7088 . 7109) (USING 7082 . 7087) (punctuation 7032 . 7033) (punctuation 7031 . 7032) (punctuation 7029 . 7030) (symbol 7012 . 7028) (USING 7006 . 7011) (punctuation 6526 . 6527) (punctuation 6304 . 6305) (punctuation 6017 . 6018) (punctuation 5912 . 5913) (punctuation 5388 . 5389) (punctuation 5185 . 5186) (punctuation 2770 . 2771) (punctuation 2769 . 2770) (punctuation 2767 . 2768) (symbol 2752 . 2766) (USING 2746 . 2751) (punctuation 2688 . 2689) (punctuation 2687 . 2688) (punctuation 2679 . 2680) (symbol 2663 . 2678) (USING 2657 . 2662) (punctuation 2605 . 2606) (punctuation 2604 . 2605) (punctuation 2602 . 2603) (symbol 2592 . 2601) (USING 2586 . 2591) (punctuation 2036 . 2037) (punctuation 2035 . 2036) (symbol 2025 . 2035) (punctuation 2024 . 2025) (punctuation 2023 . 2024) (punctuation 2022 . 2023) (symbol 2017 . 2022) (punctuation 2016 . 2017) (symbol 2006 . 2016) (punctuation 2000 . 2001) (symbol 1991 . 2000) (punctuation 1990 . 1991) (punctuation 1989 . 1990) (punctuation 1988 . 1989) (symbol 1983 . 1988) (punctuation 1982 . 1983) (symbol 1972 . 1982) (punctuation 1966 . 1967) (symbol 1962 . 1966) (punctuation 1956 . 1957) (symbol 1937 . 1956) (punctuation 1936 . 1937) (punctuation 1935 . 1936) (symbol 1929 . 1935) (punctuation 1927 . 1928) (symbol 1911 . 1926) (USING 1905 . 1910) (punctuation 1903 . 1904) (symbol 1898 . 1903) (CLASS 1892 . 1897) (punctuation 1891 . 1892) (TEMPLATE 1882 . 1890) (symbol 897 . 901) (symbol 890 . 896) (punctuation 889 . 890))
      :lexical-table 
        '(("TIMED_SYNCHRONIZED" (spp-arg-list ("timeout" "...") 43349 . 43363) . 
              ((IF "if" 43406 . 43408) (semantic-list "(bool SYNCHRONIZED_VAR(state) = false)" 43409 . 43447) (semantic-list "{                                  \\
  }" 43448 . 43488) (ELSE "else" 43489 . 43493) (FOR "for" 43570 . 43573) (semantic-list "(auto SYNCHRONIZED_VAR(lockedPtr) =                                    \\
             (FB_VA_GLUE(FB_ARG_2_OR_1, (__VA_ARGS__))).timedAcquire(timeout); \\
         !SYNCHRONIZED_VAR(state);                                             \\
         SYNCHRONIZED_VAR(state) = true)" 43574 . 43849) (FOR "for" 43896 . 43899) (semantic-list "(auto FB_VA_GLUE(FB_ARG_1, (__VA_ARGS__)) =                          \\
               (!SYNCHRONIZED_VAR(lockedPtr)                                   \\
                    ? nullptr                                                  \\
                    : SYNCHRONIZED_VAR(lockedPtr).operator->());               \\
           !SYNCHRONIZED_VAR(state);                                           \\
           SYNCHRONIZED_VAR(state) = true)" 43900 . 44337)))
          ("SYNCHRONIZED_DUAL" (spp-arg-list ("n1" "e1" "n2" "e2") 45136 . 45152) . 
              ((IF "if" 45194 . 45196) (semantic-list "(bool SYNCHRONIZED_VAR(state) = false)" 45197 . 45235) (semantic-list "{                                  \\
  }" 45236 . 45276) (ELSE "else" 45277 . 45281) (FOR "for" 45358 . 45361) (semantic-list "(auto SYNCHRONIZED_VAR(ptrs) = acquireLockedPair(e1, e2);              \\
         !SYNCHRONIZED_VAR(state);                                             \\
         SYNCHRONIZED_VAR(state) = true)" 45362 . 45556) (FOR "for" 45603 . 45606) (semantic-list "(auto& n1 = *SYNCHRONIZED_VAR(ptrs).first; !SYNCHRONIZED_VAR(state); \\
           SYNCHRONIZED_VAR(state) = true)" 45607 . 45720) (FOR "for" 45767 . 45770) (semantic-list "(auto& n2 = *SYNCHRONIZED_VAR(ptrs).second;                        \\
             !SYNCHRONIZED_VAR(state);                                         \\
             SYNCHRONIZED_VAR(state) = true)" 45771 . 45965)))
          ("SYNCHRONIZED" (spp-arg-list ("...") 41954 . 41959) . 
              ((symbol "FOLLY_PUSH_WARNING" 42008 . 42026) (symbol "FOLLY_GCC_DISABLE_WARNING" 42080 . 42105) (semantic-list "(\"-Wshadow\")" 42105 . 42117) (symbol "FOLLY_MSVC_DISABLE_WARNING" 42152 . 42178) (semantic-list "(4189)" 42178 . 42184) (symbol "FOLLY_MSVC_DISABLE_WARNING" 42224 . 42250) (semantic-list "(4456)" 42250 . 42256) (symbol "FOLLY_MSVC_DISABLE_WARNING" 42296 . 42322) (semantic-list "(4457)" 42322 . 42328) (symbol "FOLLY_MSVC_DISABLE_WARNING" 42368 . 42394) (semantic-list "(4458)" 42394 . 42400) (symbol "FOLLY_MSVC_DISABLE_WARNING" 42440 . 42466) (semantic-list "(4459)" 42466 . 42472) (symbol "FOLLY_GCC_DISABLE_NEW_SHADOW_WARNINGS" 42512 . 42549) (IF "if" 42584 . 42586) (semantic-list "(bool SYNCHRONIZED_VAR(state) = false)" 42587 . 42625) (semantic-list "{                         \\
  }" 42626 . 42657) (ELSE "else" 42658 . 42662) (FOR "for" 42730 . 42733) (semantic-list "(auto SYNCHRONIZED_VAR(lockedPtr) =                           \\
             (FB_VA_GLUE(FB_ARG_2_OR_1, (__VA_ARGS__))).operator->(); \\
         !SYNCHRONIZED_VAR(state);                                    \\
         SYNCHRONIZED_VAR(state) = true)" 42734 . 42982) (FOR "for" 43020 . 43023) (semantic-list "(auto& FB_VA_GLUE(FB_ARG_1, (__VA_ARGS__)) =                \\
               *SYNCHRONIZED_VAR(lockedPtr).operator->();             \\
           !SYNCHRONIZED_VAR(state);                                  \\
           SYNCHRONIZED_VAR(state) = true)" 43024 . 43272) (symbol "FOLLY_POP_WARNING" 43304 . 43321)))
          ("SYNCHRONIZED_CONST" (spp-arg-list ("...") 44428 . 44433) . ((symbol "SYNCHRONIZED" 44449 . 44461) (semantic-list "(                            \\
      FB_VA_GLUE(FB_ARG_1, (__VA_ARGS__)), \\
      (FB_VA_GLUE(FB_ARG_2_OR_1, (__VA_ARGS__))).asConst())" 44461 . 44596)))
          ("TIMED_SYNCHRONIZED_CONST" (spp-arg-list ("timeout" "...") 44699 . 44713) . ((symbol "TIMED_SYNCHRONIZED" 44718 . 44736) (semantic-list "(                          \\
      timeout,                                 \\
      FB_VA_GLUE(FB_ARG_1, (__VA_ARGS__)),     \\
      (FB_VA_GLUE(FB_ARG_2_OR_1, (__VA_ARGS__))).asConst())" 44736 . 44922)))
          ("SYNCHRONIZED_VAR" (spp-arg-list ("var") 41364 . 41369) . ((symbol "FB_CONCATENATE" 41370 . 41384) (semantic-list "(SYNCHRONIZED_##var##_, __LINE__)" 41384 . 41417)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("climits" include (:system-flag t) nil [612 630])
            ("folly/Function.h" include (:system-flag t) nil [632 659])
            ("folly" type
               (:members 
                  ( ("Executor" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [812 819])
                            ("add" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable (:type ("Func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [976 981]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [959 986])
                            ("addWithPriority" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("" variable (:type ("Func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1148 1153])
                                    ("priority" variable (:type ("int8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1154 1170]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1119 1171])
                            ("getNumPriorities" function
                               (:methodconst-flag t
                                :typemodifiers ("virtual")
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1175 1235])
                            ("LO_PRI" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "SCHAR_MIN"
                                :type ("int8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1239 1279])
                            ("MID_PRI" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "0"
                                :type ("int8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1282 1314])
                            ("HI_PRI" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "SCHAR_MAX"
                                :type ("int8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1317 1357])
                            ("addPtr" function
                               (:template 
                                  ( ("P" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("fn" variable (:type ("P" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1691 1696]))                                  )
                                (reparse-symbol classsubparts) [1658 1746])
                            ("KeepAlive" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [1771 1778])
                                    ("KeepAlive" function
                                       (:constructor-flag t
                                        :type ("KeepAlive" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1783 1797])
                                    ("reset" function (:type "void") (reparse-symbol classsubparts) [1803 1848])
                                    ("private" label nil (reparse-symbol classsubparts) [1932 1940])
                                    ("Executor" friend nil (reparse-symbol classsubparts) [1945 1966])
                                    ("KeepAlive" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("executor" variable
                                               (:pointer 1
                                                :type ("folly::Executor" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1991 2017]))                                          
                                        :type ("KeepAlive" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1981 2042])
                                    ("Deleter" type
                                       (:members 
                                          ( ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("executor" variable
                                                       (:pointer 1
                                                        :type ("folly::Executor" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2087 2113]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [2071 2161]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [2048 2168])
                                    ("executor_" variable (:type ("std::unique_ptr" type
                                         (:template-specifier 
                                            ( ("folly::Executor" type nil nil nil)
                                              ("Deleter" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [2173 2225]))                                  
                                :type "class")
                                (reparse-symbol classsubparts) [1750 2230])
                            ("getKeepAliveToken" function
                               (:typemodifiers ("virtual")
                                :type ("KeepAlive" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2567 2625])
                            ("protected" label nil (reparse-symbol classsubparts) [2628 2638])
                            ("keepAliveRelease" function
                               (:prototype-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [2641 2673])
                            ("makeKeepAlive" function (:type ("KeepAlive" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2677 2736]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [794 2739]))                  
                :type "namespace")
                nil [661 2742]))          
      :file "Executor.h"
      :pointmax 2752
      :fsize 2751
      :lastmodtime '(22900 5798 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("cstddef" include (:system-flag t) nil [2151 2169])
            ("cstdint" include (:system-flag t) nil [2170 2188])
            ("folly" type
               (:members 
                  ( ("hash" type
                       (:members 
                          ( ("SpookyHashV2" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2247 2254])
                                    ("Hash128" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("message" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [2379 2399])
                                            ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2428 2442])
                                            ("hash1" variable
                                               (:pointer 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2488 2504])
                                            ("hash2" variable
                                               (:pointer 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2559 2575]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [2350 2576])
                                    ("Hash64" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("message" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [2744 2764])
                                            ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2793 2807])
                                            ("seed" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2853 2867]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2712 2998])
                                    ("Hash32" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("message" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [3122 3142])
                                            ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3171 3185])
                                            ("seed" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3231 3245]))                                          
                                        :type ("uint32_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3090 3401])
                                    ("Init" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("seed1" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3492 3507])
                                            ("seed2" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3563 3578]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [3473 3579])
                                    ("Update" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("message" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [3733 3753])
                                            ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3783 3797]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [3712 3798])
                                    ("Final" function
                                       (:prototype-flag t
                                        :methodconst-flag t
                                        :arguments 
                                          ( ("hash1" variable
                                               (:pointer 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4159 4175])
                                            ("hash2" variable
                                               (:pointer 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4235 4251]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [4139 4258])
                                    ("Rot64" function
                                       (:typemodifiers ("static" "inline")
                                        :arguments 
                                          ( ("x" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4397 4408])
                                            ("k" variable (:type "int") (reparse-symbol arg-sub-list) [4409 4415]))                                          
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4368 4470])
                                    ("Mix" function
                                       (:typemodifiers ("static" "inline")
                                        :arguments 
                                          ( ("data" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5083 5104])
                                            ("s0" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5113 5126])
                                            ("s1" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5127 5140])
                                            ("s2" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5141 5154])
                                            ("s3" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5155 5168])
                                            ("s4" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5177 5190])
                                            ("s5" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5191 5204])
                                            ("s6" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5205 5218])
                                            ("s7" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5219 5232])
                                            ("s8" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5241 5254])
                                            ("s9" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5255 5268])
                                            ("s10" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5269 5283])
                                            ("s11" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5283 5297]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [5051 6237])
                                    ("EndPartial" function
                                       (:typemodifiers ("static" "inline")
                                        :arguments 
                                          ( ("h0" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6968 6981])
                                            ("h1" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6982 6995])
                                            ("h2" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6996 7009])
                                            ("h3" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7010 7023])
                                            ("h4" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7032 7045])
                                            ("h5" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7046 7059])
                                            ("h6" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7060 7073])
                                            ("h7" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7074 7087])
                                            ("h8" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7096 7109])
                                            ("h9" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7110 7123])
                                            ("h10" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7124 7138])
                                            ("h11" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7138 7152]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [6929 7802])
                                    ("End" function
                                       (:typemodifiers ("static" "inline")
                                        :arguments 
                                          ( ("data" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7840 7861])
                                            ("h0" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7870 7883])
                                            ("h1" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7884 7897])
                                            ("h2" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7898 7911])
                                            ("h3" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7912 7925])
                                            ("h4" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7934 7947])
                                            ("h5" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7948 7961])
                                            ("h6" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7962 7975])
                                            ("h7" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7976 7989])
                                            ("h8" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7998 8011])
                                            ("h9" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8012 8025])
                                            ("h10" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8026 8040])
                                            ("h11" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8040 8054]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [7808 8467])
                                    ("ShortMix" function
                                       (:typemodifiers ("static" "inline")
                                        :arguments 
                                          ( ("h0" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9057 9070])
                                            ("h1" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9071 9084])
                                            ("h2" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9117 9130])
                                            ("h3" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9131 9144]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [9029 9744])
                                    ("ShortEnd" function
                                       (:typemodifiers ("static" "inline")
                                        :arguments 
                                          ( ("h0" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10316 10329])
                                            ("h1" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10330 10343])
                                            ("h2" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10376 10389])
                                            ("h3" variable
                                               (:reference 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10390 10403]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [10288 10954])
                                    ("private" label nil (reparse-symbol classsubparts) [10956 10964])
                                    ("Short" function
                                       (:prototype-flag t
                                        :typemodifiers ("static")
                                        :arguments 
                                          ( ("message" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [11253 11273])
                                            ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11332 11346])
                                            ("hash1" variable
                                               (:pointer 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11394 11410])
                                            ("hash2" variable
                                               (:pointer 1
                                                :type ("uint64_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [11469 11485]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [11226 11486])
                                    ("sc_numVars" variable
                                       (:default-value "12"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11604 11627])
                                    ("sc_blockSize" variable
                                       (:default-value "sc_numVars*8"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11684 11719])
                                    ("sc_bufSize" variable
                                       (:default-value "2*sc_blockSize"
                                        :type ("size_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [11791 11826])
                                    ("sc_const" variable
                                       (:default-value "0xdeadbeefdeadbeefULL"
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12054 12096])
                                    ("m_data" variable
                                       (:dereference 1
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12102 12132])
                                    ("m_state" variable
                                       (:dereference 1
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12178 12207])
                                    ("m_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12243 12259])
                                    ("m_remainder" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12312 12333]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [2226 12390]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2208 12393]))                  
                :type "namespace")
                nil [2190 12414]))          
      :file "SpookyHashV2.h"
      :pointmax 12435
      :fsize 12434
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((symbol 12044 . 12053) (STATIC 12037 . 12043) (symbol 11781 . 11790) (STATIC 11774 . 11780) (symbol 11674 . 11683) (STATIC 11667 . 11673) (symbol 11594 . 11603) (STATIC 11587 . 11593) (symbol 2145 . 2149) (symbol 2138 . 2144) (punctuation 2137 . 2138)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/SpookyHashV2.h" include (:system-flag t) nil [1218 1249])
            ("folly/CppAttributes.h" include (:system-flag t) nil [1251 1283])
            ("folly/Portability.h" include (:system-flag t) nil [1284 1314])
            ("cstring" include (:system-flag t) nil [1316 1334])
            ("folly" type
               (:members 
                  ( ("hash" type
                       (:members 
                          ( ("Short" function
                               (:parent "SpookyHashV2"
                                :arguments 
                                  ( ("message" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [1511 1531])
                                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1536 1550])
                                    ("hash1" variable
                                       (:pointer 1
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1555 1571])
                                    ("hash2" variable
                                       (:pointer 1
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1576 1592]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [1481 3939])
                            ("Hash128" function
                               (:parent "SpookyHashV2"
                                :arguments 
                                  ( ("message" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [4009 4029])
                                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4034 4048])
                                    ("hash1" variable
                                       (:pointer 1
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4053 4069])
                                    ("hash2" variable
                                       (:pointer 1
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4074 4090]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [3977 5470])
                            ("Init" function
                               (:parent "SpookyHashV2"
                                :arguments 
                                  ( ("seed1" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5519 5534])
                                    ("seed2" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5535 5550]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [5495 5641])
                            ("Update" function
                               (:parent "SpookyHashV2"
                                :arguments 
                                  ( ("message" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [5709 5729])
                                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5730 5744]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [5683 8279])
                            ("Final" function
                               (:methodconst-flag t
                                :parent "SpookyHashV2"
                                :arguments 
                                  ( ("hash1" variable
                                       (:pointer 1
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8380 8396])
                                    ("hash2" variable
                                       (:pointer 1
                                        :type ("uint64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8397 8413]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [8355 9666]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1354 9669]))                  
                :type "namespace")
                nil [1336 9690]))          
      :file "SpookyHashV2.cpp"
      :pointmax 9711
      :fsize 9710
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [765 785])
            ("cctype" include (:system-flag t) nil [786 803])
            ("climits" include (:system-flag t) nil [804 822])
            ("cstddef" include (:system-flag t) nil [823 841])
            ("limits" include (:system-flag t) nil [842 859])
            ("stdexcept" include (:system-flag t) nil [860 880])
            ("string" include (:system-flag t) nil [881 898])
            ("tuple" include (:system-flag t) nil [899 915])
            ("type_traits" include (:system-flag t) nil [916 938])
            ("typeinfo" include (:system-flag t) nil [939 958])
            ("utility" include (:system-flag t) nil [959 977])
            ("boost/implicit_cast.hpp" include (:system-flag t) nil [979 1013])
            ("double-conversion/double-conversion.h" include (:system-flag t) nil [1014 1062])
            ("folly/Demangle.h" include (:system-flag t) nil [1096 1123])
            ("folly/Expected.h" include (:system-flag t) nil [1124 1151])
            ("folly/FBString.h" include (:system-flag t) nil [1152 1179])
            ("folly/Likely.h" include (:system-flag t) nil [1180 1205])
            ("folly/Range.h" include (:system-flag t) nil [1206 1230])
            ("folly/Traits.h" include (:system-flag t) nil [1231 1256])
            ("folly/Unit.h" include (:system-flag t) nil [1257 1280])
            ("folly/portability/Math.h" include (:system-flag t) nil [1281 1316])
            ("folly" type
               (:members 
                  ( ("ConversionErrorBase" type
                       (:superclasses 
                          ( ("std::range_error" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("std::range_error::range_error" variable (:type "int") (reparse-symbol classsubparts) [1843 1873]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1787 1876])
                    ("ConversionError" type
                       (:superclasses 
                          ( ("ConversionErrorBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1932 1939])
                            ("ConversionError" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("str" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1958 1981])
                                    ("code" variable (:type ("ConversionCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1982 2002]))                                  
                                :type ("ConversionError" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1942 2051])
                            ("ConversionError" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("str" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [2071 2087])
                                    ("code" variable (:type ("ConversionCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2088 2108]))                                  
                                :type ("ConversionError" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2055 2157])
                            ("errorCode" function
                               (:methodconst-flag t
                                :type ("ConversionCode" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2161 2217])
                            ("private" label nil (reparse-symbol classsubparts) [2220 2228])
                            ("code_" variable (:type ("ConversionCode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2231 2252]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1878 2255])
                    ("makeConversionError" function
                       (:prototype-flag t
                        :arguments 
                          ( ("code" variable (:type ("ConversionCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3143 3163])
                            ("sp" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3164 3179]))                          
                        :type ("ConversionError" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3107 3180])
                    ("detail" type
                       (:members 
                          ( ("enforceWhitespaceErr" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("sp" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3329 3344]))                                  
                                :type ("ConversionCode" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [3286 3507])
                            ("enforceWhitespace" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("sp" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3604 3619]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [3574 3746]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3182 3748])
                    ("tryTo" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4008 4013])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4014 4020]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3997 4059])
                    ("to" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4198 4203])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4204 4210]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4190 4249])
                    ("tryTo" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4876 4893]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [4865 4922])
                    ("to" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5111 5128]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5103 5157])
                    ("detail" type
                       (:members 
                          ( ("LastElementImpl" type
                               (:members 
                                  ( ("call" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("" variable (:type ("Ignored" type
                                                 (:template-specifier 
                                                    ( ("Ts" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [6276 6288])
                                            ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [6287 6291]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [6259 6294]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [6232 6297])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("LastElementImpl" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6579 6595])
                                    ("" variable (:type ("Ts" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6595 6598])
                                    ("" variable (:type ("call" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6603 6614]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6570 6665]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [5344 6825])
                    ("digits10" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("v" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8130 8141]))                          
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [8105 9983])
                    ("uint64ToBufferUnsafe" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("v" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10564 10575])
                            ("buffer" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [10576 10595]))                          
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [10527 11188])
                    ("toAppend" function
                       (:template 
                          ( ("Tgt" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("value" variable (:type "char") (reparse-symbol arg-sub-list) [11265 11276])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11277 11290]))                          )
                        (reparse-symbol namespacesubparts) [11230 11314])
                    ("estimateSpaceNeeded" function
                       (:typemodifiers ("typename")
                        :arguments 
                          ( ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11437 11439]))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11344 11455])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11682 11692])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11693 11706]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [11668 11876])
                    ("estimateSpaceNeeded" function
                       (:template 
                          ( ("Src" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12012 12022]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [11878 12124])
                    ("estimateSpaceNeeded" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12345 12355]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12320 12402])
                    ("estimateSpaceNeeded" function
                       (:type ("size_t" type (:type "class") nil nil)
                        :arguments 
                          ( ("" variable (:type ("std::nullptr_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12450 12477]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [12404 12493])
                    ("estimateSpaceNeeded" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12658 12668]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12633 12696])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12864 12881])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12882 12895]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [12850 12924])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13055 13073])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13074 13087]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13041 13137])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("fbstring" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13337 13359])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13360 13373]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [13323 13423])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15158 15168])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15169 15182]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15144 15452])
                    ("estimateSpaceNeeded" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15640 15650]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15615 15975])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16214 16224])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16225 16238]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [16200 16324])
                    ("estimateSpaceNeeded" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16513 16523]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [16488 16553])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16831 16841])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [16842 16855]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [16817 17029])
                    ("estimateSpaceNeeded" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17203 17213]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [17178 17392])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17577 17587])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [17588 17601]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [17563 17694])
                    ("estimateSpaceNeeded" function
                       (:template 
                          ( ("Src" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17804 17814]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [17696 17917])
                    ("detail" type
                       (:members 
                          ( ("kConvMaxDecimalInShortestLow" variable
                               (:default-value "-6"
                                :type "int")
                                (reparse-symbol namespacesubparts) [18169 18207])
                            ("kConvMaxDecimalInShortestHigh" variable
                               (:default-value "21"
                                :type "int")
                                (reparse-symbol namespacesubparts) [18218 18257]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [18140 18259])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18468 18478])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [18481 18494])
                            ("mode" variable (:type ("double_conversion::DoubleToStringConverter::DtoaMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18497 18555])
                            ("numDigits" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [18558 18581]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [18451 19450])
                    ("toAppend" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19636 19646])
                            ("result" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [19647 19660]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [19622 19753])
                    ("estimateSpaceNeeded" function
                       (:template 
                          ( ("Src" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20034 20044]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [19916 21047])
                    ("HasLengthEstimator" type
                       (:template 
                          ( ("Src" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("std::false_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [21227 21294])
                    ("estimateSpaceNeeded" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [21804 21815]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [21779 21874])
                    ("detail" type
                       (:members 
                          ( ("estimateSpaceToReserve" function
                               (:arguments 
                                  ( ("sofar" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22004 22017])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Tgt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22018 22023]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [21976 22043])
                            ("estimateSpaceToReserve" function
                               (:arguments 
                                  ( ("sofar" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22107 22120])
                                    ("v" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22121 22132])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22133 22143])
                                    ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22146 22149]))                                  
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [22077 22225])
                            ("reserveInTarget" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22269 22279])
                                    ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22281 22284]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [22248 22356])
                            ("reserveInTargetDelim" function
                               (:arguments 
                                  ( ("d" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Delimiter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22422 22441])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22442 22452])
                                    ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22454 22457]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [22396 22712])
                            ("toAppendStrImpl" function
                               (:arguments 
                                  ( ("v" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22908 22919])
                                    ("result" variable (:type ("Tgt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22920 22931]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [22887 22958])
                            ("toAppendStrImpl" function
                               (:arguments 
                                  ( ("v" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23185 23196])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23197 23207])
                                    ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23210 23213]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [23164 23281])
                            ("toAppendDelimStrImpl" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Delimiter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23448 23477])
                                    ("v" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23478 23489])
                                    ("result" variable (:type ("Tgt" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23490 23501]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [23422 23528])
                            ("toAppendDelimStrImpl" function
                               (:arguments 
                                  ( ("delim" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Delimiter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23777 23800])
                                    ("v" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23801 23812])
                                    ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ts" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23813 23823])
                                    ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23826 23829]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [23751 24189]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [21876 24191])
                    ("toAppend" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [25154 25164])
                            ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25167 25170]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [25140 25217])
                    ("toAppendFit" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26163 26173])
                            ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26176 26179]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26146 26245])
                    ("toAppendFit" function
                       (:template 
                          ( ("Ts" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26284 26294]))                          )
                        (reparse-symbol namespacesubparts) [26247 26297])
                    ("toAppend" function
                       (:arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26433 26451]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26414 26454])
                    ("toAppendDelim" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Delimiter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26612 26641])
                            ("" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26642 26660]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26588 26663])
                    ("toAppendDelim" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Delimiter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26827 26856])
                            ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26857 26868])
                            ("tgt" variable
                               (:pointer 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [26869 26878]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [26803 26902])
                    ("toAppendDelim" function
                       (:arguments 
                          ( ("delim" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Delimiter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27273 27296])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27297 27307])
                            ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27310 27313]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [27254 27363])
                    ("toAppendDelimFit" function
                       (:arguments 
                          ( ("delim" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Delimiter" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27609 27632])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27633 27643])
                            ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27646 27649]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [27587 27730])
                    ("toAppendDelimFit" function
                       (:template 
                          ( ("De" type (:type "class") nil nil)
                            ("Ts" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("De" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27784 27794])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [27795 27805]))                          )
                        (reparse-symbol namespacesubparts) [27732 27808])
                    ("to" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [28148 28158])
                            ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28161 28164]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [28140 28230])
                    ("to" function
                       (:arguments 
                          ( ("value" variable (:type ("Src" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28819 28829]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [28811 28892])
                    ("toDelim" function
                       (:arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Delim" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [29148 29173])
                            ("" variable
                               (:reference 1
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [29174 29179])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29180 29186]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [29135 29225])
                    ("toDelim" function
                       (:arguments 
                          ( ("delim" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Delim" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [29588 29607])
                            ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Ts" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [29608 29618])
                            ("" variable (:type ("vs" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29621 29624]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [29575 29702])
                    ("detail" type
                       (:members 
                          ( ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30000 30009])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30095 30104])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30200 30209])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30306 30315])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30408 30417])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30517 30526])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30639 30648])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30756 30765])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30867 30876])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [30986 30995])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [31093 31102])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [31217 31226])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [31326 31335])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [31443 31452])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [31562 31571])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [31689 31698])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32054 32063])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32157 32166])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32268 32277])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32383 32392])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32488 32497])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32605 32614])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32706 32715])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32819 32828])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [32922 32931])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [33037 33046])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [33150 33159])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [33275 33284]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [29919 34168])
                    ("tryTo" function
                       (:arguments 
                          ( ("b" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [34480 34494])
                            ("e" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [34495 34509]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [34469 34552])
                    ("to" function
                       (:arguments 
                          ( ("b" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [34690 34704])
                            ("e" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [34705 34719]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [34682 34901])
                    ("parseTo" function
                       (:typemodifiers ("inline" "typename")
                        :arguments 
                          ( ("src" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35330 35346])
                            ("out" variable
                               (:reference 1
                                :type ("Tgt" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [35347 35356]))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [35205 35458])
                    ("detail" type
                       (:members 
                          ( ("checkConversion" function
                               (:arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Src" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38382 38399]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [38361 39183])
                            ("checkConversion" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Src" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39430 39441]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [39409 39460])
                            ("checkConversion" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Src" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39790 39801]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [39769 39820])
                            ("errorValue" function
                               (:template 
                                  ( ("Tgt" type (:type "class") nil nil)
                                    ("Src" type (:type "class") nil nil))                                  
                                :type ("std::string" type (:type "class") nil nil)
                                :arguments 
                                  ( ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Src" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40820 40837]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [40752 40976]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [35681 41231])
                    ("to" function
                       (:template 
                          ( ("Tgt" type (:type "class") nil nil)
                            ("Src" type (:type "class") nil nil))                          
                        :type ("std::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [41602 41619]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [41480 41809])
                    ("parseTo" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("in" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42934 42949])
                            ("out" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [42954 42971]))                          
                        :type ("Expected" type
                             (:template-specifier 
                                ( ("StringPiece" type nil nil nil)
                                  ("ConversionCode" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [42876 43087])
                    ("parseTo" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("in" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43163 43178])
                            ("out" variable
                               (:reference 1
                                :type ("fbstring" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [43183 43197]))                          
                        :type ("Expected" type
                             (:template-specifier 
                                ( ("StringPiece" type nil nil nil)
                                  ("ConversionCode" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [43105 43313])
                    ("detail" type
                       (:members 
                          ( ("ParseToResult" variable
                               (:default-value "decltype(parseTo(StringPiece{}, std::declval<Tgt&>()))"
                                :type "int")
                                (reparse-symbol namespacesubparts) [43364 43435])
                            ("CheckTrailingSpace" type
                               (:members 
                                  ( ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("sp" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43509 43524]))                                          
                                        :type ("Expected" type
                                             (:template-specifier 
                                                ( ("Unit" type nil nil nil)
                                                  ("ConversionCode" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [43467 43672]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [43437 43675])
                            ("ReturnUnit" type
                               (:template 
                                  ( ("Error" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [43786 43789]))                                          
                                        :type ("Expected" type
                                             (:template-specifier 
                                                ( ("Unit" type nil nil nil)
                                                  ("Error" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [43753 43819]))                                  )
                                (reparse-symbol namespacesubparts) [43677 43822])
                            ("parseToWrap" function
                               (:template 
                                  ( ("Tgt" type (:type "class") nil nil))                                  
                                :type ("std::enable_if::type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("sp" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44086 44101])
                                    ("out" variable
                                       (:reference 1
                                        :type ("Tgt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44102 44111]))                                  
                                :typemodifiers ("inline" "typename"))
                                (reparse-symbol namespacesubparts) [43927 44177])
                            ("parseToWrap" function
                               (:arguments 
                                  ( ("sp" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44320 44335])
                                    ("out" variable
                                       (:reference 1
                                        :type ("Tgt" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44336 44345]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [44303 44376]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [43315 44517])
                    ("tryTo" function
                       (:arguments 
                          ( ("src" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44832 44848]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [44821 45158])
                    ("to" function
                       (:arguments 
                          ( ("src" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45274 45290]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [45262 45792])
                    ("tryTo" function
                       (:template 
                          ( ("Tgt" type (:type "class") nil nil))                          
                        :type ("Expected" type
                             (:template-specifier 
                                ( ("Tgt" type nil nil nil)
                                  ("detail::ParseToError" type (:template-specifier 
                                    ( ("Tgt" type nil nil nil))                                    ) nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("src" variable
                               (:pointer 1
                                :type ("StringPiece" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46057 46074]))                          )
                        (reparse-symbol namespacesubparts) [45989 46213])
                    ("to" function
                       (:template 
                          ( ("Tgt" type (:type "class") nil nil))                          
                        :type ("Tgt" type (:type "class") nil nil)
                        :arguments 
                          ( ("src" variable
                               (:pointer 1
                                :type ("StringPiece" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46243 46260]))                          )
                        (reparse-symbol namespacesubparts) [46215 46558])
                    ("tryTo" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [46920 46937]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [46909 47039])
                    ("tryTo" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47209 47226]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47198 47356])
                    ("to" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47497 47514]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47489 47598])
                    ("to" function
                       (:arguments 
                          ( ("value" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Src" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [47733 47751]))                          
                        :type ("type" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [47725 47835]))                  
                :type "namespace")
                nil [1318 47838]))          
      :file "Conv.h"
      :pointmax 47858
      :fsize 47857
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((punctuation 47724 . 47725) (punctuation 47723 . 47724) (punctuation 47722 . 47723) (symbol 47719 . 47722) (punctuation 47717 . 47718) (symbol 47712 . 47717) (punctuation 47711 . 47712) (punctuation 47710 . 47711) (punctuation 47709 . 47710) (symbol 47706 . 47709) (punctuation 47704 . 47705) (symbol 47701 . 47704) (punctuation 47700 . 47701) (symbol 47693 . 47700) (punctuation 47692 . 47693) (punctuation 47691 . 47692) (symbol 47688 . 47691) (punctuation 47687 . 47688) (punctuation 47685 . 47686) (punctuation 47684 . 47685) (symbol 47678 . 47683) (punctuation 47677 . 47678) (punctuation 47676 . 47677) (punctuation 47675 . 47676) (symbol 47672 . 47675) (punctuation 47671 . 47672) (symbol 47664 . 47671) (punctuation 47663 . 47664) (punctuation 47662 . 47663) (symbol 47659 . 47662) (punctuation 47655 . 47656) (symbol 47646 . 47655) (punctuation 47645 . 47646) (punctuation 47644 . 47645) (symbol 47641 . 47644) (TYPENAME 47632 . 47640) (punctuation 47630 . 47631) (symbol 47627 . 47630) (CLASS 47621 . 47626) (punctuation 47619 . 47620) (symbol 47616 . 47619) (CLASS 47610 . 47615) (punctuation 47609 . 47610) (TEMPLATE 47600 . 47608) (punctuation 47488 . 47489) (punctuation 47487 . 47488) (punctuation 47486 . 47487) (symbol 47483 . 47486) (punctuation 47477 . 47478) (symbol 47472 . 47477) (punctuation 47471 . 47472) (punctuation 47470 . 47471) (punctuation 47469 . 47470) (symbol 47466 . 47469) (punctuation 47464 . 47465) (symbol 47461 . 47464) (punctuation 47460 . 47461) (symbol 47453 . 47460) (punctuation 47452 . 47453) (punctuation 47451 . 47452) (symbol 47448 . 47451) (punctuation 47447 . 47448) (punctuation 47445 . 47446) (punctuation 47444 . 47445) (symbol 47438 . 47443) (punctuation 47437 . 47438) (punctuation 47436 . 47437) (punctuation 47435 . 47436) (symbol 47432 . 47435) (punctuation 47431 . 47432) (symbol 47424 . 47431) (punctuation 47423 . 47424) (punctuation 47422 . 47423) (symbol 47419 . 47422) (punctuation 47413 . 47414) (symbol 47404 . 47413) (punctuation 47403 . 47404) (punctuation 47402 . 47403) (symbol 47399 . 47402) (TYPENAME 47390 . 47398) (punctuation 47388 . 47389) (symbol 47385 . 47388) (CLASS 47379 . 47384) (punctuation 47377 . 47378) (symbol 47374 . 47377) (CLASS 47368 . 47373) (punctuation 47367 . 47368) (TEMPLATE 47358 . 47366) (punctuation 47197 . 47198) (punctuation 47196 . 47197) (punctuation 47195 . 47196) (punctuation 47194 . 47195) (symbol 47180 . 47194) (punctuation 47178 . 47179) (symbol 47175 . 47178) (punctuation 47174 . 47175) (symbol 47166 . 47174) (punctuation 47160 . 47161) (symbol 47155 . 47160) (punctuation 47154 . 47155) (punctuation 47153 . 47154) (punctuation 47152 . 47153) (symbol 47149 . 47152) (punctuation 47147 . 47148) (symbol 47144 . 47147) (punctuation 47143 . 47144) (symbol 47136 . 47143) (punctuation 47135 . 47136) (punctuation 47134 . 47135) (symbol 47131 . 47134) (punctuation 47130 . 47131) (punctuation 47128 . 47129) (punctuation 47127 . 47128) (symbol 47121 . 47126) (punctuation 47120 . 47121) (punctuation 47119 . 47120) (punctuation 47118 . 47119) (symbol 47115 . 47118) (punctuation 47114 . 47115) (symbol 47107 . 47114) (punctuation 47106 . 47107) (punctuation 47105 . 47106) (symbol 47102 . 47105) (punctuation 47096 . 47097) (symbol 47087 . 47096) (punctuation 47086 . 47087) (punctuation 47085 . 47086) (symbol 47082 . 47085) (TYPENAME 47073 . 47081) (punctuation 47071 . 47072) (symbol 47068 . 47071) (CLASS 47062 . 47067) (punctuation 47060 . 47061) (symbol 47057 . 47060) (CLASS 47051 . 47056) (punctuation 47050 . 47051) (TEMPLATE 47041 . 47049) (punctuation 46908 . 46909) (punctuation 46907 . 46908) (punctuation 46906 . 46907) (punctuation 46905 . 46906) (symbol 46891 . 46905) (punctuation 46889 . 46890) (symbol 46886 . 46889) (punctuation 46885 . 46886) (symbol 46877 . 46885) (punctuation 46871 . 46872) (symbol 46866 . 46871) (punctuation 46865 . 46866) (punctuation 46864 . 46865) (punctuation 46863 . 46864) (symbol 46860 . 46863) (punctuation 46858 . 46859) (symbol 46855 . 46858) (punctuation 46854 . 46855) (symbol 46847 . 46854) (punctuation 46846 . 46847) (punctuation 46845 . 46846) (symbol 46842 . 46845) (punctuation 46841 . 46842) (punctuation 46839 . 46840) (punctuation 46838 . 46839) (symbol 46832 . 46837) (punctuation 46831 . 46832) (punctuation 46830 . 46831) (punctuation 46829 . 46830) (symbol 46826 . 46829) (punctuation 46825 . 46826) (symbol 46818 . 46825) (punctuation 46817 . 46818) (punctuation 46816 . 46817) (symbol 46813 . 46816) (punctuation 46807 . 46808) (symbol 46798 . 46807) (punctuation 46797 . 46798) (punctuation 46796 . 46797) (symbol 46793 . 46796) (TYPENAME 46784 . 46792) (punctuation 46782 . 46783) (symbol 46779 . 46782) (CLASS 46773 . 46778) (punctuation 46771 . 46772) (symbol 46768 . 46771) (CLASS 46762 . 46767) (punctuation 46761 . 46762) (TEMPLATE 46752 . 46760) (punctuation 45261 . 45262) (punctuation 45260 . 45261) (punctuation 45259 . 45260) (symbol 45256 . 45259) (punctuation 45254 . 45255) (symbol 45249 . 45254) (punctuation 45248 . 45249) (punctuation 45247 . 45248) (punctuation 45246 . 45247) (symbol 45243 . 45246) (punctuation 45241 . 45242) (symbol 45230 . 45241) (punctuation 45229 . 45230) (symbol 45222 . 45229) (punctuation 45221 . 45222) (punctuation 45220 . 45221) (symbol 45217 . 45220) (punctuation 45216 . 45217) (punctuation 45215 . 45216) (symbol 45206 . 45215) (punctuation 45205 . 45206) (punctuation 45204 . 45205) (symbol 45201 . 45204) (TYPENAME 45192 . 45200) (INLINE 45181 . 45187) (punctuation 45179 . 45180) (symbol 45176 . 45179) (CLASS 45170 . 45175) (punctuation 45169 . 45170) (TEMPLATE 45160 . 45168) (punctuation 44820 . 44821) (punctuation 44819 . 44820) (punctuation 44818 . 44819) (punctuation 44817 . 44818) (punctuation 44816 . 44817) (symbol 44813 . 44816) (punctuation 44812 . 44813) (symbol 44800 . 44812) (punctuation 44799 . 44800) (punctuation 44798 . 44799) (symbol 44792 . 44798) (punctuation 44790 . 44791) (symbol 44787 . 44790) (punctuation 44786 . 44787) (symbol 44778 . 44786) (punctuation 44772 . 44773) (symbol 44767 . 44772) (punctuation 44766 . 44767) (punctuation 44765 . 44766) (punctuation 44764 . 44765) (symbol 44761 . 44764) (punctuation 44759 . 44760) (symbol 44748 . 44759) (punctuation 44747 . 44748) (symbol 44740 . 44747) (punctuation 44739 . 44740) (punctuation 44738 . 44739) (symbol 44735 . 44738) (punctuation 44734 . 44735) (punctuation 44728 . 44729) (symbol 44719 . 44728) (punctuation 44718 . 44719) (punctuation 44717 . 44718) (symbol 44714 . 44717) (TYPENAME 44705 . 44713) (INLINE 44698 . 44704) (punctuation 44696 . 44697) (symbol 44693 . 44696) (CLASS 44687 . 44692) (punctuation 44686 . 44687) (TEMPLATE 44677 . 44685) (punctuation 44513 . 44514) (punctuation 44512 . 44513) (semantic-list 44449 . 44512) (symbol 44441 . 44449) (semantic-list 44474 . 44511) (punctuation 44440 . 44441) (symbol 44423 . 44440) (punctuation 44421 . 44422) (symbol 44408 . 44420) (USING 44402 . 44407) (punctuation 44400 . 44401) (symbol 44397 . 44400) (TYPENAME 44388 . 44396) (punctuation 44387 . 44388) (TEMPLATE 44378 . 44386) (punctuation 44302 . 44303) (punctuation 44301 . 44302) (punctuation 44300 . 44301) (punctuation 44299 . 44300) (symbol 44296 . 44299) (punctuation 44295 . 44296) (symbol 44282 . 44295) (punctuation 44276 . 44277) (symbol 44271 . 44276) (punctuation 44270 . 44271) (punctuation 44269 . 44270) (punctuation 44268 . 44269) (punctuation 44267 . 44268) (symbol 44264 . 44267) (punctuation 44263 . 44264) (symbol 44250 . 44263) (punctuation 44249 . 44250) (symbol 44242 . 44249) (punctuation 44241 . 44242) (punctuation 44240 . 44241) (symbol 44237 . 44240) (punctuation 44236 . 44237) (punctuation 44230 . 44231) (symbol 44221 . 44230) (punctuation 44220 . 44221) (punctuation 44219 . 44220) (symbol 44216 . 44219) (TYPENAME 44207 . 44215) (INLINE 44200 . 44206) (punctuation 44198 . 44199) (symbol 44195 . 44198) (CLASS 44189 . 44194) (punctuation 44188 . 44189) (TEMPLATE 44179 . 44187) (punctuation 43788 . 43789) (symbol 43743 . 43752) (punctuation 43739 . 43740) (symbol 43738 . 43739) (CLASS 43732 . 43737) (punctuation 43731 . 43732) (TEMPLATE 43722 . 43730) (USING 43358 . 43363) (punctuation 43356 . 43357) (symbol 43353 . 43356) (TYPENAME 43344 . 43352) (punctuation 43343 . 43344) (TEMPLATE 43334 . 43342) (symbol 43089 . 43104) (symbol 42860 . 42875) (semantic-list 42801 . 42858) (symbol 42792 . 42800) (semantic-list 42748 . 42791) (symbol 42741 . 42748) (punctuation 42739 . 42740) (symbol 42725 . 42739) (punctuation 42723 . 42724) (symbol 42712 . 42723) (punctuation 42711 . 42712) (symbol 42703 . 42711) (INLINE 42696 . 42702) (symbol 42680 . 42695) (semantic-list 42508 . 42678) (symbol 42499 . 42507) (semantic-list 42474 . 42498) (symbol 42467 . 42474) (symbol 42462 . 42466) (punctuation 42461 . 42462) (punctuation 42460 . 42461) (punctuation 42459 . 42460) (punctuation 42458 . 42459) (symbol 42444 . 42458) (punctuation 42442 . 42443) (symbol 42431 . 42442) (punctuation 42430 . 42431) (symbol 42422 . 42430) (punctuation 42416 . 42417) (symbol 42411 . 42416) (punctuation 42410 . 42411) (punctuation 42409 . 42410) (punctuation 42408 . 42409) (symbol 42407 . 42408) (punctuation 42406 . 42407) (symbol 42399 . 42406) (punctuation 42398 . 42399) (punctuation 42397 . 42398) (symbol 42394 . 42397) (punctuation 42388 . 42389) (symbol 42379 . 42388) (punctuation 42378 . 42379) (punctuation 42377 . 42378) (symbol 42374 . 42377) (TYPENAME 42365 . 42373) (symbol 42349 . 42364) (punctuation 42347 . 42348) (symbol 42346 . 42347) (CLASS 42340 . 42345) (punctuation 42339 . 42340) (TEMPLATE 42330 . 42338) (semantic-list 41435 . 41478) (symbol 41426 . 41434) (semantic-list 41407 . 41425) (symbol 41402 . 41407) (symbol 41397 . 41401) (punctuation 41396 . 41397) (punctuation 41395 . 41396) (punctuation 41394 . 41395) (punctuation 41393 . 41394) (symbol 41379 . 41393) (punctuation 41377 . 41378) (symbol 41374 . 41377) (punctuation 41373 . 41374) (symbol 41365 . 41373) (punctuation 41359 . 41360) (symbol 41354 . 41359) (punctuation 41353 . 41354) (punctuation 41352 . 41353) (punctuation 41351 . 41352) (symbol 41348 . 41351) (punctuation 41346 . 41347) (symbol 41343 . 41346) (punctuation 41342 . 41343) (symbol 41328 . 41342) (punctuation 41327 . 41328) (punctuation 41326 . 41327) (symbol 41320 . 41326) (punctuation 41314 . 41315) (symbol 41305 . 41314) (punctuation 41304 . 41305) (punctuation 41303 . 41304) (symbol 41300 . 41303) (TYPENAME 41291 . 41299) (punctuation 41289 . 41290) (symbol 41286 . 41289) (TYPENAME 41277 . 41285) (punctuation 41275 . 41276) (symbol 41272 . 41275) (TYPENAME 41263 . 41271) (punctuation 41262 . 41263) (TEMPLATE 41253 . 41261) (punctuation 41227 . 41228) (punctuation 41226 . 41227) (symbol 41221 . 41226) (punctuation 41220 . 41221) (punctuation 41219 . 41220) (punctuation 41218 . 41219) (symbol 41215 . 41218) (punctuation 41214 . 41215) (symbol 41201 . 41214) (punctuation 41200 . 41201) (punctuation 41199 . 41200) (symbol 41196 . 41199) (punctuation 41186 . 41187) (punctuation 41185 . 41186) (symbol 41179 . 41184) (punctuation 41178 . 41179) (punctuation 41177 . 41178) (punctuation 41176 . 41177) (symbol 41173 . 41176) (punctuation 41172 . 41173) (symbol 41159 . 41172) (punctuation 41158 . 41159) (punctuation 41157 . 41158) (symbol 41154 . 41157) (punctuation 41144 . 41145) (punctuation 41143 . 41144) (symbol 41137 . 41142) (punctuation 41136 . 41137) (punctuation 41135 . 41136) (punctuation 41134 . 41135) (BOOL 41130 . 41134) (punctuation 41128 . 41129) (symbol 41125 . 41128) (punctuation 41124 . 41125) (symbol 41117 . 41124) (punctuation 41116 . 41117) (punctuation 41115 . 41116) (symbol 41112 . 41115) (punctuation 41111 . 41112) (punctuation 41109 . 41110) (punctuation 41108 . 41109) (symbol 41102 . 41107) (punctuation 41101 . 41102) (punctuation 41100 . 41101) (punctuation 41099 . 41100) (symbol 41096 . 41099) (punctuation 41094 . 41095) (symbol 41091 . 41094) (punctuation 41090 . 41091) (symbol 41083 . 41090) (punctuation 41082 . 41083) (punctuation 41081 . 41082) (symbol 41078 . 41081) (punctuation 41077 . 41078) (punctuation 41071 . 41072) (BOOL 41067 . 41071) (punctuation 41061 . 41062) (symbol 41044 . 41061) (punctuation 41043 . 41044) (punctuation 41042 . 41043) (symbol 41039 . 41042) (punctuation 41037 . 41038) (symbol 41022 . 41036) (USING 41016 . 41021) (punctuation 41014 . 41015) (symbol 41011 . 41014) (TYPENAME 41002 . 41010) (punctuation 41000 . 41001) (symbol 40997 . 41000) (TYPENAME 40988 . 40996) (punctuation 40987 . 40988) (TEMPLATE 40978 . 40986) (semantic-list 40421 . 40750) (symbol 40412 . 40420) (semantic-list 40393 . 40411) (symbol 40384 . 40393) (symbol 40379 . 40383) (punctuation 40378 . 40379) (punctuation 40377 . 40378) (punctuation 40376 . 40377) (punctuation 40375 . 40376) (symbol 40361 . 40375) (punctuation 40359 . 40360) (symbol 40356 . 40359) (punctuation 40355 . 40356) (symbol 40347 . 40355) (punctuation 40341 . 40342) (semantic-list 40273 . 40341) (punctuation 40263 . 40264) (punctuation 40262 . 40263) (semantic-list 40193 . 40261) (punctuation 40187 . 40188) (symbol 40178 . 40187) (punctuation 40177 . 40178) (punctuation 40176 . 40177) (symbol 40173 . 40176) (TYPENAME 40164 . 40172) (punctuation 40162 . 40163) (symbol 40159 . 40162) (TYPENAME 40150 . 40158) (punctuation 40148 . 40149) (symbol 40145 . 40148) (TYPENAME 40136 . 40144) (punctuation 40135 . 40136) (TEMPLATE 40126 . 40134) (punctuation 39768 . 39769) (punctuation 39767 . 39768) (punctuation 39766 . 39767) (BOOL 39762 . 39766) (punctuation 39756 . 39757) (symbol 39751 . 39756) (punctuation 39750 . 39751) (punctuation 39749 . 39750) (punctuation 39748 . 39749) (BOOL 39744 . 39748) (punctuation 39742 . 39743) (symbol 39739 . 39742) (punctuation 39738 . 39739) (symbol 39731 . 39738) (punctuation 39730 . 39731) (punctuation 39729 . 39730) (symbol 39726 . 39729) (punctuation 39724 . 39725) (punctuation 39723 . 39724) (symbol 39717 . 39722) (punctuation 39716 . 39717) (punctuation 39715 . 39716) (punctuation 39714 . 39715) (symbol 39711 . 39714) (punctuation 39710 . 39711) (symbol 39693 . 39710) (punctuation 39692 . 39693) (punctuation 39691 . 39692) (symbol 39688 . 39691) (punctuation 39682 . 39683) (symbol 39673 . 39682) (punctuation 39672 . 39673) (punctuation 39671 . 39672) (symbol 39668 . 39671) (TYPENAME 39659 . 39667) (symbol 39649 . 39658) (punctuation 39647 . 39648) (symbol 39644 . 39647) (TYPENAME 39635 . 39643) (punctuation 39633 . 39634) (symbol 39630 . 39633) (TYPENAME 39621 . 39629) (punctuation 39620 . 39621) (TEMPLATE 39611 . 39619) (punctuation 39408 . 39409) (punctuation 39407 . 39408) (punctuation 39406 . 39407) (BOOL 39402 . 39406) (punctuation 39396 . 39397) (symbol 39391 . 39396) (punctuation 39390 . 39391) (punctuation 39389 . 39390) (punctuation 39388 . 39389) (symbol 39385 . 39388) (punctuation 39384 . 39385) (symbol 39367 . 39384) (punctuation 39366 . 39367) (punctuation 39365 . 39366) (symbol 39362 . 39365) (punctuation 39360 . 39361) (punctuation 39359 . 39360) (symbol 39353 . 39358) (punctuation 39352 . 39353) (punctuation 39351 . 39352) (punctuation 39350 . 39351) (symbol 39347 . 39350) (punctuation 39346 . 39347) (symbol 39335 . 39346) (punctuation 39334 . 39335) (punctuation 39333 . 39334) (symbol 39330 . 39333) (punctuation 39324 . 39325) (symbol 39315 . 39324) (punctuation 39314 . 39315) (punctuation 39313 . 39314) (symbol 39310 . 39313) (TYPENAME 39301 . 39309) (symbol 39291 . 39300) (punctuation 39289 . 39290) (symbol 39286 . 39289) (TYPENAME 39277 . 39285) (punctuation 39275 . 39276) (symbol 39272 . 39275) (TYPENAME 39263 . 39271) (punctuation 39262 . 39263) (TEMPLATE 39253 . 39261) (punctuation 38360 . 38361) (punctuation 38359 . 38360) (punctuation 38358 . 38359) (BOOL 38354 . 38358) (punctuation 38348 . 38349) (symbol 38343 . 38348) (punctuation 38342 . 38343) (punctuation 38341 . 38342) (punctuation 38340 . 38341) (BOOL 38336 . 38340) (punctuation 38334 . 38335) (symbol 38331 . 38334) (punctuation 38330 . 38331) (symbol 38323 . 38330) (punctuation 38322 . 38323) (punctuation 38321 . 38322) (symbol 38318 . 38321) (punctuation 38317 . 38318) (punctuation 38307 . 38308) (punctuation 38306 . 38307) (symbol 38300 . 38305) (punctuation 38299 . 38300) (punctuation 38298 . 38299) (punctuation 38297 . 38298) (symbol 38294 . 38297) (punctuation 38293 . 38294) (symbol 38282 . 38293) (punctuation 38281 . 38282) (punctuation 38280 . 38281) (symbol 38277 . 38280) (punctuation 38275 . 38276) (punctuation 38274 . 38275) (symbol 38268 . 38273) (punctuation 38267 . 38268) (punctuation 38266 . 38267) (punctuation 38265 . 38266) (symbol 38262 . 38265) (punctuation 38261 . 38262) (symbol 38244 . 38261) (punctuation 38243 . 38244) (punctuation 38242 . 38243) (symbol 38239 . 38242) (punctuation 38233 . 38234) (symbol 38224 . 38233) (punctuation 38223 . 38224) (punctuation 38222 . 38223) (symbol 38219 . 38222) (TYPENAME 38210 . 38218) (INLINE 38203 . 38209) (punctuation 38201 . 38202) (symbol 38198 . 38201) (TYPENAME 38189 . 38197) (punctuation 38187 . 38188) (symbol 38184 . 38187) (TYPENAME 38175 . 38183) (punctuation 38174 . 38175) (TEMPLATE 38165 . 38173) (semantic-list 37640 . 38033) (symbol 37631 . 37639) (semantic-list 37612 . 37630) (symbol 37603 . 37612) (symbol 37598 . 37602) (punctuation 37597 . 37598) (punctuation 37596 . 37597) (punctuation 37595 . 37596) (punctuation 37594 . 37595) (symbol 37580 . 37594) (punctuation 37578 . 37579) (symbol 37575 . 37578) (punctuation 37574 . 37575) (symbol 37566 . 37574) (punctuation 37560 . 37561) (symbol 37555 . 37560) (punctuation 37554 . 37555) (punctuation 37553 . 37554) (punctuation 37552 . 37553) (symbol 37549 . 37552) (punctuation 37547 . 37548) (symbol 37544 . 37547) (punctuation 37543 . 37544) (symbol 37536 . 37543) (punctuation 37535 . 37536) (punctuation 37534 . 37535) (symbol 37531 . 37534) (punctuation 37530 . 37531) (punctuation 37520 . 37521) (punctuation 37519 . 37520) (symbol 37513 . 37518) (punctuation 37512 . 37513) (punctuation 37511 . 37512) (punctuation 37510 . 37511) (symbol 37507 . 37510) (punctuation 37506 . 37507) (symbol 37489 . 37506) (punctuation 37488 . 37489) (punctuation 37487 . 37488) (symbol 37484 . 37487) (punctuation 37482 . 37483) (punctuation 37481 . 37482) (symbol 37475 . 37480) (punctuation 37474 . 37475) (punctuation 37473 . 37474) (punctuation 37472 . 37473) (symbol 37469 . 37472) (punctuation 37468 . 37469) (symbol 37451 . 37468) (punctuation 37450 . 37451) (punctuation 37449 . 37450) (symbol 37446 . 37449) (punctuation 37440 . 37441) (symbol 37431 . 37440) (punctuation 37430 . 37431) (punctuation 37429 . 37430) (symbol 37426 . 37429) (TYPENAME 37417 . 37425) (punctuation 37415 . 37416) (symbol 37412 . 37415) (CLASS 37406 . 37411) (punctuation 37404 . 37405) (symbol 37401 . 37404) (CLASS 37395 . 37400) (punctuation 37394 . 37395) (TEMPLATE 37385 . 37393) (semantic-list 36591 . 37220) (symbol 36582 . 36590) (semantic-list 36563 . 36581) (symbol 36554 . 36563) (symbol 36549 . 36553) (punctuation 36548 . 36549) (punctuation 36547 . 36548) (punctuation 36546 . 36547) (punctuation 36545 . 36546) (symbol 36531 . 36545) (punctuation 36529 . 36530) (symbol 36526 . 36529) (punctuation 36525 . 36526) (symbol 36517 . 36525) (punctuation 36511 . 36512) (symbol 36506 . 36511) (punctuation 36505 . 36506) (punctuation 36504 . 36505) (punctuation 36503 . 36504) (symbol 36500 . 36503) (punctuation 36499 . 36500) (symbol 36488 . 36499) (punctuation 36487 . 36488) (punctuation 36486 . 36487) (symbol 36483 . 36486) (punctuation 36473 . 36474) (punctuation 36472 . 36473) (symbol 36466 . 36471) (punctuation 36465 . 36466) (punctuation 36464 . 36465) (punctuation 36463 . 36464) (BOOL 36459 . 36463) (punctuation 36457 . 36458) (symbol 36454 . 36457) (punctuation 36453 . 36454) (symbol 36446 . 36453) (punctuation 36445 . 36446) (punctuation 36444 . 36445) (symbol 36441 . 36444) (punctuation 36440 . 36441) (punctuation 36430 . 36431) (punctuation 36429 . 36430) (symbol 36423 . 36428) (punctuation 36422 . 36423) (punctuation 36421 . 36422) (punctuation 36420 . 36421) (symbol 36417 . 36420) (punctuation 36415 . 36416) (symbol 36412 . 36415) (punctuation 36411 . 36412) (symbol 36404 . 36411) (punctuation 36403 . 36404) (punctuation 36402 . 36403) (symbol 36399 . 36402) (punctuation 36398 . 36399) (punctuation 36396 . 36397) (punctuation 36395 . 36396) (symbol 36389 . 36394) (punctuation 36388 . 36389) (punctuation 36387 . 36388) (punctuation 36386 . 36387) (symbol 36383 . 36386) (punctuation 36382 . 36383) (symbol 36371 . 36382) (punctuation 36370 . 36371) (punctuation 36369 . 36370) (symbol 36366 . 36369) (punctuation 36360 . 36361) (symbol 36351 . 36360) (punctuation 36350 . 36351) (punctuation 36349 . 36350) (symbol 36346 . 36349) (TYPENAME 36337 . 36345) (punctuation 36335 . 36336) (symbol 36332 . 36335) (CLASS 36326 . 36331) (punctuation 36324 . 36325) (symbol 36321 . 36324) (CLASS 36315 . 36320) (punctuation 36314 . 36315) (TEMPLATE 36305 . 36313) (semantic-list 36099 . 36144) (symbol 36090 . 36098) (semantic-list 36070 . 36089) (symbol 36061 . 36070) (symbol 36056 . 36060) (punctuation 36055 . 36056) (punctuation 36054 . 36055) (punctuation 36053 . 36054) (punctuation 36052 . 36053) (symbol 36038 . 36052) (punctuation 36036 . 36037) (symbol 36033 . 36036) (punctuation 36032 . 36033) (symbol 36024 . 36032) (punctuation 36018 . 36019) (semantic-list 35950 . 36018) (punctuation 35940 . 35941) (punctuation 35939 . 35940) (symbol 35933 . 35938) (punctuation 35932 . 35933) (punctuation 35931 . 35932) (punctuation 35930 . 35931) (BOOL 35926 . 35930) (punctuation 35924 . 35925) (symbol 35921 . 35924) (punctuation 35920 . 35921) (symbol 35913 . 35920) (punctuation 35912 . 35913) (punctuation 35911 . 35912) (symbol 35908 . 35911) (punctuation 35907 . 35908) (punctuation 35901 . 35902) (symbol 35892 . 35901) (punctuation 35891 . 35892) (punctuation 35890 . 35891) (symbol 35887 . 35890) (TYPENAME 35878 . 35886) (punctuation 35876 . 35877) (symbol 35873 . 35876) (CLASS 35867 . 35872) (punctuation 35866 . 35867) (TEMPLATE 35857 . 35865) (symbol 35189 . 35204) (punctuation 35187 . 35188) (symbol 35184 . 35187) (TYPENAME 35175 . 35183) (punctuation 35174 . 35175) (TEMPLATE 35165 . 35173) (punctuation 34681 . 34682) (punctuation 34680 . 34681) (punctuation 34679 . 34680) (symbol 34676 . 34679) (punctuation 34670 . 34671) (symbol 34665 . 34670) (punctuation 34664 . 34665) (punctuation 34663 . 34664) (punctuation 34662 . 34663) (BOOL 34658 . 34662) (punctuation 34656 . 34657) (symbol 34653 . 34656) (punctuation 34652 . 34653) (symbol 34645 . 34652) (punctuation 34644 . 34645) (punctuation 34643 . 34644) (symbol 34640 . 34643) (punctuation 34639 . 34640) (punctuation 34637 . 34638) (punctuation 34636 . 34637) (symbol 34630 . 34635) (punctuation 34629 . 34630) (punctuation 34628 . 34629) (punctuation 34627 . 34628) (symbol 34624 . 34627) (punctuation 34623 . 34624) (symbol 34612 . 34623) (punctuation 34611 . 34612) (punctuation 34610 . 34611) (symbol 34607 . 34610) (punctuation 34601 . 34602) (symbol 34592 . 34601) (punctuation 34591 . 34592) (punctuation 34590 . 34591) (symbol 34587 . 34590) (TYPENAME 34578 . 34586) (punctuation 34576 . 34577) (symbol 34573 . 34576) (TYPENAME 34564 . 34572) (punctuation 34563 . 34564) (TEMPLATE 34554 . 34562) (punctuation 34468 . 34469) (punctuation 34467 . 34468) (punctuation 34466 . 34467) (punctuation 34465 . 34466) (symbol 34451 . 34465) (punctuation 34449 . 34450) (symbol 34446 . 34449) (punctuation 34445 . 34446) (symbol 34437 . 34445) (punctuation 34431 . 34432) (symbol 34426 . 34431) (punctuation 34425 . 34426) (punctuation 34424 . 34425) (punctuation 34423 . 34424) (BOOL 34419 . 34423) (punctuation 34417 . 34418) (symbol 34414 . 34417) (punctuation 34413 . 34414) (symbol 34406 . 34413) (punctuation 34405 . 34406) (punctuation 34404 . 34405) (symbol 34401 . 34404) (punctuation 34400 . 34401) (punctuation 34398 . 34399) (punctuation 34397 . 34398) (symbol 34391 . 34396) (punctuation 34390 . 34391) (punctuation 34389 . 34390) (punctuation 34388 . 34389) (symbol 34385 . 34388) (punctuation 34384 . 34385) (symbol 34373 . 34384) (punctuation 34372 . 34373) (punctuation 34371 . 34372) (symbol 34368 . 34371) (punctuation 34362 . 34363) (symbol 34353 . 34362) (punctuation 34352 . 34353) (punctuation 34351 . 34352) (symbol 34348 . 34351) (TYPENAME 34339 . 34347) (punctuation 34337 . 34338) (symbol 34334 . 34337) (TYPENAME 34325 . 34333) (punctuation 34324 . 34325) (TEMPLATE 34315 . 34323) (semantic-list 34128 . 34165) (symbol 34119 . 34127) (semantic-list 34100 . 34118) (symbol 34091 . 34100) (symbol 34086 . 34090) (punctuation 34085 . 34086) (punctuation 34084 . 34085) (punctuation 34083 . 34084) (punctuation 34082 . 34083) (symbol 34068 . 34082) (punctuation 34066 . 34067) (symbol 34065 . 34066) (punctuation 34064 . 34065) (symbol 34056 . 34064) (punctuation 34050 . 34051) (symbol 34045 . 34050) (punctuation 34044 . 34045) (punctuation 34043 . 34044) (punctuation 34042 . 34043) (BOOL 34038 . 34042) (punctuation 34036 . 34037) (symbol 34035 . 34036) (punctuation 34034 . 34035) (symbol 34027 . 34034) (punctuation 34026 . 34027) (punctuation 34025 . 34026) (symbol 34022 . 34025) (punctuation 34021 . 34022) (punctuation 34019 . 34020) (punctuation 34018 . 34019) (symbol 34012 . 34017) (punctuation 34011 . 34012) (punctuation 34010 . 34011) (punctuation 34009 . 34010) (symbol 34008 . 34009) (punctuation 34007 . 34008) (symbol 33996 . 34007) (punctuation 33995 . 33996) (punctuation 33994 . 33995) (symbol 33991 . 33994) (punctuation 33985 . 33986) (symbol 33976 . 33985) (punctuation 33975 . 33976) (punctuation 33974 . 33975) (symbol 33971 . 33974) (TYPENAME 33962 . 33970) (punctuation 33960 . 33961) (symbol 33959 . 33960) (TYPENAME 33950 . 33958) (punctuation 33949 . 33950) (TEMPLATE 33940 . 33948) (semantic-list 33901 . 33938) (symbol 33892 . 33900) (semantic-list 33873 . 33891) (symbol 33864 . 33873) (symbol 33859 . 33863) (punctuation 33858 . 33859) (punctuation 33857 . 33858) (punctuation 33856 . 33857) (punctuation 33855 . 33856) (symbol 33841 . 33855) (punctuation 33839 . 33840) (symbol 33838 . 33839) (punctuation 33837 . 33838) (symbol 33829 . 33837) (punctuation 33823 . 33824) (symbol 33818 . 33823) (punctuation 33817 . 33818) (punctuation 33816 . 33817) (punctuation 33815 . 33816) (symbol 33814 . 33815) (punctuation 33813 . 33814) (symbol 33796 . 33813) (punctuation 33795 . 33796) (punctuation 33794 . 33795) (symbol 33791 . 33794) (punctuation 33785 . 33786) (symbol 33776 . 33785) (punctuation 33775 . 33776) (punctuation 33774 . 33775) (symbol 33771 . 33774) (TYPENAME 33762 . 33770) (punctuation 33760 . 33761) (symbol 33759 . 33760) (TYPENAME 33750 . 33758) (punctuation 33749 . 33750) (TEMPLATE 33740 . 33748) (semantic-list 33708 . 33738) (symbol 33699 . 33707) (semantic-list 33680 . 33698) (symbol 33671 . 33680) (symbol 33662 . 33666) (punctuation 33661 . 33662) (punctuation 33660 . 33661) (punctuation 33659 . 33660) (punctuation 33658 . 33659) (symbol 33644 . 33658) (punctuation 33642 . 33643) (symbol 33641 . 33642) (punctuation 33640 . 33641) (symbol 33632 . 33640) (punctuation 33630 . 33631) (symbol 33625 . 33630) (punctuation 33624 . 33625) (punctuation 33623 . 33624) (punctuation 33622 . 33623) (BOOL 33618 . 33622) (punctuation 33616 . 33617) (symbol 33615 . 33616) (punctuation 33614 . 33615) (symbol 33607 . 33614) (punctuation 33606 . 33607) (punctuation 33605 . 33606) (symbol 33602 . 33605) (punctuation 33601 . 33602) (symbol 33592 . 33601) (punctuation 33586 . 33587) (punctuation 33585 . 33586) (symbol 33582 . 33585) (TYPENAME 33573 . 33581) (punctuation 33571 . 33572) (symbol 33570 . 33571) (TYPENAME 33561 . 33569) (punctuation 33560 . 33561) (TEMPLATE 33551 . 33559) (semantic-list 33256 . 33274) (punctuation 33255 . 33256) (LONG 33251 . 33255) (LONG 33246 . 33250) (UNSIGNED 33237 . 33245) (punctuation 33236 . 33237) (symbol 33221 . 33236) (punctuation 33219 . 33220) (symbol 33205 . 33219) (punctuation 33203 . 33204) (LONG 33199 . 33203) (LONG 33194 . 33198) (UNSIGNED 33185 . 33193) (punctuation 33184 . 33185) (symbol 33176 . 33184) (TEMPLATE 33167 . 33175) (EXTERN 33160 . 33166) (semantic-list 33126 . 33149) (punctuation 33125 . 33126) (LONG 33121 . 33125) (LONG 33116 . 33120) (punctuation 33115 . 33116) (symbol 33100 . 33115) (punctuation 33098 . 33099) (symbol 33084 . 33098) (punctuation 33082 . 33083) (LONG 33078 . 33082) (LONG 33073 . 33077) (punctuation 33072 . 33073) (symbol 33064 . 33072) (TEMPLATE 33055 . 33063) (EXTERN 33048 . 33054) (semantic-list 33018 . 33036) (punctuation 33017 . 33018) (LONG 33013 . 33017) (UNSIGNED 33004 . 33012) (punctuation 33003 . 33004) (symbol 32988 . 33003) (punctuation 32986 . 32987) (symbol 32972 . 32986) (punctuation 32970 . 32971) (LONG 32966 . 32970) (UNSIGNED 32957 . 32965) (punctuation 32956 . 32957) (symbol 32948 . 32956) (TEMPLATE 32939 . 32947) (EXTERN 32932 . 32938) (semantic-list 32898 . 32921) (punctuation 32897 . 32898) (LONG 32893 . 32897) (punctuation 32892 . 32893) (symbol 32877 . 32892) (punctuation 32875 . 32876) (symbol 32861 . 32875) (punctuation 32859 . 32860) (LONG 32855 . 32859) (punctuation 32854 . 32855) (symbol 32846 . 32854) (TEMPLATE 32837 . 32845) (EXTERN 32830 . 32836) (semantic-list 32800 . 32818) (punctuation 32799 . 32800) (INT 32796 . 32799) (UNSIGNED 32787 . 32795) (punctuation 32786 . 32787) (symbol 32771 . 32786) (punctuation 32769 . 32770) (symbol 32755 . 32769) (punctuation 32753 . 32754) (INT 32750 . 32753) (UNSIGNED 32741 . 32749) (punctuation 32740 . 32741) (symbol 32732 . 32740) (TEMPLATE 32723 . 32731) (EXTERN 32716 . 32722) (semantic-list 32682 . 32705) (punctuation 32681 . 32682) (INT 32678 . 32681) (punctuation 32677 . 32678) (symbol 32662 . 32677) (punctuation 32660 . 32661) (symbol 32646 . 32660) (punctuation 32644 . 32645) (INT 32641 . 32644) (punctuation 32640 . 32641) (symbol 32632 . 32640) (TEMPLATE 32623 . 32631) (EXTERN 32616 . 32622) (semantic-list 32586 . 32604) (punctuation 32585 . 32586) (SHORT 32580 . 32585) (UNSIGNED 32571 . 32579) (punctuation 32570 . 32571) (symbol 32555 . 32570) (punctuation 32553 . 32554) (symbol 32539 . 32553) (punctuation 32537 . 32538) (SHORT 32532 . 32537) (UNSIGNED 32523 . 32531) (punctuation 32522 . 32523) (symbol 32514 . 32522) (TEMPLATE 32505 . 32513) (EXTERN 32498 . 32504) (semantic-list 32464 . 32487) (punctuation 32463 . 32464) (SHORT 32458 . 32463) (punctuation 32457 . 32458) (symbol 32442 . 32457) (punctuation 32440 . 32441) (symbol 32426 . 32440) (punctuation 32424 . 32425) (SHORT 32419 . 32424) (punctuation 32418 . 32419) (symbol 32410 . 32418) (TEMPLATE 32401 . 32409) (EXTERN 32394 . 32400) (semantic-list 32364 . 32382) (punctuation 32363 . 32364) (CHAR 32359 . 32363) (UNSIGNED 32350 . 32358) (punctuation 32349 . 32350) (symbol 32334 . 32349) (punctuation 32332 . 32333) (symbol 32318 . 32332) (punctuation 32316 . 32317) (CHAR 32312 . 32316) (UNSIGNED 32303 . 32311) (punctuation 32302 . 32303) (symbol 32294 . 32302) (TEMPLATE 32285 . 32293) (EXTERN 32278 . 32284) (semantic-list 32249 . 32267) (punctuation 32248 . 32249) (CHAR 32244 . 32248) (SIGNED 32237 . 32243) (punctuation 32236 . 32237) (symbol 32221 . 32236) (punctuation 32219 . 32220) (symbol 32205 . 32219) (punctuation 32203 . 32204) (CHAR 32199 . 32203) (SIGNED 32192 . 32198) (punctuation 32191 . 32192) (symbol 32183 . 32191) (TEMPLATE 32174 . 32182) (EXTERN 32167 . 32173) (semantic-list 32133 . 32156) (punctuation 32132 . 32133) (CHAR 32128 . 32132) (punctuation 32127 . 32128) (symbol 32112 . 32127) (punctuation 32110 . 32111) (symbol 32096 . 32110) (punctuation 32094 . 32095) (CHAR 32090 . 32094) (punctuation 32089 . 32090) (symbol 32081 . 32089) (TEMPLATE 32072 . 32080) (EXTERN 32065 . 32071) (semantic-list 32035 . 32053) (symbol 32020 . 32035) (punctuation 32018 . 32019) (symbol 32004 . 32018) (punctuation 32002 . 32003) (symbol 32001 . 32002) (punctuation 32000 . 32001) (symbol 31992 . 32000) (punctuation 31990 . 31991) (symbol 31989 . 31990) (CLASS 31983 . 31988) (punctuation 31982 . 31983) (TEMPLATE 31973 . 31981) (semantic-list 31662 . 31688) (punctuation 31661 . 31662) (LONG 31657 . 31661) (LONG 31652 . 31656) (UNSIGNED 31643 . 31651) (punctuation 31642 . 31643) (symbol 31633 . 31642) (punctuation 31631 . 31632) (symbol 31617 . 31631) (punctuation 31615 . 31616) (LONG 31611 . 31615) (LONG 31606 . 31610) (UNSIGNED 31597 . 31605) (punctuation 31596 . 31597) (symbol 31588 . 31596) (TEMPLATE 31579 . 31587) (EXTERN 31572 . 31578) (semantic-list 31526 . 31561) (punctuation 31525 . 31526) (LONG 31521 . 31525) (LONG 31516 . 31520) (punctuation 31515 . 31516) (symbol 31506 . 31515) (punctuation 31504 . 31505) (symbol 31490 . 31504) (punctuation 31488 . 31489) (LONG 31484 . 31488) (LONG 31479 . 31483) (punctuation 31478 . 31479) (symbol 31470 . 31478) (TEMPLATE 31461 . 31469) (EXTERN 31454 . 31460) (semantic-list 31416 . 31442) (punctuation 31415 . 31416) (LONG 31411 . 31415) (UNSIGNED 31402 . 31410) (punctuation 31401 . 31402) (symbol 31392 . 31401) (punctuation 31390 . 31391) (symbol 31376 . 31390) (punctuation 31374 . 31375) (LONG 31370 . 31374) (UNSIGNED 31361 . 31369) (punctuation 31360 . 31361) (symbol 31352 . 31360) (TEMPLATE 31343 . 31351) (EXTERN 31336 . 31342) (semantic-list 31290 . 31325) (punctuation 31289 . 31290) (LONG 31285 . 31289) (punctuation 31284 . 31285) (symbol 31275 . 31284) (punctuation 31273 . 31274) (symbol 31259 . 31273) (punctuation 31257 . 31258) (LONG 31253 . 31257) (punctuation 31252 . 31253) (symbol 31244 . 31252) (TEMPLATE 31235 . 31243) (EXTERN 31228 . 31234) (semantic-list 31181 . 31216) (punctuation 31180 . 31181) (INT 31177 . 31180) (UNSIGNED 31168 . 31176) (punctuation 31167 . 31168) (symbol 31158 . 31167) (punctuation 31156 . 31157) (symbol 31142 . 31156) (punctuation 31140 . 31141) (INT 31137 . 31140) (UNSIGNED 31128 . 31136) (punctuation 31127 . 31128) (symbol 31119 . 31127) (TEMPLATE 31110 . 31118) (EXTERN 31103 . 31109) (semantic-list 31057 . 31092) (punctuation 31056 . 31057) (INT 31053 . 31056) (punctuation 31052 . 31053) (symbol 31043 . 31052) (punctuation 31041 . 31042) (symbol 31027 . 31041) (punctuation 31025 . 31026) (INT 31022 . 31025) (punctuation 31021 . 31022) (symbol 31013 . 31021) (TEMPLATE 31004 . 31012) (EXTERN 30997 . 31003) (semantic-list 30959 . 30985) (punctuation 30958 . 30959) (SHORT 30953 . 30958) (UNSIGNED 30944 . 30952) (punctuation 30943 . 30944) (symbol 30934 . 30943) (punctuation 30932 . 30933) (symbol 30918 . 30932) (punctuation 30916 . 30917) (SHORT 30911 . 30916) (UNSIGNED 30902 . 30910) (punctuation 30901 . 30902) (symbol 30893 . 30901) (TEMPLATE 30884 . 30892) (EXTERN 30877 . 30883) (semantic-list 30831 . 30866) (punctuation 30830 . 30831) (SHORT 30825 . 30830) (punctuation 30824 . 30825) (symbol 30815 . 30824) (punctuation 30813 . 30814) (symbol 30799 . 30813) (punctuation 30797 . 30798) (SHORT 30792 . 30797) (punctuation 30791 . 30792) (symbol 30783 . 30791) (TEMPLATE 30774 . 30782) (EXTERN 30767 . 30773) (semantic-list 30729 . 30755) (punctuation 30728 . 30729) (CHAR 30724 . 30728) (UNSIGNED 30715 . 30723) (punctuation 30714 . 30715) (symbol 30705 . 30714) (punctuation 30703 . 30704) (symbol 30689 . 30703) (punctuation 30687 . 30688) (CHAR 30683 . 30687) (UNSIGNED 30674 . 30682) (punctuation 30673 . 30674) (symbol 30665 . 30673) (TEMPLATE 30656 . 30664) (EXTERN 30649 . 30655) (semantic-list 30603 . 30638) (punctuation 30602 . 30603) (CHAR 30598 . 30602) (SIGNED 30591 . 30597) (punctuation 30590 . 30591) (symbol 30581 . 30590) (punctuation 30579 . 30580) (symbol 30565 . 30579) (punctuation 30563 . 30564) (CHAR 30559 . 30563) (SIGNED 30552 . 30558) (punctuation 30551 . 30552) (symbol 30543 . 30551) (TEMPLATE 30534 . 30542) (EXTERN 30527 . 30533) (semantic-list 30481 . 30516) (punctuation 30480 . 30481) (CHAR 30476 . 30480) (punctuation 30475 . 30476) (symbol 30466 . 30475) (punctuation 30464 . 30465) (symbol 30450 . 30464) (punctuation 30448 . 30449) (CHAR 30444 . 30448) (punctuation 30443 . 30444) (symbol 30435 . 30443) (TEMPLATE 30426 . 30434) (EXTERN 30419 . 30425) (semantic-list 30377 . 30407) (symbol 30368 . 30377) (punctuation 30366 . 30367) (symbol 30352 . 30366) (punctuation 30350 . 30351) (symbol 30347 . 30350) (punctuation 30346 . 30347) (symbol 30338 . 30346) (punctuation 30336 . 30337) (symbol 30333 . 30336) (CLASS 30327 . 30332) (punctuation 30326 . 30327) (TEMPLATE 30317 . 30325) (semantic-list 30282 . 30305) (punctuation 30281 . 30282) (DOUBLE 30275 . 30281) (punctuation 30274 . 30275) (symbol 30259 . 30274) (punctuation 30257 . 30258) (symbol 30243 . 30257) (punctuation 30241 . 30242) (DOUBLE 30235 . 30241) (punctuation 30234 . 30235) (symbol 30226 . 30234) (TEMPLATE 30217 . 30225) (EXTERN 30210 . 30216) (semantic-list 30176 . 30199) (punctuation 30175 . 30176) (FLOAT 30170 . 30175) (punctuation 30169 . 30170) (symbol 30154 . 30169) (punctuation 30152 . 30153) (symbol 30138 . 30152) (punctuation 30136 . 30137) (FLOAT 30131 . 30136) (punctuation 30130 . 30131) (symbol 30122 . 30130) (TEMPLATE 30113 . 30121) (EXTERN 30106 . 30112) (semantic-list 30076 . 30094) (symbol 30061 . 30076) (punctuation 30059 . 30060) (symbol 30045 . 30059) (punctuation 30043 . 30044) (symbol 30042 . 30043) (punctuation 30041 . 30042) (symbol 30033 . 30041) (punctuation 30031 . 30032) (symbol 30030 . 30031) (TYPENAME 30021 . 30029) (punctuation 30020 . 30021) (TEMPLATE 30011 . 30019) (semantic-list 29981 . 29999) (symbol 29970 . 29981) (punctuation 29968 . 29969) (symbol 29954 . 29968) (punctuation 29952 . 29953) (BOOL 29948 . 29952) (punctuation 29947 . 29948) (symbol 29939 . 29947) (punctuation 29619 . 29620) (punctuation 29618 . 29619) (punctuation 29617 . 29618) (punctuation 29574 . 29575) (punctuation 29573 . 29574) (punctuation 29572 . 29573) (symbol 29569 . 29572) (punctuation 29563 . 29564) (semantic-list 29441 . 29563) (punctuation 29431 . 29432) (punctuation 29430 . 29431) (symbol 29424 . 29429) (punctuation 29423 . 29424) (punctuation 29422 . 29423) (punctuation 29421 . 29422) (symbol 29418 . 29421) (punctuation 29417 . 29418) (symbol 29405 . 29417) (punctuation 29399 . 29400) (symbol 29390 . 29399) (punctuation 29389 . 29390) (punctuation 29388 . 29389) (symbol 29385 . 29388) (TYPENAME 29376 . 29384) (punctuation 29374 . 29375) (symbol 29372 . 29374) (punctuation 29370 . 29371) (punctuation 29369 . 29370) (punctuation 29368 . 29369) (CLASS 29363 . 29368) (punctuation 29361 . 29362) (symbol 29356 . 29361) (CLASS 29350 . 29355) (punctuation 29348 . 29349) (symbol 29345 . 29348) (CLASS 29339 . 29344) (punctuation 29338 . 29339) (TEMPLATE 29329 . 29337) (punctuation 29178 . 29179) (punctuation 29134 . 29135) (punctuation 29133 . 29134) (punctuation 29132 . 29133) (symbol 29129 . 29132) (punctuation 29123 . 29124) (symbol 29118 . 29123) (punctuation 29117 . 29118) (punctuation 29116 . 29117) (punctuation 29115 . 29116) (symbol 29111 . 29115) (punctuation 29110 . 29111) (punctuation 29109 . 29110) (punctuation 29108 . 29109) (symbol 29105 . 29108) (punctuation 29104 . 29105) (symbol 29099 . 29104) (punctuation 29098 . 29099) (punctuation 29097 . 29098) (symbol 29094 . 29097) (TYPENAME 29085 . 29093) (punctuation 29083 . 29084) (symbol 29080 . 29083) (punctuation 29079 . 29080) (symbol 29072 . 29079) (punctuation 29071 . 29072) (punctuation 29070 . 29071) (symbol 29067 . 29070) (punctuation 29057 . 29058) (punctuation 29056 . 29057) (symbol 29050 . 29055) (punctuation 29049 . 29050) (punctuation 29048 . 29049) (punctuation 29047 . 29048) (symbol 29044 . 29047) (punctuation 29043 . 29044) (symbol 29031 . 29043) (punctuation 29025 . 29026) (symbol 29016 . 29025) (punctuation 29015 . 29016) (punctuation 29014 . 29015) (symbol 29011 . 29014) (TYPENAME 29002 . 29010) (punctuation 29000 . 29001) (symbol 28997 . 29000) (CLASS 28991 . 28996) (punctuation 28989 . 28990) (symbol 28984 . 28989) (CLASS 28978 . 28983) (punctuation 28976 . 28977) (symbol 28973 . 28976) (CLASS 28967 . 28972) (punctuation 28966 . 28967) (TEMPLATE 28957 . 28965) (punctuation 28810 . 28811) (punctuation 28809 . 28810) (punctuation 28808 . 28809) (symbol 28805 . 28808) (punctuation 28799 . 28800) (symbol 28794 . 28799) (punctuation 28793 . 28794) (punctuation 28792 . 28793) (punctuation 28791 . 28792) (symbol 28788 . 28791) (punctuation 28787 . 28788) (symbol 28770 . 28787) (punctuation 28769 . 28770) (punctuation 28768 . 28769) (symbol 28765 . 28768) (punctuation 28763 . 28764) (punctuation 28762 . 28763) (symbol 28756 . 28761) (punctuation 28755 . 28756) (punctuation 28754 . 28755) (punctuation 28753 . 28754) (symbol 28750 . 28753) (punctuation 28749 . 28750) (symbol 28737 . 28749) (punctuation 28731 . 28732) (symbol 28722 . 28731) (punctuation 28721 . 28722) (punctuation 28720 . 28721) (symbol 28717 . 28720) (TYPENAME 28708 . 28716) (punctuation 28706 . 28707) (symbol 28703 . 28706) (CLASS 28697 . 28702) (punctuation 28695 . 28696) (symbol 28692 . 28695) (CLASS 28686 . 28691) (punctuation 28685 . 28686) (TEMPLATE 28676 . 28684) (punctuation 28159 . 28160) (punctuation 28158 . 28159) (punctuation 28157 . 28158) (punctuation 28139 . 28140) (punctuation 28138 . 28139) (punctuation 28137 . 28138) (symbol 28134 . 28137) (punctuation 28128 . 28129) (semantic-list 28006 . 28128) (punctuation 27996 . 27997) (punctuation 27995 . 27996) (symbol 27989 . 27994) (punctuation 27988 . 27989) (punctuation 27987 . 27988) (punctuation 27986 . 27987) (symbol 27983 . 27986) (punctuation 27982 . 27983) (symbol 27970 . 27982) (punctuation 27964 . 27965) (symbol 27955 . 27964) (punctuation 27954 . 27955) (punctuation 27953 . 27954) (symbol 27950 . 27953) (TYPENAME 27941 . 27949) (punctuation 27939 . 27940) (symbol 27937 . 27939) (punctuation 27935 . 27936) (punctuation 27934 . 27935) (punctuation 27933 . 27934) (CLASS 27928 . 27933) (punctuation 27926 . 27927) (symbol 27923 . 27926) (CLASS 27917 . 27922) (punctuation 27916 . 27917) (TEMPLATE 27907 . 27915) (punctuation 27644 . 27645) (punctuation 27643 . 27644) (punctuation 27642 . 27643) (punctuation 27586 . 27587) (punctuation 27585 . 27586) (punctuation 27584 . 27585) (symbol 27579 . 27584) (punctuation 27578 . 27579) (punctuation 27577 . 27578) (punctuation 27576 . 27577) (symbol 27572 . 27576) (punctuation 27571 . 27572) (punctuation 27570 . 27571) (punctuation 27569 . 27570) (symbol 27565 . 27569) (punctuation 27564 . 27565) (punctuation 27563 . 27564) (punctuation 27562 . 27563) (punctuation 27561 . 27562) (punctuation 27560 . 27561) (punctuation 27559 . 27560) (punctuation 27558 . 27559) (symbol 27556 . 27558) (CONST 27550 . 27555) (punctuation 27549 . 27550) (symbol 27538 . 27549) (punctuation 27537 . 27538) (punctuation 27536 . 27537) (symbol 27530 . 27536) (TYPENAME 27521 . 27529) (punctuation 27515 . 27516) (symbol 27501 . 27515) (punctuation 27500 . 27501) (punctuation 27499 . 27500) (symbol 27496 . 27499) (TYPENAME 27487 . 27495) (punctuation 27486 . 27487) (symbol 27474 . 27486) (punctuation 27473 . 27474) (symbol 27464 . 27473) (punctuation 27463 . 27464) (punctuation 27462 . 27463) (symbol 27459 . 27462) (TYPENAME 27450 . 27458) (punctuation 27448 . 27449) (symbol 27446 . 27448) (punctuation 27444 . 27445) (punctuation 27443 . 27444) (punctuation 27442 . 27443) (CLASS 27437 . 27442) (punctuation 27435 . 27436) (symbol 27426 . 27435) (CLASS 27420 . 27425) (punctuation 27419 . 27420) (TEMPLATE 27410 . 27418) (punctuation 27308 . 27309) (punctuation 27307 . 27308) (punctuation 27306 . 27307) (punctuation 27253 . 27254) (punctuation 27252 . 27253) (punctuation 27251 . 27252) (symbol 27246 . 27251) (punctuation 27245 . 27246) (punctuation 27244 . 27245) (punctuation 27243 . 27244) (symbol 27239 . 27243) (punctuation 27238 . 27239) (punctuation 27237 . 27238) (punctuation 27236 . 27237) (symbol 27232 . 27236) (punctuation 27231 . 27232) (punctuation 27230 . 27231) (punctuation 27229 . 27230) (punctuation 27228 . 27229) (punctuation 27227 . 27228) (punctuation 27226 . 27227) (punctuation 27225 . 27226) (symbol 27223 . 27225) (CONST 27217 . 27222) (punctuation 27216 . 27217) (symbol 27205 . 27216) (punctuation 27204 . 27205) (punctuation 27203 . 27204) (symbol 27197 . 27203) (TYPENAME 27188 . 27196) (punctuation 27178 . 27179) (symbol 27164 . 27178) (punctuation 27163 . 27164) (punctuation 27162 . 27163) (symbol 27159 . 27162) (TYPENAME 27150 . 27158) (punctuation 27149 . 27150) (symbol 27137 . 27149) (punctuation 27131 . 27132) (punctuation 27130 . 27131) (number 27128 . 27129) (punctuation 27126 . 27127) (punctuation 27125 . 27126) (semantic-list 27120 . 27124) (punctuation 27119 . 27120) (punctuation 27118 . 27119) (punctuation 27117 . 27118) (SIZEOF 27111 . 27117) (punctuation 27105 . 27106) (symbol 27096 . 27105) (punctuation 27095 . 27096) (punctuation 27094 . 27095) (symbol 27091 . 27094) (TYPENAME 27082 . 27090) (punctuation 27080 . 27081) (symbol 27078 . 27080) (punctuation 27076 . 27077) (punctuation 27075 . 27076) (punctuation 27074 . 27075) (CLASS 27069 . 27074) (punctuation 27067 . 27068) (symbol 27058 . 27067) (CLASS 27052 . 27057) (punctuation 27051 . 27052) (TEMPLATE 27042 . 27050) (punctuation 26802 . 26803) (punctuation 26801 . 26802) (punctuation 26800 . 26801) (symbol 26795 . 26800) (punctuation 26794 . 26795) (punctuation 26793 . 26794) (punctuation 26792 . 26793) (symbol 26789 . 26792) (punctuation 26788 . 26789) (symbol 26776 . 26788) (punctuation 26775 . 26776) (symbol 26766 . 26775) (punctuation 26765 . 26766) (punctuation 26764 . 26765) (symbol 26761 . 26764) (TYPENAME 26752 . 26760) (punctuation 26750 . 26751) (symbol 26747 . 26750) (CLASS 26741 . 26746) (punctuation 26739 . 26740) (symbol 26738 . 26739) (CLASS 26732 . 26737) (punctuation 26730 . 26731) (symbol 26721 . 26730) (CLASS 26715 . 26720) (punctuation 26714 . 26715) (TEMPLATE 26705 . 26713) (punctuation 26587 . 26588) (punctuation 26586 . 26587) (punctuation 26585 . 26586) (symbol 26580 . 26585) (punctuation 26579 . 26580) (punctuation 26578 . 26579) (punctuation 26577 . 26578) (symbol 26574 . 26577) (punctuation 26573 . 26574) (symbol 26561 . 26573) (punctuation 26560 . 26561) (symbol 26551 . 26560) (punctuation 26550 . 26551) (punctuation 26549 . 26550) (symbol 26546 . 26549) (TYPENAME 26537 . 26545) (punctuation 26535 . 26536) (symbol 26532 . 26535) (CLASS 26526 . 26531) (punctuation 26524 . 26525) (symbol 26515 . 26524) (CLASS 26509 . 26514) (punctuation 26508 . 26509) (TEMPLATE 26499 . 26507) (punctuation 26413 . 26414) (punctuation 26412 . 26413) (punctuation 26411 . 26412) (symbol 26406 . 26411) (punctuation 26405 . 26406) (punctuation 26404 . 26405) (punctuation 26403 . 26404) (symbol 26400 . 26403) (punctuation 26399 . 26400) (symbol 26387 . 26399) (punctuation 26386 . 26387) (symbol 26377 . 26386) (punctuation 26376 . 26377) (punctuation 26375 . 26376) (symbol 26372 . 26375) (TYPENAME 26363 . 26371) (punctuation 26361 . 26362) (symbol 26358 . 26361) (CLASS 26352 . 26357) (punctuation 26351 . 26352) (TEMPLATE 26342 . 26350) (punctuation 26174 . 26175) (punctuation 26173 . 26174) (punctuation 26172 . 26173) (punctuation 26145 . 26146) (punctuation 26144 . 26145) (punctuation 26143 . 26144) (symbol 26138 . 26143) (punctuation 26137 . 26138) (punctuation 26136 . 26137) (punctuation 26135 . 26136) (symbol 26131 . 26135) (punctuation 26130 . 26131) (punctuation 26129 . 26130) (punctuation 26128 . 26129) (symbol 26124 . 26128) (punctuation 26123 . 26124) (punctuation 26122 . 26123) (punctuation 26121 . 26122) (punctuation 26120 . 26121) (punctuation 26119 . 26120) (punctuation 26118 . 26119) (punctuation 26117 . 26118) (symbol 26115 . 26117) (CONST 26109 . 26114) (punctuation 26108 . 26109) (symbol 26097 . 26108) (punctuation 26096 . 26097) (punctuation 26095 . 26096) (symbol 26089 . 26095) (TYPENAME 26080 . 26088) (punctuation 26074 . 26075) (symbol 26060 . 26074) (punctuation 26059 . 26060) (punctuation 26058 . 26059) (symbol 26055 . 26058) (TYPENAME 26046 . 26054) (punctuation 26045 . 26046) (symbol 26033 . 26045) (punctuation 26032 . 26033) (symbol 26023 . 26032) (punctuation 26022 . 26023) (punctuation 26021 . 26022) (symbol 26018 . 26021) (TYPENAME 26009 . 26017) (punctuation 26007 . 26008) (symbol 26005 . 26007) (punctuation 26003 . 26004) (punctuation 26002 . 26003) (punctuation 26001 . 26002) (CLASS 25996 . 26001) (punctuation 25995 . 25996) (TEMPLATE 25986 . 25994) (punctuation 25165 . 25166) (punctuation 25164 . 25165) (punctuation 25163 . 25164) (punctuation 25139 . 25140) (punctuation 25138 . 25139) (punctuation 25137 . 25138) (symbol 25132 . 25137) (punctuation 25131 . 25132) (punctuation 25130 . 25131) (punctuation 25129 . 25130) (symbol 25125 . 25129) (punctuation 25124 . 25125) (punctuation 25123 . 25124) (punctuation 25122 . 25123) (symbol 25118 . 25122) (punctuation 25117 . 25118) (punctuation 25116 . 25117) (punctuation 25115 . 25116) (punctuation 25114 . 25115) (punctuation 25113 . 25114) (punctuation 25112 . 25113) (punctuation 25111 . 25112) (symbol 25109 . 25111) (CONST 25103 . 25108) (punctuation 25102 . 25103) (symbol 25091 . 25102) (punctuation 25090 . 25091) (punctuation 25089 . 25090) (symbol 25083 . 25089) (TYPENAME 25074 . 25082) (punctuation 25064 . 25065) (symbol 25050 . 25064) (punctuation 25049 . 25050) (punctuation 25048 . 25049) (symbol 25045 . 25048) (TYPENAME 25036 . 25044) (punctuation 25035 . 25036) (symbol 25023 . 25035) (punctuation 25017 . 25018) (punctuation 25016 . 25017) (number 25014 . 25015) (punctuation 25012 . 25013) (punctuation 25011 . 25012) (semantic-list 25006 . 25010) (punctuation 25005 . 25006) (punctuation 25004 . 25005) (punctuation 25003 . 25004) (SIZEOF 24997 . 25003) (punctuation 24991 . 24992) (symbol 24982 . 24991) (punctuation 24981 . 24982) (punctuation 24980 . 24981) (symbol 24977 . 24980) (TYPENAME 24968 . 24976) (punctuation 24966 . 24967) (symbol 24964 . 24966) (punctuation 24962 . 24963) (punctuation 24961 . 24962) (punctuation 24960 . 24961) (CLASS 24955 . 24960) (punctuation 24954 . 24955) (TEMPLATE 24945 . 24953) (punctuation 23824 . 23825) (punctuation 23823 . 23824) (punctuation 23822 . 23823) (punctuation 23750 . 23751) (punctuation 23749 . 23750) (punctuation 23748 . 23749) (symbol 23743 . 23748) (punctuation 23742 . 23743) (punctuation 23741 . 23742) (punctuation 23740 . 23741) (symbol 23736 . 23740) (punctuation 23735 . 23736) (punctuation 23734 . 23735) (punctuation 23733 . 23734) (symbol 23729 . 23733) (punctuation 23728 . 23729) (punctuation 23727 . 23728) (punctuation 23726 . 23727) (punctuation 23725 . 23726) (punctuation 23724 . 23725) (punctuation 23723 . 23724) (punctuation 23722 . 23723) (symbol 23720 . 23722) (CONST 23714 . 23719) (punctuation 23713 . 23714) (symbol 23702 . 23713) (punctuation 23701 . 23702) (punctuation 23700 . 23701) (symbol 23694 . 23700) (TYPENAME 23685 . 23693) (punctuation 23675 . 23676) (symbol 23661 . 23675) (punctuation 23660 . 23661) (punctuation 23659 . 23660) (symbol 23656 . 23659) (TYPENAME 23647 . 23655) (punctuation 23646 . 23647) (symbol 23634 . 23646) (punctuation 23628 . 23629) (punctuation 23627 . 23628) (number 23625 . 23626) (punctuation 23623 . 23624) (punctuation 23622 . 23623) (semantic-list 23617 . 23621) (punctuation 23616 . 23617) (punctuation 23615 . 23616) (punctuation 23614 . 23615) (SIZEOF 23608 . 23614) (punctuation 23602 . 23603) (symbol 23593 . 23602) (punctuation 23592 . 23593) (punctuation 23591 . 23592) (symbol 23588 . 23591) (TYPENAME 23579 . 23587) (punctuation 23577 . 23578) (symbol 23575 . 23577) (punctuation 23573 . 23574) (punctuation 23572 . 23573) (punctuation 23571 . 23572) (CLASS 23566 . 23571) (punctuation 23564 . 23565) (symbol 23563 . 23564) (CLASS 23557 . 23562) (punctuation 23555 . 23556) (symbol 23546 . 23555) (CLASS 23540 . 23545) (punctuation 23539 . 23540) (TEMPLATE 23530 . 23538) (punctuation 23421 . 23422) (punctuation 23420 . 23421) (punctuation 23419 . 23420) (symbol 23414 . 23419) (punctuation 23413 . 23414) (punctuation 23412 . 23413) (punctuation 23411 . 23412) (symbol 23407 . 23411) (punctuation 23406 . 23407) (punctuation 23405 . 23406) (punctuation 23404 . 23405) (symbol 23401 . 23404) (punctuation 23400 . 23401) (symbol 23386 . 23400) (punctuation 23385 . 23386) (punctuation 23384 . 23385) (symbol 23381 . 23384) (TYPENAME 23372 . 23380) (punctuation 23371 . 23372) (symbol 23359 . 23371) (punctuation 23353 . 23354) (symbol 23344 . 23353) (punctuation 23343 . 23344) (punctuation 23342 . 23343) (symbol 23339 . 23342) (TYPENAME 23330 . 23338) (punctuation 23328 . 23329) (symbol 23325 . 23328) (CLASS 23319 . 23324) (punctuation 23317 . 23318) (symbol 23316 . 23317) (CLASS 23310 . 23315) (punctuation 23308 . 23309) (symbol 23299 . 23308) (CLASS 23293 . 23298) (punctuation 23292 . 23293) (TEMPLATE 23283 . 23291) (punctuation 23208 . 23209) (punctuation 23207 . 23208) (punctuation 23206 . 23207) (punctuation 23163 . 23164) (punctuation 23162 . 23163) (punctuation 23161 . 23162) (symbol 23156 . 23161) (punctuation 23155 . 23156) (punctuation 23154 . 23155) (punctuation 23153 . 23154) (symbol 23149 . 23153) (punctuation 23148 . 23149) (punctuation 23147 . 23148) (punctuation 23146 . 23147) (symbol 23142 . 23146) (punctuation 23141 . 23142) (punctuation 23140 . 23141) (punctuation 23139 . 23140) (punctuation 23138 . 23139) (punctuation 23137 . 23138) (punctuation 23136 . 23137) (punctuation 23135 . 23136) (symbol 23133 . 23135) (CONST 23127 . 23132) (punctuation 23126 . 23127) (symbol 23115 . 23126) (punctuation 23114 . 23115) (punctuation 23113 . 23114) (symbol 23107 . 23113) (TYPENAME 23098 . 23106) (punctuation 23088 . 23089) (symbol 23074 . 23088) (punctuation 23073 . 23074) (punctuation 23072 . 23073) (symbol 23069 . 23072) (TYPENAME 23060 . 23068) (punctuation 23059 . 23060) (symbol 23047 . 23059) (punctuation 23041 . 23042) (punctuation 23040 . 23041) (number 23038 . 23039) (punctuation 23036 . 23037) (punctuation 23035 . 23036) (semantic-list 23030 . 23034) (punctuation 23029 . 23030) (punctuation 23028 . 23029) (punctuation 23027 . 23028) (SIZEOF 23021 . 23027) (punctuation 23015 . 23016) (symbol 23006 . 23015) (punctuation 23005 . 23006) (punctuation 23004 . 23005) (symbol 23001 . 23004) (TYPENAME 22992 . 23000) (punctuation 22990 . 22991) (symbol 22988 . 22990) (punctuation 22986 . 22987) (punctuation 22985 . 22986) (punctuation 22984 . 22985) (CLASS 22979 . 22984) (punctuation 22977 . 22978) (symbol 22976 . 22977) (CLASS 22970 . 22975) (punctuation 22969 . 22970) (TEMPLATE 22960 . 22968) (punctuation 22886 . 22887) (punctuation 22885 . 22886) (punctuation 22884 . 22885) (symbol 22879 . 22884) (punctuation 22878 . 22879) (punctuation 22877 . 22878) (punctuation 22873 . 22874) (symbol 22869 . 22873) (punctuation 22868 . 22869) (punctuation 22867 . 22868) (punctuation 22866 . 22867) (symbol 22863 . 22866) (punctuation 22862 . 22863) (symbol 22848 . 22862) (punctuation 22847 . 22848) (punctuation 22846 . 22847) (symbol 22843 . 22846) (TYPENAME 22834 . 22842) (punctuation 22833 . 22834) (symbol 22821 . 22833) (punctuation 22817 . 22818) (symbol 22808 . 22817) (punctuation 22807 . 22808) (punctuation 22806 . 22807) (symbol 22803 . 22806) (TYPENAME 22794 . 22802) (punctuation 22792 . 22793) (symbol 22789 . 22792) (CLASS 22783 . 22788) (punctuation 22781 . 22782) (symbol 22780 . 22781) (CLASS 22774 . 22779) (punctuation 22773 . 22774) (TEMPLATE 22764 . 22772) (punctuation 22453 . 22454) (punctuation 22452 . 22453) (punctuation 22451 . 22452) (punctuation 22394 . 22395) (symbol 22392 . 22394) (punctuation 22391 . 22392) (punctuation 22390 . 22391) (punctuation 22389 . 22390) (CLASS 22384 . 22389) (punctuation 22382 . 22383) (symbol 22373 . 22382) (CLASS 22367 . 22372) (punctuation 22366 . 22367) (TEMPLATE 22358 . 22366) (punctuation 22280 . 22281) (punctuation 22279 . 22280) (punctuation 22278 . 22279) (punctuation 22246 . 22247) (symbol 22244 . 22246) (punctuation 22243 . 22244) (punctuation 22242 . 22243) (punctuation 22241 . 22242) (CLASS 22236 . 22241) (punctuation 22235 . 22236) (TEMPLATE 22227 . 22235) (punctuation 22144 . 22145) (punctuation 22143 . 22144) (punctuation 22142 . 22143) (punctuation 22075 . 22076) (symbol 22073 . 22075) (punctuation 22071 . 22072) (punctuation 22070 . 22071) (punctuation 22069 . 22070) (CLASS 22064 . 22069) (punctuation 22062 . 22063) (symbol 22061 . 22062) (CLASS 22055 . 22060) (punctuation 22054 . 22055) (TEMPLATE 22045 . 22053) (punctuation 21975 . 21976) (punctuation 21974 . 21975) (punctuation 21973 . 21974) (symbol 21967 . 21973) (punctuation 21965 . 21966) (symbol 21960 . 21965) (punctuation 21959 . 21960) (punctuation 21958 . 21959) (punctuation 21957 . 21958) (symbol 21954 . 21957) (punctuation 21953 . 21954) (symbol 21941 . 21953) (punctuation 21940 . 21941) (symbol 21931 . 21940) (punctuation 21930 . 21931) (punctuation 21929 . 21930) (symbol 21926 . 21929) (TYPENAME 21917 . 21925) (punctuation 21915 . 21916) (symbol 21912 . 21915) (CLASS 21906 . 21911) (punctuation 21905 . 21906) (TEMPLATE 21896 . 21904) (punctuation 21778 . 21779) (punctuation 21777 . 21778) (punctuation 21776 . 21777) (symbol 21770 . 21776) (punctuation 21766 . 21767) (symbol 21761 . 21766) (punctuation 21760 . 21761) (punctuation 21759 . 21760) (punctuation 21758 . 21759) (symbol 21755 . 21758) (punctuation 21754 . 21755) (symbol 21736 . 21754) (punctuation 21735 . 21736) (punctuation 21733 . 21734) (punctuation 21732 . 21733) (symbol 21724 . 21729) (punctuation 21723 . 21724) (punctuation 21722 . 21723) (punctuation 21721 . 21722) (symbol 21718 . 21721) (punctuation 21717 . 21718) (symbol 21710 . 21717) (punctuation 21709 . 21710) (punctuation 21708 . 21709) (symbol 21705 . 21708) (punctuation 21704 . 21705) (punctuation 21702 . 21703) (punctuation 21701 . 21702) (symbol 21693 . 21698) (punctuation 21692 . 21693) (punctuation 21691 . 21692) (punctuation 21690 . 21691) (symbol 21679 . 21690) (punctuation 21677 . 21678) (symbol 21674 . 21677) (punctuation 21673 . 21674) (symbol 21659 . 21673) (punctuation 21658 . 21659) (punctuation 21657 . 21658) (symbol 21654 . 21657) (punctuation 21653 . 21654) (punctuation 21651 . 21652) (punctuation 21650 . 21651) (symbol 21642 . 21647) (punctuation 21641 . 21642) (punctuation 21640 . 21641) (punctuation 21639 . 21640) (punctuation 21638 . 21639) (CHAR 21634 . 21638) (CONST 21628 . 21633) (punctuation 21626 . 21627) (symbol 21623 . 21626) (punctuation 21622 . 21623) (symbol 21608 . 21622) (punctuation 21607 . 21608) (punctuation 21606 . 21607) (symbol 21603 . 21606) (punctuation 21602 . 21603) (punctuation 21600 . 21601) (punctuation 21599 . 21600) (symbol 21591 . 21596) (punctuation 21590 . 21591) (punctuation 21589 . 21590) (punctuation 21588 . 21589) (symbol 21585 . 21588) (punctuation 21584 . 21585) (symbol 21572 . 21584) (punctuation 21571 . 21572) (punctuation 21569 . 21570) (punctuation 21568 . 21569) (symbol 21381 . 21386) (punctuation 21380 . 21381) (punctuation 21379 . 21380) (punctuation 21378 . 21379) (symbol 21375 . 21378) (punctuation 21374 . 21375) (symbol 21360 . 21374) (punctuation 21359 . 21360) (punctuation 21358 . 21359) (symbol 21355 . 21358) (punctuation 21354 . 21355) (punctuation 21350 . 21351) (symbol 21341 . 21350) (punctuation 21340 . 21341) (punctuation 21339 . 21340) (symbol 21336 . 21339) (TYPENAME 21327 . 21335) (symbol 21317 . 21326) (punctuation 21315 . 21316) (symbol 21312 . 21315) (CLASS 21306 . 21311) (punctuation 21305 . 21306) (TEMPLATE 21296 . 21304) (punctuation 19621 . 19622) (punctuation 19620 . 19621) (punctuation 19619 . 19620) (symbol 19614 . 19619) (punctuation 19613 . 19614) (punctuation 19612 . 19613) (punctuation 19611 . 19612) (symbol 19608 . 19611) (punctuation 19607 . 19608) (symbol 19595 . 19607) (punctuation 19593 . 19594) (punctuation 19592 . 19593) (symbol 19584 . 19589) (punctuation 19583 . 19584) (punctuation 19582 . 19583) (punctuation 19581 . 19582) (symbol 19578 . 19581) (punctuation 19577 . 19578) (symbol 19560 . 19577) (punctuation 19559 . 19560) (punctuation 19558 . 19559) (symbol 19555 . 19558) (punctuation 19551 . 19552) (symbol 19542 . 19551) (punctuation 19541 . 19542) (punctuation 19540 . 19541) (symbol 19537 . 19540) (TYPENAME 19528 . 19536) (punctuation 19526 . 19527) (symbol 19523 . 19526) (CLASS 19517 . 19522) (punctuation 19515 . 19516) (symbol 19512 . 19515) (CLASS 19506 . 19511) (punctuation 19505 . 19506) (TEMPLATE 19496 . 19504) (punctuation 18450 . 18451) (punctuation 18449 . 18450) (punctuation 18448 . 18449) (symbol 18443 . 18448) (punctuation 18442 . 18443) (punctuation 18441 . 18442) (punctuation 18440 . 18441) (symbol 18437 . 18440) (punctuation 18436 . 18437) (symbol 18424 . 18436) (punctuation 18422 . 18423) (punctuation 18421 . 18422) (symbol 18413 . 18418) (punctuation 18412 . 18413) (punctuation 18411 . 18412) (punctuation 18410 . 18411) (symbol 18407 . 18410) (punctuation 18406 . 18407) (symbol 18389 . 18406) (punctuation 18388 . 18389) (punctuation 18387 . 18388) (symbol 18384 . 18387) (punctuation 18380 . 18381) (symbol 18371 . 18380) (punctuation 18370 . 18371) (punctuation 18369 . 18370) (symbol 18366 . 18369) (TYPENAME 18357 . 18365) (punctuation 18355 . 18356) (symbol 18352 . 18355) (CLASS 18346 . 18351) (punctuation 18344 . 18345) (symbol 18341 . 18344) (CLASS 18335 . 18340) (punctuation 18334 . 18335) (TEMPLATE 18325 . 18333) (symbol 18208 . 18217) (symbol 18159 . 18168) (punctuation 17562 . 17563) (punctuation 17561 . 17562) (punctuation 17560 . 17561) (symbol 17555 . 17560) (punctuation 17554 . 17555) (punctuation 17553 . 17554) (punctuation 17552 . 17553) (symbol 17549 . 17552) (punctuation 17548 . 17549) (symbol 17536 . 17548) (punctuation 17534 . 17535) (punctuation 17533 . 17534) (symbol 17527 . 17532) (punctuation 17526 . 17527) (punctuation 17525 . 17526) (punctuation 17524 . 17525) (symbol 17521 . 17524) (punctuation 17520 . 17521) (symbol 17513 . 17520) (punctuation 17512 . 17513) (punctuation 17511 . 17512) (symbol 17508 . 17511) (punctuation 17504 . 17505) (symbol 17495 . 17504) (punctuation 17494 . 17495) (punctuation 17493 . 17494) (symbol 17490 . 17493) (TYPENAME 17481 . 17489) (punctuation 17479 . 17480) (symbol 17476 . 17479) (CLASS 17470 . 17475) (punctuation 17468 . 17469) (symbol 17465 . 17468) (CLASS 17459 . 17464) (punctuation 17458 . 17459) (TEMPLATE 17449 . 17457) (punctuation 17177 . 17178) (punctuation 17176 . 17177) (punctuation 17175 . 17176) (symbol 17169 . 17175) (punctuation 17165 . 17166) (symbol 17160 . 17165) (punctuation 17159 . 17160) (punctuation 17158 . 17159) (punctuation 17157 . 17158) (CHAR 17153 . 17157) (punctuation 17151 . 17152) (symbol 17148 . 17151) (punctuation 17147 . 17148) (symbol 17140 . 17147) (punctuation 17139 . 17140) (punctuation 17138 . 17139) (symbol 17135 . 17138) (punctuation 17134 . 17135) (punctuation 17132 . 17133) (punctuation 17131 . 17132) (number 17127 . 17128) (punctuation 17125 . 17126) (semantic-list 17119 . 17124) (SIZEOF 17113 . 17119) (punctuation 17111 . 17112) (punctuation 17110 . 17111) (symbol 17102 . 17107) (punctuation 17101 . 17102) (punctuation 17100 . 17101) (punctuation 17099 . 17100) (symbol 17096 . 17099) (punctuation 17095 . 17096) (symbol 17084 . 17095) (punctuation 17083 . 17084) (punctuation 17082 . 17083) (symbol 17079 . 17082) (punctuation 17075 . 17076) (symbol 17066 . 17075) (punctuation 17065 . 17066) (punctuation 17064 . 17065) (symbol 17061 . 17064) (TYPENAME 17052 . 17060) (punctuation 17050 . 17051) (symbol 17047 . 17050) (CLASS 17041 . 17046) (punctuation 17040 . 17041) (TEMPLATE 17031 . 17039) (punctuation 16816 . 16817) (punctuation 16815 . 16816) (punctuation 16814 . 16815) (number 16813 . 16814) (punctuation 16811 . 16812) (semantic-list 16805 . 16810) (SIZEOF 16799 . 16805) (punctuation 16797 . 16798) (punctuation 16796 . 16797) (symbol 16790 . 16795) (punctuation 16789 . 16790) (punctuation 16788 . 16789) (punctuation 16787 . 16788) (symbol 16784 . 16787) (punctuation 16783 . 16784) (symbol 16771 . 16783) (punctuation 16769 . 16770) (punctuation 16768 . 16769) (symbol 16760 . 16765) (punctuation 16759 . 16760) (punctuation 16758 . 16759) (punctuation 16757 . 16758) (symbol 16754 . 16757) (punctuation 16753 . 16754) (symbol 16742 . 16753) (punctuation 16741 . 16742) (punctuation 16740 . 16741) (symbol 16737 . 16740) (punctuation 16733 . 16734) (symbol 16724 . 16733) (punctuation 16723 . 16724) (punctuation 16722 . 16723) (symbol 16719 . 16722) (TYPENAME 16710 . 16718) (punctuation 16708 . 16709) (symbol 16705 . 16708) (CLASS 16699 . 16704) (punctuation 16697 . 16698) (symbol 16694 . 16697) (CLASS 16688 . 16693) (punctuation 16687 . 16688) (TEMPLATE 16678 . 16686) (punctuation 16487 . 16488) (punctuation 16486 . 16487) (punctuation 16485 . 16486) (symbol 16479 . 16485) (punctuation 16475 . 16476) (number 16473 . 16475) (punctuation 16471 . 16472) (semantic-list 16465 . 16470) (SIZEOF 16459 . 16465) (punctuation 16457 . 16458) (punctuation 16456 . 16457) (number 16454 . 16455) (punctuation 16452 . 16453) (punctuation 16451 . 16452) (semantic-list 16445 . 16450) (SIZEOF 16439 . 16445) (punctuation 16437 . 16438) (punctuation 16436 . 16437) (symbol 16428 . 16433) (punctuation 16427 . 16428) (punctuation 16426 . 16427) (punctuation 16425 . 16426) (symbol 16422 . 16425) (punctuation 16421 . 16422) (symbol 16412 . 16421) (punctuation 16411 . 16412) (punctuation 16410 . 16411) (symbol 16407 . 16410) (punctuation 16406 . 16407) (punctuation 16404 . 16405) (punctuation 16403 . 16404) (symbol 16397 . 16402) (punctuation 16396 . 16397) (punctuation 16395 . 16396) (punctuation 16394 . 16395) (symbol 16391 . 16394) (punctuation 16390 . 16391) (symbol 16379 . 16390) (punctuation 16378 . 16379) (punctuation 16377 . 16378) (symbol 16374 . 16377) (punctuation 16370 . 16371) (symbol 16361 . 16370) (punctuation 16360 . 16361) (punctuation 16359 . 16360) (symbol 16356 . 16359) (TYPENAME 16347 . 16355) (punctuation 16345 . 16346) (symbol 16342 . 16345) (CLASS 16336 . 16341) (punctuation 16335 . 16336) (TEMPLATE 16326 . 16334) (punctuation 16199 . 16200) (punctuation 16198 . 16199) (punctuation 16197 . 16198) (number 16196 . 16197) (punctuation 16194 . 16195) (punctuation 16193 . 16194) (semantic-list 16187 . 16192) (SIZEOF 16181 . 16187) (punctuation 16179 . 16180) (punctuation 16178 . 16179) (symbol 16172 . 16177) (punctuation 16171 . 16172) (punctuation 16170 . 16171) (punctuation 16169 . 16170) (symbol 16166 . 16169) (punctuation 16165 . 16166) (symbol 16153 . 16165) (punctuation 16151 . 16152) (punctuation 16150 . 16151) (symbol 16142 . 16147) (punctuation 16141 . 16142) (punctuation 16140 . 16141) (punctuation 16139 . 16140) (symbol 16136 . 16139) (punctuation 16135 . 16136) (symbol 16126 . 16135) (punctuation 16125 . 16126) (punctuation 16124 . 16125) (symbol 16121 . 16124) (punctuation 16120 . 16121) (punctuation 16118 . 16119) (punctuation 16117 . 16118) (symbol 16111 . 16116) (punctuation 16110 . 16111) (punctuation 16109 . 16110) (punctuation 16108 . 16109) (symbol 16105 . 16108) (punctuation 16104 . 16105) (symbol 16093 . 16104) (punctuation 16092 . 16093) (punctuation 16091 . 16092) (symbol 16088 . 16091) (punctuation 16084 . 16085) (symbol 16075 . 16084) (punctuation 16074 . 16075) (punctuation 16073 . 16074) (symbol 16070 . 16073) (TYPENAME 16061 . 16069) (punctuation 16059 . 16060) (symbol 16056 . 16059) (CLASS 16050 . 16055) (punctuation 16048 . 16049) (symbol 16045 . 16048) (CLASS 16039 . 16044) (punctuation 16038 . 16039) (TEMPLATE 16029 . 16037) (punctuation 15614 . 15615) (punctuation 15613 . 15614) (punctuation 15612 . 15613) (symbol 15606 . 15612) (punctuation 15602 . 15603) (number 15600 . 15602) (punctuation 15598 . 15599) (semantic-list 15592 . 15597) (SIZEOF 15586 . 15592) (punctuation 15584 . 15585) (punctuation 15583 . 15584) (number 15581 . 15582) (punctuation 15579 . 15580) (punctuation 15578 . 15579) (semantic-list 15572 . 15577) (SIZEOF 15566 . 15572) (punctuation 15564 . 15565) (punctuation 15563 . 15564) (symbol 15555 . 15560) (punctuation 15554 . 15555) (punctuation 15553 . 15554) (punctuation 15552 . 15553) (symbol 15549 . 15552) (punctuation 15548 . 15549) (symbol 15539 . 15548) (punctuation 15538 . 15539) (punctuation 15537 . 15538) (symbol 15534 . 15537) (punctuation 15532 . 15533) (punctuation 15531 . 15532) (symbol 15525 . 15530) (punctuation 15524 . 15525) (punctuation 15523 . 15524) (punctuation 15522 . 15523) (symbol 15519 . 15522) (punctuation 15518 . 15519) (symbol 15507 . 15518) (punctuation 15506 . 15507) (punctuation 15505 . 15506) (symbol 15502 . 15505) (punctuation 15498 . 15499) (symbol 15489 . 15498) (punctuation 15488 . 15489) (punctuation 15487 . 15488) (symbol 15484 . 15487) (TYPENAME 15475 . 15483) (punctuation 15473 . 15474) (symbol 15470 . 15473) (CLASS 15464 . 15469) (punctuation 15463 . 15464) (TEMPLATE 15454 . 15462) (punctuation 15143 . 15144) (punctuation 15142 . 15143) (punctuation 15141 . 15142) (number 15140 . 15141) (punctuation 15138 . 15139) (punctuation 15137 . 15138) (semantic-list 15131 . 15136) (SIZEOF 15125 . 15131) (punctuation 15123 . 15124) (punctuation 15122 . 15123) (symbol 15116 . 15121) (punctuation 15115 . 15116) (punctuation 15114 . 15115) (punctuation 15113 . 15114) (symbol 15110 . 15113) (punctuation 15109 . 15110) (symbol 15097 . 15109) (punctuation 15093 . 15094) (punctuation 15092 . 15093) (symbol 15086 . 15091) (punctuation 15085 . 15086) (punctuation 15084 . 15085) (punctuation 15083 . 15084) (symbol 15080 . 15083) (punctuation 15079 . 15080) (symbol 15070 . 15079) (punctuation 15069 . 15070) (punctuation 15068 . 15069) (symbol 15065 . 15068) (punctuation 15063 . 15064) (punctuation 15062 . 15063) (symbol 15056 . 15061) (punctuation 15055 . 15056) (punctuation 15054 . 15055) (punctuation 15053 . 15054) (symbol 15050 . 15053) (punctuation 15049 . 15050) (symbol 15038 . 15049) (punctuation 15037 . 15038) (punctuation 15036 . 15037) (symbol 15033 . 15036) (punctuation 15029 . 15030) (symbol 15020 . 15029) (punctuation 15019 . 15020) (punctuation 15018 . 15019) (symbol 15015 . 15018) (TYPENAME 15006 . 15014) (punctuation 15004 . 15005) (symbol 15001 . 15004) (CLASS 14995 . 15000) (punctuation 14993 . 14994) (symbol 14990 . 14993) (CLASS 14984 . 14989) (punctuation 14983 . 14984) (TEMPLATE 14974 . 14982) (punctuation 13322 . 13323) (punctuation 13321 . 13322) (punctuation 13320 . 13321) (symbol 13315 . 13320) (punctuation 13314 . 13315) (punctuation 13313 . 13314) (punctuation 13312 . 13313) (symbol 13309 . 13312) (punctuation 13308 . 13309) (symbol 13296 . 13308) (punctuation 13291 . 13292) (symbol 13282 . 13291) (punctuation 13281 . 13282) (punctuation 13280 . 13281) (symbol 13277 . 13280) (TYPENAME 13268 . 13276) (punctuation 13266 . 13267) (symbol 13263 . 13266) (CLASS 13257 . 13262) (punctuation 13256 . 13257) (TEMPLATE 13247 . 13255) (punctuation 13040 . 13041) (punctuation 13039 . 13040) (punctuation 13038 . 13039) (symbol 13033 . 13038) (punctuation 13032 . 13033) (punctuation 13031 . 13032) (punctuation 13030 . 13031) (symbol 13027 . 13030) (punctuation 13026 . 13027) (symbol 13014 . 13026) (punctuation 13009 . 13010) (symbol 13000 . 13009) (punctuation 12999 . 13000) (punctuation 12998 . 12999) (symbol 12995 . 12998) (TYPENAME 12986 . 12994) (punctuation 12984 . 12985) (symbol 12981 . 12984) (CLASS 12975 . 12980) (punctuation 12974 . 12975) (TEMPLATE 12965 . 12973) (punctuation 12849 . 12850) (punctuation 12848 . 12849) (punctuation 12847 . 12848) (symbol 12842 . 12847) (punctuation 12841 . 12842) (punctuation 12840 . 12841) (punctuation 12839 . 12840) (symbol 12836 . 12839) (punctuation 12835 . 12836) (symbol 12823 . 12835) (punctuation 12821 . 12822) (punctuation 12820 . 12821) (symbol 12814 . 12819) (punctuation 12813 . 12814) (punctuation 12812 . 12813) (punctuation 12811 . 12812) (symbol 12808 . 12811) (punctuation 12807 . 12808) (symbol 12795 . 12807) (punctuation 12791 . 12792) (symbol 12782 . 12791) (punctuation 12781 . 12782) (punctuation 12780 . 12781) (symbol 12777 . 12780) (TYPENAME 12768 . 12776) (punctuation 12766 . 12767) (symbol 12763 . 12766) (CLASS 12757 . 12762) (punctuation 12755 . 12756) (symbol 12752 . 12755) (CLASS 12746 . 12751) (punctuation 12745 . 12746) (TEMPLATE 12736 . 12744) (punctuation 12632 . 12633) (punctuation 12631 . 12632) (punctuation 12630 . 12631) (symbol 12624 . 12630) (punctuation 12620 . 12621) (symbol 12615 . 12620) (punctuation 12614 . 12615) (punctuation 12613 . 12614) (punctuation 12612 . 12613) (punctuation 12611 . 12612) (symbol 12608 . 12611) (punctuation 12607 . 12608) (symbol 12593 . 12607) (punctuation 12592 . 12593) (punctuation 12591 . 12592) (symbol 12588 . 12591) (punctuation 12587 . 12588) (symbol 12575 . 12587) (punctuation 12571 . 12572) (punctuation 12570 . 12571) (symbol 12564 . 12569) (punctuation 12563 . 12564) (punctuation 12562 . 12563) (punctuation 12561 . 12562) (symbol 12558 . 12561) (punctuation 12557 . 12558) (symbol 12547 . 12557) (punctuation 12546 . 12547) (punctuation 12545 . 12546) (symbol 12542 . 12545) (punctuation 12538 . 12539) (symbol 12529 . 12538) (punctuation 12528 . 12529) (punctuation 12527 . 12528) (symbol 12524 . 12527) (TYPENAME 12515 . 12523) (punctuation 12513 . 12514) (symbol 12510 . 12513) (CLASS 12504 . 12509) (punctuation 12503 . 12504) (TEMPLATE 12495 . 12503) (punctuation 12319 . 12320) (punctuation 12318 . 12319) (punctuation 12317 . 12318) (symbol 12311 . 12317) (punctuation 12307 . 12308) (symbol 12302 . 12307) (punctuation 12301 . 12302) (punctuation 12300 . 12301) (punctuation 12299 . 12300) (punctuation 12298 . 12299) (CHAR 12294 . 12298) (CONST 12288 . 12293) (punctuation 12286 . 12287) (symbol 12283 . 12286) (punctuation 12282 . 12283) (symbol 12268 . 12282) (punctuation 12267 . 12268) (punctuation 12266 . 12267) (symbol 12263 . 12266) (punctuation 12262 . 12263) (punctuation 12258 . 12259) (punctuation 12257 . 12258) (semantic-list 12173 . 12256) (punctuation 12169 . 12170) (symbol 12160 . 12169) (punctuation 12159 . 12160) (punctuation 12158 . 12159) (symbol 12155 . 12158) (TYPENAME 12146 . 12154) (punctuation 12144 . 12145) (symbol 12141 . 12144) (CLASS 12135 . 12140) (punctuation 12134 . 12135) (TEMPLATE 12126 . 12134) (punctuation 11667 . 11668) (punctuation 11666 . 11667) (punctuation 11665 . 11666) (symbol 11660 . 11665) (punctuation 11659 . 11660) (punctuation 11658 . 11659) (punctuation 11657 . 11658) (symbol 11654 . 11657) (punctuation 11653 . 11654) (symbol 11641 . 11653) (punctuation 11639 . 11640) (punctuation 11638 . 11639) (symbol 11630 . 11635) (punctuation 11629 . 11630) (punctuation 11628 . 11629) (punctuation 11627 . 11628) (punctuation 11626 . 11627) (CHAR 11622 . 11626) (CONST 11616 . 11621) (punctuation 11614 . 11615) (symbol 11611 . 11614) (punctuation 11610 . 11611) (symbol 11596 . 11610) (punctuation 11595 . 11596) (punctuation 11594 . 11595) (symbol 11591 . 11594) (punctuation 11587 . 11588) (symbol 11578 . 11587) (punctuation 11577 . 11578) (punctuation 11576 . 11577) (symbol 11573 . 11576) (TYPENAME 11564 . 11572) (punctuation 11562 . 11563) (symbol 11559 . 11562) (CLASS 11553 . 11558) (punctuation 11551 . 11552) (symbol 11548 . 11551) (CLASS 11542 . 11547) (punctuation 11541 . 11542) (TEMPLATE 11532 . 11540) (symbol 11334 . 11343) (punctuation 11332 . 11333) (symbol 11331 . 11332) (CLASS 11325 . 11330) (punctuation 11324 . 11325) (TEMPLATE 11316 . 11324) (punctuation 6814 . 6815) (semantic-list 6811 . 6814) (punctuation 6809 . 6810) (semantic-list 6730 . 6809) (symbol 6722 . 6730) (semantic-list 6785 . 6808) (punctuation 6780 . 6781) (punctuation 6779 . 6780) (punctuation 6778 . 6779) (punctuation 6777 . 6778) (punctuation 6776 . 6777) (punctuation 6775 . 6776) (punctuation 6772 . 6773) (punctuation 6721 . 6722) (symbol 6716 . 6721) (punctuation 6715 . 6716) (punctuation 6714 . 6715) (symbol 6711 . 6714) (punctuation 6709 . 6710) (symbol 6697 . 6708) (STRUCT 6690 . 6696) (punctuation 6688 . 6689) (symbol 6686 . 6688) (punctuation 6684 . 6685) (punctuation 6683 . 6684) (punctuation 6682 . 6683) (CLASS 6677 . 6682) (punctuation 6676 . 6677) (TEMPLATE 6667 . 6675) (semantic-list 6607 . 6614) (punctuation 6602 . 6603) (punctuation 6601 . 6602) (punctuation 6600 . 6601) (punctuation 6599 . 6600) (punctuation 6598 . 6599) (punctuation 6597 . 6598) (punctuation 6594 . 6595) (punctuation 6568 . 6569) (punctuation 6567 . 6568) (semantic-list 6545 . 6562) (symbol 6531 . 6545) (punctuation 6557 . 6558) (punctuation 6556 . 6557) (punctuation 6555 . 6556) (symbol 6526 . 6530) (punctuation 6557 . 6558) (punctuation 6556 . 6557) (punctuation 6555 . 6556) (punctuation 6524 . 6525) (symbol 6522 . 6524) (punctuation 6520 . 6521) (punctuation 6519 . 6520) (punctuation 6518 . 6519) (TYPENAME 6510 . 6518) (punctuation 6509 . 6510) (TEMPLATE 6500 . 6508) (punctuation 6497 . 6498) (semantic-list 6376 . 6497) (punctuation 6374 . 6375) (punctuation 6373 . 6374) (punctuation 6372 . 6373) (punctuation 6371 . 6372) (symbol 6369 . 6371) (punctuation 6367 . 6368) (symbol 6363 . 6367) (punctuation 6362 . 6363) (symbol 6347 . 6362) (STRUCT 6340 . 6346) (punctuation 6338 . 6339) (symbol 6336 . 6338) (punctuation 6334 . 6335) (punctuation 6333 . 6334) (punctuation 6332 . 6333) (TYPENAME 6324 . 6332) (punctuation 6322 . 6323) (symbol 6318 . 6322) (TYPENAME 6309 . 6317) (punctuation 6308 . 6309) (TEMPLATE 6299 . 6307) (punctuation 6230 . 6231) (symbol 6228 . 6230) (punctuation 6226 . 6227) (punctuation 6225 . 6226) (punctuation 6224 . 6225) (TYPENAME 6216 . 6224) (punctuation 6215 . 6216) (TEMPLATE 6206 . 6214) (punctuation 5102 . 5103) (punctuation 5101 . 5102) (punctuation 5100 . 5101) (symbol 5097 . 5100) (punctuation 5091 . 5092) (symbol 5086 . 5091) (punctuation 5085 . 5086) (punctuation 5084 . 5085) (punctuation 5083 . 5084) (BOOL 5079 . 5083) (punctuation 5077 . 5078) (symbol 5074 . 5077) (punctuation 5073 . 5074) (symbol 5066 . 5073) (punctuation 5065 . 5066) (punctuation 5064 . 5065) (symbol 5061 . 5064) (punctuation 5051 . 5052) (punctuation 5050 . 5051) (symbol 5044 . 5049) (punctuation 5043 . 5044) (punctuation 5042 . 5043) (punctuation 5041 . 5042) (symbol 5038 . 5041) (punctuation 5036 . 5037) (symbol 5033 . 5036) (punctuation 5032 . 5033) (symbol 5025 . 5032) (punctuation 5024 . 5025) (punctuation 5023 . 5024) (symbol 5020 . 5023) (punctuation 5019 . 5020) (punctuation 5017 . 5018) (punctuation 5016 . 5017) (symbol 5010 . 5015) (punctuation 5009 . 5010) (punctuation 5008 . 5009) (punctuation 5007 . 5008) (symbol 5004 . 5007) (punctuation 5003 . 5004) (symbol 4990 . 5003) (punctuation 4989 . 4990) (punctuation 4988 . 4989) (symbol 4985 . 4988) (punctuation 4979 . 4980) (symbol 4970 . 4979) (punctuation 4969 . 4970) (punctuation 4968 . 4969) (symbol 4965 . 4968) (TYPENAME 4956 . 4964) (punctuation 4954 . 4955) (symbol 4951 . 4954) (CLASS 4945 . 4950) (punctuation 4943 . 4944) (symbol 4940 . 4943) (CLASS 4934 . 4939) (punctuation 4933 . 4934) (TEMPLATE 4924 . 4932) (punctuation 4864 . 4865) (punctuation 4863 . 4864) (punctuation 4862 . 4863) (punctuation 4861 . 4862) (symbol 4847 . 4861) (punctuation 4845 . 4846) (symbol 4842 . 4845) (punctuation 4841 . 4842) (symbol 4833 . 4841) (punctuation 4827 . 4828) (symbol 4822 . 4827) (punctuation 4821 . 4822) (punctuation 4820 . 4821) (punctuation 4819 . 4820) (BOOL 4815 . 4819) (punctuation 4813 . 4814) (symbol 4810 . 4813) (punctuation 4809 . 4810) (symbol 4802 . 4809) (punctuation 4801 . 4802) (punctuation 4800 . 4801) (symbol 4797 . 4800) (punctuation 4787 . 4788) (punctuation 4786 . 4787) (symbol 4780 . 4785) (punctuation 4779 . 4780) (punctuation 4778 . 4779) (punctuation 4777 . 4778) (symbol 4774 . 4777) (punctuation 4772 . 4773) (symbol 4769 . 4772) (punctuation 4768 . 4769) (symbol 4761 . 4768) (punctuation 4760 . 4761) (punctuation 4759 . 4760) (symbol 4756 . 4759) (punctuation 4755 . 4756) (punctuation 4753 . 4754) (punctuation 4752 . 4753) (symbol 4746 . 4751) (punctuation 4745 . 4746) (punctuation 4744 . 4745) (punctuation 4743 . 4744) (symbol 4740 . 4743) (punctuation 4739 . 4740) (symbol 4726 . 4739) (punctuation 4725 . 4726) (punctuation 4724 . 4725) (symbol 4721 . 4724) (punctuation 4715 . 4716) (symbol 4706 . 4715) (punctuation 4705 . 4706) (punctuation 4704 . 4705) (symbol 4701 . 4704) (TYPENAME 4692 . 4700) (punctuation 4690 . 4691) (symbol 4687 . 4690) (CLASS 4681 . 4686) (punctuation 4679 . 4680) (symbol 4676 . 4679) (CLASS 4670 . 4675) (punctuation 4669 . 4670) (TEMPLATE 4660 . 4668) (punctuation 4202 . 4203) (punctuation 4189 . 4190) (punctuation 4188 . 4189) (punctuation 4187 . 4188) (symbol 4184 . 4187) (punctuation 4178 . 4179) (symbol 4173 . 4178) (punctuation 4172 . 4173) (punctuation 4171 . 4172) (punctuation 4170 . 4171) (symbol 4166 . 4170) (punctuation 4165 . 4166) (punctuation 4164 . 4165) (punctuation 4163 . 4164) (symbol 4160 . 4163) (punctuation 4159 . 4160) (symbol 4154 . 4159) (punctuation 4153 . 4154) (punctuation 4152 . 4153) (symbol 4149 . 4152) (TYPENAME 4140 . 4148) (punctuation 4138 . 4139) (symbol 4135 . 4138) (punctuation 4134 . 4135) (symbol 4127 . 4134) (punctuation 4126 . 4127) (punctuation 4125 . 4126) (symbol 4122 . 4125) (punctuation 4116 . 4117) (symbol 4107 . 4116) (punctuation 4106 . 4107) (punctuation 4105 . 4106) (symbol 4102 . 4105) (TYPENAME 4093 . 4101) (punctuation 4091 . 4092) (symbol 4088 . 4091) (CLASS 4082 . 4087) (punctuation 4080 . 4081) (symbol 4077 . 4080) (CLASS 4071 . 4076) (punctuation 4070 . 4071) (TEMPLATE 4061 . 4069) (punctuation 4012 . 4013) (punctuation 3996 . 3997) (punctuation 3995 . 3996) (punctuation 3994 . 3995) (punctuation 3993 . 3994) (symbol 3979 . 3993) (punctuation 3977 . 3978) (symbol 3974 . 3977) (punctuation 3973 . 3974) (symbol 3965 . 3973) (punctuation 3959 . 3960) (symbol 3954 . 3959) (punctuation 3953 . 3954) (punctuation 3952 . 3953) (punctuation 3951 . 3952) (symbol 3947 . 3951) (punctuation 3946 . 3947) (punctuation 3945 . 3946) (punctuation 3944 . 3945) (symbol 3941 . 3944) (punctuation 3940 . 3941) (symbol 3935 . 3940) (punctuation 3934 . 3935) (punctuation 3933 . 3934) (symbol 3930 . 3933) (TYPENAME 3921 . 3929) (punctuation 3919 . 3920) (symbol 3916 . 3919) (punctuation 3915 . 3916) (symbol 3908 . 3915) (punctuation 3907 . 3908) (punctuation 3906 . 3907) (symbol 3903 . 3906) (punctuation 3897 . 3898) (symbol 3888 . 3897) (punctuation 3887 . 3888) (punctuation 3886 . 3887) (symbol 3883 . 3886) (TYPENAME 3874 . 3882) (punctuation 3872 . 3873) (symbol 3869 . 3872) (CLASS 3863 . 3868) (punctuation 3861 . 3862) (symbol 3858 . 3861) (CLASS 3852 . 3857) (punctuation 3851 . 3852) (TEMPLATE 3842 . 3850) (USING 1837 . 1842) (punctuation 1784 . 1785) (semantic-list 1431 . 1784) (CHAR 1426 . 1430) (UNSIGNED 1417 . 1425) (punctuation 1415 . 1416) (symbol 1400 . 1414) (CLASS 1394 . 1399) (ENUM 1389 . 1393) (symbol 759 . 763) (symbol 752 . 758) (punctuation 751 . 752) (symbol 759 . 763) (symbol 752 . 758) (punctuation 751 . 752)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/Conv.h" include (:system-flag t) nil [597 620])
            ("array" include (:system-flag t) nil [621 637])
            ("folly" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("unnamed" type
                               (:members 
                                  ( ("findFirstNonDigit" function
                                       (:pointer 1
                                        :typemodifiers ("inline")
                                        :constant-flag t
                                        :arguments 
                                          ( ("b" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [1122 1136])
                                            ("e" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [1137 1151]))                                          
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [1085 1284])
                                    ("MaxString" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:pointer 1
                                                :typemodifiers ("static")
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol classsubparts) [1382 1413]))                                          )
                                        (reparse-symbol namespacesubparts) [1342 1416])
                                    ("MaxString::value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "\"255\""
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [1418 1482])
                                    ("MaxString::value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "\"65535\""
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [1483 1550])
                                    ("MaxString::value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "\"4294967295\""
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [1551 1623])
                                    ("MaxString::value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "\"18446744073709551615\""
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [1735 1824])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [1832 1972])
                                    ("MaxString::value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :default-value "\"18446744073709551615\""
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [1973 2067])
                                    ("static_assert" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [2068 2218])
                                    ("OOR" variable
                                       (:default-value "10000"
                                        :type ("int32_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [2911 2931])
                                    ("shift1" variable
                                       (:dereference 1
                                        :default-value "{
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 0-9
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  10
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  20
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  30
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, 0,         //  40
  1, 2, 3, 4, 5, 6, 7, 8, 9, OOR, OOR,
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  60
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  70
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  80
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  90
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 100
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 110
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 120
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 130
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 140
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 150
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 160
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 170
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 180
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 190
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 200
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 210
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 220
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 230
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 240
  OOR, OOR, OOR, OOR, OOR, OOR                       // 250
}"
                                        :type ("uint16_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [2961 4524])
                                    ("shift10" variable
                                       (:dereference 1
                                        :default-value "{
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 0-9
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  10
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  20
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  30
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, 0,         //  40
  10, 20, 30, 40, 50, 60, 70, 80, 90, OOR, OOR,
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  60
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  70
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  80
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  90
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 100
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 110
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 120
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 130
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 140
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 150
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 160
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 170
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 180
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 190
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 200
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 210
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 220
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 230
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 240
  OOR, OOR, OOR, OOR, OOR, OOR                       // 250
}"
                                        :type ("uint16_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [4554 6127])
                                    ("shift100" variable
                                       (:dereference 1
                                        :default-value "{
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 0-9
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  10
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  20
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  30
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, 0,         //  40
  100, 200, 300, 400, 500, 600, 700, 800, 900, OOR, OOR,
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  60
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  70
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  80
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  90
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 100
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 110
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 120
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 130
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 140
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 150
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 160
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 170
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 180
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 190
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 200
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 210
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 220
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 230
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 240
  OOR, OOR, OOR, OOR, OOR, OOR                       // 250
}"
                                        :type ("uint16_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [6157 7740])
                                    ("shift1000" variable
                                       (:dereference 1
                                        :default-value "{
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 0-9
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  10
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  20
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  30
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, 0,         //  40
  1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, OOR, OOR,
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  60
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  70
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  80
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  //  90
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 100
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 110
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 120
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 130
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 140
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 150
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 160
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 170
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 180
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 190
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 200
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 210
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 220
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 230
  OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR, OOR,  // 240
  OOR, OOR, OOR, OOR, OOR, OOR                       // 250
}"
                                        :type ("uint16_t" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [7770 9363])
                                    ("ErrorString" type
                                       (:members 
                                          ( ("string" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol classsubparts) [9388 9407])
                                            ("quote" variable (:type "bool") (reparse-symbol classsubparts) [9410 9421]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [9365 9424])
                                    ("kErrorStrings" variable (:type "int") (reparse-symbol namespacesubparts) [9589 10366])
                                    ("tolower_ascii" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("in" variable (:type "char") (reparse-symbol arg-sub-list) [10664 10672]))                                          
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [10638 10738])
                                    ("bool_str_cmp" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("b" variable
                                               (:pointer 2
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [10765 10780])
                                            ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10781 10792])
                                            ("value" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [10793 10811]))                                          
                                        :type "bool")
                                        (reparse-symbol namespacesubparts) [10740 11142]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [677 11145])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [15624 15633])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [15723 15732])
                            ("SignedValueHandler" type
                               (:prototype t
                                :type "class")
                                (reparse-symbol namespacesubparts) [15934 15959])
                            ("SignedValueHandler" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [16020 16027])
                                    ("init" function
                                       (:arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [16050 16062])
                                            ("" variable (:type ("b" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16063 16065]))                                          
                                        :type ("ConversionCode" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [16030 16326])
                                    ("overflow" function (:type ("ConversionCode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16330 16476])
                                    ("finalize" function
                                       (:template 
                                          ( ("U" type (:type "class") nil nil))                                          
                                        :type ("Expected" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("ConversionCode" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("value" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16541 16549]))                                          )
                                        (reparse-symbol classsubparts) [16480 16871])
                                    ("private" label nil (reparse-symbol classsubparts) [16874 16882])
                                    ("negative_" variable (:type "bool") (reparse-symbol classsubparts) [16885 16900]))                                  
                                :template-specifier 
                                  ( ("T" type nil nil nil)
                                    ("true" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [15961 16903])
                            ("SignedValueHandler" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [17023 17030])
                                    ("init" function
                                       (:arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :constant-flag t
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [17053 17065]))                                          
                                        :type ("ConversionCode" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17033 17108])
                                    ("overflow" function (:type ("ConversionCode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17112 17189])
                                    ("finalize" function
                                       (:arguments 
                                          ( ("value" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17230 17238]))                                          
                                        :type ("Expected" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("ConversionCode" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [17193 17262]))                                  
                                :template-specifier 
                                  ( ("T" type nil nil nil)
                                    ("false" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [16963 17265])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [20235 20244])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [20350 20359])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [20469 20478])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [20573 20582])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [20694 20703])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [20794 20803])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [20911 20920])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [21013 21022])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [21132 21141])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [21244 21253])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [21364 21373])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23020 23029])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23129 23138])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23242 23251])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23340 23349])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23450 23459])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23544 23553])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23655 23664])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23751 23760])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23864 23873])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [23970 23979])
                            ("noexcept" variable (:type "int") (reparse-symbol namespacesubparts) [24088 24097]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [657 24351])
                    ("makeConversionError" function
                       (:arguments 
                          ( ("code" variable (:type ("ConversionCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24409 24429])
                            ("input" variable (:type ("StringPiece" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24430 24448]))                          
                        :type ("ConversionError" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [24373 25072]))                  
                :type "namespace")
                nil [639 25075]))          
      :file "Conv.cpp"
      :pointmax 25095
      :fsize 25094
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((semantic-list 24069 . 24087) (punctuation 24068 . 24069) (LONG 24064 . 24068) (LONG 24059 . 24063) (UNSIGNED 24050 . 24058) (punctuation 24049 . 24050) (symbol 24034 . 24049) (punctuation 24032 . 24033) (symbol 24018 . 24032) (punctuation 24016 . 24017) (LONG 24012 . 24016) (LONG 24007 . 24011) (UNSIGNED 23998 . 24006) (punctuation 23997 . 23998) (symbol 23989 . 23997) (TEMPLATE 23980 . 23988) (semantic-list 23946 . 23969) (punctuation 23945 . 23946) (LONG 23941 . 23945) (LONG 23936 . 23940) (punctuation 23935 . 23936) (symbol 23920 . 23935) (punctuation 23918 . 23919) (symbol 23904 . 23918) (punctuation 23902 . 23903) (LONG 23898 . 23902) (LONG 23893 . 23897) (punctuation 23892 . 23893) (symbol 23884 . 23892) (TEMPLATE 23875 . 23883) (semantic-list 23840 . 23863) (punctuation 23839 . 23840) (LONG 23835 . 23839) (UNSIGNED 23826 . 23834) (punctuation 23825 . 23826) (symbol 23810 . 23825) (punctuation 23808 . 23809) (symbol 23794 . 23808) (punctuation 23792 . 23793) (LONG 23788 . 23792) (UNSIGNED 23779 . 23787) (punctuation 23778 . 23779) (symbol 23770 . 23778) (TEMPLATE 23761 . 23769) (semantic-list 23727 . 23750) (punctuation 23726 . 23727) (LONG 23722 . 23726) (punctuation 23721 . 23722) (symbol 23706 . 23721) (punctuation 23704 . 23705) (symbol 23690 . 23704) (punctuation 23688 . 23689) (LONG 23684 . 23688) (punctuation 23683 . 23684) (symbol 23675 . 23683) (TEMPLATE 23666 . 23674) (semantic-list 23631 . 23654) (punctuation 23630 . 23631) (INT 23627 . 23630) (UNSIGNED 23618 . 23626) (punctuation 23617 . 23618) (symbol 23602 . 23617) (punctuation 23600 . 23601) (symbol 23586 . 23600) (punctuation 23584 . 23585) (INT 23581 . 23584) (UNSIGNED 23572 . 23580) (punctuation 23571 . 23572) (symbol 23563 . 23571) (TEMPLATE 23554 . 23562) (semantic-list 23520 . 23543) (punctuation 23519 . 23520) (INT 23516 . 23519) (punctuation 23515 . 23516) (symbol 23500 . 23515) (punctuation 23498 . 23499) (symbol 23484 . 23498) (punctuation 23482 . 23483) (INT 23479 . 23482) (punctuation 23478 . 23479) (symbol 23470 . 23478) (TEMPLATE 23461 . 23469) (semantic-list 23431 . 23449) (punctuation 23430 . 23431) (SHORT 23425 . 23430) (UNSIGNED 23416 . 23424) (punctuation 23415 . 23416) (symbol 23400 . 23415) (punctuation 23398 . 23399) (symbol 23384 . 23398) (punctuation 23382 . 23383) (SHORT 23377 . 23382) (UNSIGNED 23368 . 23376) (punctuation 23367 . 23368) (symbol 23359 . 23367) (TEMPLATE 23350 . 23358) (semantic-list 23316 . 23339) (punctuation 23315 . 23316) (SHORT 23310 . 23315) (punctuation 23309 . 23310) (symbol 23294 . 23309) (punctuation 23292 . 23293) (symbol 23278 . 23292) (punctuation 23276 . 23277) (SHORT 23271 . 23276) (punctuation 23270 . 23271) (symbol 23262 . 23270) (TEMPLATE 23253 . 23261) (semantic-list 23218 . 23241) (punctuation 23217 . 23218) (CHAR 23213 . 23217) (UNSIGNED 23204 . 23212) (punctuation 23203 . 23204) (symbol 23188 . 23203) (punctuation 23186 . 23187) (symbol 23172 . 23186) (punctuation 23170 . 23171) (CHAR 23166 . 23170) (UNSIGNED 23157 . 23165) (punctuation 23156 . 23157) (symbol 23148 . 23156) (TEMPLATE 23139 . 23147) (semantic-list 23105 . 23128) (punctuation 23104 . 23105) (CHAR 23100 . 23104) (SIGNED 23093 . 23099) (punctuation 23092 . 23093) (symbol 23077 . 23092) (punctuation 23075 . 23076) (symbol 23061 . 23075) (punctuation 23059 . 23060) (CHAR 23055 . 23059) (SIGNED 23048 . 23054) (punctuation 23047 . 23048) (symbol 23039 . 23047) (TEMPLATE 23030 . 23038) (semantic-list 22996 . 23019) (punctuation 22995 . 22996) (CHAR 22991 . 22995) (punctuation 22990 . 22991) (symbol 22975 . 22990) (punctuation 22973 . 22974) (symbol 22959 . 22973) (punctuation 22957 . 22958) (CHAR 22953 . 22957) (punctuation 22952 . 22953) (symbol 22944 . 22952) (TEMPLATE 22935 . 22943) (semantic-list 21868 . 22933) (symbol 21859 . 21867) (semantic-list 21840 . 21858) (symbol 21825 . 21840) (punctuation 21823 . 21824) (symbol 21809 . 21823) (punctuation 21807 . 21808) (symbol 21804 . 21807) (punctuation 21803 . 21804) (symbol 21795 . 21803) (punctuation 21793 . 21794) (symbol 21790 . 21793) (CLASS 21784 . 21789) (punctuation 21783 . 21784) (TEMPLATE 21774 . 21782) (semantic-list 21337 . 21363) (punctuation 21336 . 21337) (LONG 21332 . 21336) (LONG 21327 . 21331) (UNSIGNED 21318 . 21326) (punctuation 21317 . 21318) (symbol 21308 . 21317) (punctuation 21306 . 21307) (symbol 21292 . 21306) (punctuation 21290 . 21291) (LONG 21286 . 21290) (LONG 21281 . 21285) (UNSIGNED 21272 . 21280) (punctuation 21271 . 21272) (symbol 21263 . 21271) (TEMPLATE 21254 . 21262) (semantic-list 21208 . 21243) (punctuation 21207 . 21208) (LONG 21203 . 21207) (LONG 21198 . 21202) (punctuation 21197 . 21198) (symbol 21188 . 21197) (punctuation 21186 . 21187) (symbol 21172 . 21186) (punctuation 21170 . 21171) (LONG 21166 . 21170) (LONG 21161 . 21165) (punctuation 21160 . 21161) (symbol 21152 . 21160) (TEMPLATE 21143 . 21151) (semantic-list 21096 . 21131) (punctuation 21095 . 21096) (LONG 21091 . 21095) (UNSIGNED 21082 . 21090) (punctuation 21081 . 21082) (symbol 21072 . 21081) (punctuation 21070 . 21071) (symbol 21056 . 21070) (punctuation 21054 . 21055) (LONG 21050 . 21054) (UNSIGNED 21041 . 21049) (punctuation 21040 . 21041) (symbol 21032 . 21040) (TEMPLATE 21023 . 21031) (semantic-list 20977 . 21012) (punctuation 20976 . 20977) (LONG 20972 . 20976) (punctuation 20971 . 20972) (symbol 20962 . 20971) (punctuation 20960 . 20961) (symbol 20946 . 20960) (punctuation 20944 . 20945) (LONG 20940 . 20944) (punctuation 20939 . 20940) (symbol 20931 . 20939) (TEMPLATE 20922 . 20930) (semantic-list 20875 . 20910) (punctuation 20874 . 20875) (INT 20871 . 20874) (UNSIGNED 20862 . 20870) (punctuation 20861 . 20862) (symbol 20852 . 20861) (punctuation 20850 . 20851) (symbol 20836 . 20850) (punctuation 20834 . 20835) (INT 20831 . 20834) (UNSIGNED 20822 . 20830) (punctuation 20821 . 20822) (symbol 20813 . 20821) (TEMPLATE 20804 . 20812) (semantic-list 20758 . 20793) (punctuation 20757 . 20758) (INT 20754 . 20757) (punctuation 20753 . 20754) (symbol 20744 . 20753) (punctuation 20742 . 20743) (symbol 20728 . 20742) (punctuation 20726 . 20727) (INT 20723 . 20726) (punctuation 20722 . 20723) (symbol 20714 . 20722) (TEMPLATE 20705 . 20713) (semantic-list 20658 . 20693) (punctuation 20657 . 20658) (SHORT 20652 . 20657) (UNSIGNED 20643 . 20651) (punctuation 20642 . 20643) (symbol 20633 . 20642) (punctuation 20631 . 20632) (symbol 20617 . 20631) (punctuation 20615 . 20616) (SHORT 20610 . 20615) (UNSIGNED 20601 . 20609) (punctuation 20600 . 20601) (symbol 20592 . 20600) (TEMPLATE 20583 . 20591) (semantic-list 20537 . 20572) (punctuation 20536 . 20537) (SHORT 20531 . 20536) (punctuation 20530 . 20531) (symbol 20521 . 20530) (punctuation 20519 . 20520) (symbol 20505 . 20519) (punctuation 20503 . 20504) (SHORT 20498 . 20503) (punctuation 20497 . 20498) (symbol 20489 . 20497) (TEMPLATE 20480 . 20488) (semantic-list 20433 . 20468) (punctuation 20432 . 20433) (CHAR 20428 . 20432) (UNSIGNED 20419 . 20427) (punctuation 20418 . 20419) (symbol 20409 . 20418) (punctuation 20407 . 20408) (symbol 20393 . 20407) (punctuation 20391 . 20392) (CHAR 20387 . 20391) (UNSIGNED 20378 . 20386) (punctuation 20377 . 20378) (symbol 20369 . 20377) (TEMPLATE 20360 . 20368) (semantic-list 20314 . 20349) (punctuation 20313 . 20314) (CHAR 20309 . 20313) (SIGNED 20302 . 20308) (punctuation 20301 . 20302) (symbol 20292 . 20301) (punctuation 20290 . 20291) (symbol 20276 . 20290) (punctuation 20274 . 20275) (CHAR 20270 . 20274) (SIGNED 20263 . 20269) (punctuation 20262 . 20263) (symbol 20254 . 20262) (TEMPLATE 20245 . 20253) (semantic-list 20199 . 20234) (punctuation 20198 . 20199) (CHAR 20194 . 20198) (punctuation 20193 . 20194) (symbol 20184 . 20193) (punctuation 20182 . 20183) (symbol 20168 . 20182) (punctuation 20166 . 20167) (CHAR 20162 . 20166) (punctuation 20161 . 20162) (symbol 20153 . 20161) (TEMPLATE 20144 . 20152) (semantic-list 17707 . 20142) (symbol 17698 . 17706) (semantic-list 17652 . 17697) (symbol 17643 . 17652) (punctuation 17641 . 17642) (symbol 17627 . 17641) (punctuation 17625 . 17626) (symbol 17622 . 17625) (punctuation 17621 . 17622) (symbol 17613 . 17621) (INLINE 17606 . 17612) (punctuation 17604 . 17605) (symbol 17601 . 17604) (CLASS 17595 . 17600) (punctuation 17594 . 17595) (TEMPLATE 17585 . 17593) (punctuation 17064 . 17065) (punctuation 16061 . 16062) (punctuation 15932 . 15933) (symbol 15927 . 15932) (punctuation 15926 . 15927) (punctuation 15925 . 15926) (punctuation 15924 . 15925) (symbol 15923 . 15924) (punctuation 15922 . 15923) (symbol 15913 . 15922) (punctuation 15912 . 15913) (punctuation 15911 . 15912) (symbol 15908 . 15911) (punctuation 15906 . 15907) (symbol 15897 . 15905) (BOOL 15892 . 15896) (punctuation 15890 . 15891) (symbol 15889 . 15890) (TYPENAME 15880 . 15888) (punctuation 15879 . 15880) (TEMPLATE 15870 . 15878) (semantic-list 15699 . 15722) (punctuation 15698 . 15699) (DOUBLE 15692 . 15698) (punctuation 15691 . 15692) (symbol 15676 . 15691) (punctuation 15674 . 15675) (symbol 15660 . 15674) (punctuation 15658 . 15659) (DOUBLE 15652 . 15658) (punctuation 15651 . 15652) (symbol 15643 . 15651) (TEMPLATE 15634 . 15642) (semantic-list 15600 . 15623) (punctuation 15599 . 15600) (FLOAT 15594 . 15599) (punctuation 15593 . 15594) (symbol 15578 . 15593) (punctuation 15576 . 15577) (symbol 15562 . 15576) (punctuation 15560 . 15561) (FLOAT 15555 . 15560) (punctuation 15554 . 15555) (symbol 15546 . 15554) (TEMPLATE 15537 . 15545) (semantic-list 12946 . 15535) (symbol 12937 . 12945) (semantic-list 12918 . 12936) (symbol 12903 . 12918) (punctuation 12901 . 12902) (symbol 12887 . 12901) (punctuation 12885 . 12886) (symbol 12882 . 12885) (punctuation 12881 . 12882) (symbol 12873 . 12881) (punctuation 12871 . 12872) (symbol 12868 . 12871) (CLASS 12862 . 12867) (punctuation 12861 . 12862) (TEMPLATE 12852 . 12860) (semantic-list 11240 . 12713) (symbol 11231 . 11239) (semantic-list 11212 . 11230) (symbol 11201 . 11212) (punctuation 11199 . 11200) (symbol 11185 . 11199) (punctuation 11183 . 11184) (BOOL 11179 . 11183) (punctuation 11178 . 11179) (symbol 11170 . 11178) (punctuation 10502 . 10503) (punctuation 10501 . 10502) (number 10498 . 10501) (punctuation 10496 . 10497) (punctuation 10495 . 10496) (string 10491 . 10494) (punctuation 10489 . 10490) (punctuation 10488 . 10489) (number 10485 . 10487) (punctuation 10483 . 10484) (punctuation 10482 . 10483) (string 10478 . 10481) (punctuation 10476 . 10477) (punctuation 10475 . 10476) (number 10472 . 10474) (punctuation 10470 . 10471) (punctuation 10469 . 10470) (string 10465 . 10468) (punctuation 10463 . 10464) (punctuation 10462 . 10463) (number 10459 . 10461) (punctuation 10457 . 10458) (punctuation 10456 . 10457) (string 10452 . 10455) (punctuation 10450 . 10451) (BOOL 10446 . 10450) (punctuation 10445 . 10446) (symbol 10428 . 10445) (punctuation 10422 . 10423) (punctuation 10421 . 10422) (symbol 10418 . 10421) (punctuation 10416 . 10417) (symbol 10408 . 10415) (USING 10402 . 10407) (punctuation 9583 . 9584) (semantic-list 9550 . 9583) (punctuation 9549 . 9550) (symbol 9543 . 9549) (punctuation 9542 . 9543) (punctuation 9541 . 9542) (symbol 9538 . 9541) (punctuation 9537 . 9538) (symbol 9526 . 9537) (punctuation 9520 . 9521) (symbol 9509 . 9520) (punctuation 9503 . 9504) (symbol 9498 . 9503) (punctuation 9497 . 9498) (punctuation 9496 . 9497) (symbol 9493 . 9496) (CONST 9487 . 9492) (symbol 9477 . 9486) (symbol 7760 . 7769) (semantic-list 7755 . 7759) (symbol 7742 . 7755) (number 7756 . 7758) (symbol 6147 . 6156) (semantic-list 6142 . 6146) (symbol 6129 . 6142) (number 6143 . 6145) (symbol 4544 . 4553) (semantic-list 4539 . 4543) (symbol 4526 . 4539) (number 4540 . 4542) (symbol 2951 . 2960) (semantic-list 2946 . 2950) (symbol 2933 . 2946) (number 2947 . 2949) (symbol 2901 . 2910) (string 2198 . 2216) (string 2129 . 2183) (number 2112 . 2113) (punctuation 2110 . 2111) (punctuation 2109 . 2110) (semantic-list 2088 . 2108) (SIZEOF 2082 . 2088) (string 1953 . 1970) (string 1888 . 1938) (number 1871 . 1872) (punctuation 1869 . 1870) (punctuation 1868 . 1869) (semantic-list 1852 . 1867) (SIZEOF 1846 . 1852))))
  :file "!Users!ric!Downloads!trunk!thirdparty!folly!folly!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
