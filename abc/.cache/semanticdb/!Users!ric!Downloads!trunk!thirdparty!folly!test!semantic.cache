;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("array" include (:system-flag t) nil [598 614])
            ("cstdarg" include (:system-flag t) nil [615 633])
            ("folly/Function.h" include (:system-flag t) nil [635 662])
            ("folly/Memory.h" include (:system-flag t) nil [664 689])
            ("folly/portability/GTest.h" include (:system-flag t) nil [690 726])
            ("folly::Function" using (:type ("folly::Function" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [728 750])
            ("unnamed" type
               (:members 
                  ( ("func_int_int_add_25" function
                       (:arguments 
                          ( ("x" variable (:type "int") (reparse-symbol arg-sub-list) [788 794]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [764 815])
                    ("func_int_int_add_111" function
                       (:arguments 
                          ( ("x" variable (:type "int") (reparse-symbol arg-sub-list) [841 847]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [816 869])
                    ("floatMult" function
                       (:arguments 
                          ( ("a" variable (:type "float") (reparse-symbol arg-sub-list) [886 894])
                            ("b" variable (:type "float") (reparse-symbol arg-sub-list) [895 903]))                          
                        :type "float")
                        (reparse-symbol namespacesubparts) [870 923])
                    ("Functor" type
                       (:template 
                          ( ("T" type (:type "class") nil nil)
                            ("size_t" type (:typevar "S") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("data" variable
                               (:default-value "{{0}}"
                                :type ("std::array" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil)
                                          ("S" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [973 1003])
                            ("()" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1118 1131]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1098 1167])
                            ("()" function
                               (:operator-flag t
                                :arguments 
                                  ( ("index" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1183 1196])
                                    ("value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1197 1212]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1170 1294]))                          )
                        (reparse-symbol namespacesubparts) [925 1297])
                    ("deduceArgs" function
                       (:arguments 
                          ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1357 1366])
                            ("" variable (:type ("Ret" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1366 1378]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1341 1383])
                    ("CallableButNotCopyable" type
                       (:members 
                          ( ("CallableButNotCopyable" function
                               (:constructor-flag t
                                :type ("CallableButNotCopyable" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [1419 1446])
                            ("()" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1768 1774])
                                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [1774 1778]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1752 1787]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1385 1790]))                  
                :type "namespace")
                nil [752 1793])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1984 2003])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2003 2012])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [2012 2018])
                    ("" variable (:type ("CallableButNotCopyable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2021 2044])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2046 2052]))                  
                :type "int")
                nil [1964 2061])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2082 2104])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2104 2113])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [2113 2119])
                    ("" variable
                       (:reference 1
                        :type ("CallableButNotCopyable" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2122 2146])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2148 2154]))                  
                :type "int")
                nil [2062 2163])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2184 2206])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2206 2215])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [2215 2221])
                    ("" variable (:type ("CallableButNotCopyable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2230 2253])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2264 2270]))                  
                :type "int")
                nil [2164 2279])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2300 2322])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2322 2331])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [2331 2337])
                    ("" variable
                       (:reference 1
                        :type ("CallableButNotCopyable" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2346 2370])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2381 2387]))                  
                :type "int")
                nil [2280 2396])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2418 2437])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2437 2446])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [2446 2452])
                    ("" variable (:type ("CallableButNotCopyable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2455 2478])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2480 2486]))                  
                :type "int")
                nil [2398 2495])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2516 2535])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2535 2544])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [2544 2550])
                    ("" variable
                       (:reference 1
                        :type ("CallableButNotCopyable" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2553 2577])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2579 2585]))                  
                :type "int")
                nil [2496 2594])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2615 2634])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2634 2643])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [2643 2649])
                    ("" variable (:type ("CallableButNotCopyable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2658 2681])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2683 2689]))                  
                :type "int")
                nil [2595 2698])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2719 2738])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2738 2747])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [2747 2753])
                    ("" variable
                       (:reference 1
                        :type ("CallableButNotCopyable" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2762 2786])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2788 2794]))                  
                :type "int")
                nil [2699 2803])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2824 2846])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2846 2855])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2855 2863])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2866 2875])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2875 2883])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2893 2899]))                  
                :type "int")
                nil [2805 2908])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2929 2951])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2951 2960])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2960 2968])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2977 2986])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [2986 2994])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2998 3004]))                  
                :type "int")
                nil [2909 3013])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3033 3055])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3055 3064])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3064 3074])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3077 3086])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [3086 3096])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3115 3121]))                  
                :type "int")
                nil [3014 3130])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3151 3173])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3173 3182])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3182 3192])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3201 3210])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [3210 3220])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3233 3239]))                  
                :type "int")
                nil [3131 3248])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3269 3291])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3291 3300])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3300 3308])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3311 3320])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3320 3328])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3348 3354]))                  
                :type "int")
                nil [3249 3363])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3384 3406])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3406 3415])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3415 3423])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3432 3441])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3441 3449])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3463 3469]))                  
                :type "int")
                nil [3364 3478])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3499 3521])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3521 3530])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3530 3540])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3543 3552])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [3552 3562])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3582 3588]))                  
                :type "int")
                nil [3479 3597])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3618 3640])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3640 3649])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3649 3659])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3668 3677])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [3677 3687])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3701 3707]))                  
                :type "int")
                nil [3598 3716])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3737 3756])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3756 3765])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3765 3773])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3776 3785])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3785 3793])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3803 3809]))                  
                :type "int")
                nil [3718 3818])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3839 3858])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3858 3867])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3867 3875])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3884 3893])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3893 3901])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3905 3911]))                  
                :type "int")
                nil [3819 3920])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3940 3959])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3959 3968])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [3968 3978])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3981 3990])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [3990 4000])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4010 4016]))                  
                :type "int")
                nil [3921 4025])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4046 4065])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4065 4074])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4074 4084])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4093 4102])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [4102 4112])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4125 4131]))                  
                :type "int")
                nil [4026 4140])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4161 4180])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4180 4189])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4189 4197])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4200 4209])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4209 4217])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4228 4234]))                  
                :type "int")
                nil [4141 4243])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4264 4283])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4283 4292])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4292 4300])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4309 4318])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4318 4326])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4331 4337]))                  
                :type "int")
                nil [4244 4346])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4367 4386])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4386 4395])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4395 4405])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4408 4417])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [4417 4427])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4447 4453]))                  
                :type "int")
                nil [4347 4462])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4483 4502])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4502 4511])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4511 4521])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4530 4539])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [4539 4549])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4563 4569]))                  
                :type "int")
                nil [4463 4578])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_nothrow_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4599 4629])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4638 4647])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4647 4655])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4666 4675])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4675 4683])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4693 4699]))                  
                :type "int")
                nil [4580 4708])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_nothrow_constructible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4729 4759])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4768 4777])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4777 4787])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4798 4807])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [4807 4817])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4827 4833]))                  
                :type "int")
                nil [4709 4842])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_nothrow_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4862 4889])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4889 4898])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4898 4906])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4909 4918])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [4918 4926])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4945 4951]))                  
                :type "int")
                nil [4843 4960])
            ("static_assert" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("std::is_nothrow_assignable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4981 5008])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5017 5026])
                    ("" variable (:type "int") (reparse-symbol arg-sub-list) [5026 5036])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5047 5056])
                    ("" variable (:type "short") (reparse-symbol arg-sub-list) [5056 5066])
                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5076 5082]))                  
                :type "int")
                nil [4961 5091])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5212 5221])
                    ("" variable (:type ("InvokeFunctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5222 5236]))                  
                :type "int")
                nil [5207 5614])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5621 5630])
                    ("" variable (:type ("InvokeReference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5631 5647]))                  
                :type "int")
                nil [5616 6005])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6104 6113])
                    ("" variable (:type ("Emptiness_T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6114 6126]))                  
                :type "int")
                nil [6099 6798])
            ("swap_test" function
               (:template 
                  ( ("bool" type (:typevar "UseSwapMethod") nil nil))                  
                :type "void")
                nil [6887 7774])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7780 7789])
                    ("" variable (:type ("SwapMethod" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7790 7801]))                  
                :type "int")
                nil [7775 7826])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7832 7841])
                    ("" variable (:type ("SwapFunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7842 7855]))                  
                :type "int")
                nil [7827 7881])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7975 7984])
                    ("" variable (:type ("Bind" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7985 7990]))                  
                :type "int")
                nil [7970 8273])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8380 8389])
                    ("" variable (:type ("NonCopyableLambda" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8390 8408]))                  
                :type "int")
                nil [8375 8939])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9046 9055])
                    ("" variable (:type ("OverloadedFunctor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9056 9074]))                  
                :type "int")
                nil [9041 12357])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12453 12462])
                    ("" variable (:type ("Lambda" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12463 12470]))                  
                :type "int")
                nil [12448 13638])
            ("MemberFunc" type
               (:members 
                  ( ("x" variable (:type "int") (reparse-symbol classsubparts) [13772 13778])
                    ("getX" function
                       (:methodconst-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [13781 13817])
                    ("setX" function
                       (:arguments 
                          ( ("xx" variable (:type "int") (reparse-symbol arg-sub-list) [13830 13837]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [13820 13855]))                  
                :type "struct")
                nil [13750 13858])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13865 13874])
                    ("" variable (:type ("DataMember" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13875 13886]))                  
                :type "int")
                nil [13860 14352])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14359 14368])
                    ("" variable (:type ("MemberFunction" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14369 14384]))                  
                :type "int")
                nil [14354 15041])
            ("CopyMoveTracker" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [15196 15203])
                    ("ConstructorTag" type (:type "struct") (reparse-symbol classsubparts) [15206 15231])
                    ("CopyMoveTracker" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("ConstructorTag" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15290 15305]))                          
                        :type ("CopyMoveTracker" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [15274 15373])
                    ("data_" function
                       (:arguments 
                          ( ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15436 15438])
                            ("" variable (:type ("data_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15438 15444]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [15430 15470])
                    ("data_" function
                       (:arguments 
                          ( ("" variable (:type ("o" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15657 15659])
                            ("" variable (:type ("data_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15659 15665]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [15651 15692])
                    ("copyCount" function
                       (:methodconst-flag t
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [15821 15876])
                    ("moveCount" function
                       (:methodconst-flag t
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [15879 15935])
                    ("refCount" function
                       (:methodconst-flag t
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [15938 15997])
                    ("resetCounters" function (:type "void") (reparse-symbol classsubparts) [16000 16064])
                    ("private" label nil (reparse-symbol classsubparts) [16067 16075])
                    ("data_" variable (:type ("std::shared_ptr" type
                         (:template-specifier 
                            ( ("std::pair" type (:template-specifier 
                                ( ("size_t" type nil nil nil)
                                  ("size_t" type nil nil nil))                                ) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [16094 16143]))                  
                :type "class")
                nil [15171 16146])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16153 16162])
                    ("" variable (:type ("CaptureCopyMoveCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16163 16184]))                  
                :type "int")
                nil [16148 17201])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17208 17217])
                    ("" variable (:type ("ParameterCopyMoveCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17218 17241]))                  
                :type "int")
                nil [17203 18798])
            ("VariadicTemplateSum" type
               (:members 
                  ( ("()" function
                       (:methodconst-flag t
                        :operator-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [18950 18992])
                    ("()" function
                       (:methodconst-flag t
                        :operator-flag t
                        :arguments 
                          ( ("x" variable (:type "int") (reparse-symbol arg-sub-list) [19037 19043])
                            ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19044 19049])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19052 19057]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [19022 19102]))                  
                :type "struct")
                nil [18919 19105])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19112 19121])
                    ("" variable (:type ("VariadicTemplate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19122 19139]))                  
                :type "int")
                nil [19107 19399])
            ("VariadicArgumentsSum" type
               (:members 
                  ( ("()" function
                       (:methodconst-flag t
                        :operator-flag t
                        :arguments 
                          ( ("count" variable (:type "int") (reparse-symbol arg-sub-list) [19448 19458])
                            ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [19459 19463]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [19433 19656]))                  
                :type "struct")
                nil [19401 19659])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19666 19675])
                    ("" variable (:type ("VariadicArguments" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19676 19694]))                  
                :type "int")
                nil [19661 19953])
            ("for_each" function
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "void"
                :arguments 
                  ( ("range" variable
                       (:reference 1
                        :constant-flag t
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [20497 20512])
                    ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20517 20526])
                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [20526 20561])
                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20576 20581]))                  )
                nil [20456 20640])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20647 20656])
                    ("" variable (:type ("SafeCaptureByReference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20657 20680]))                  
                :type "int")
                nil [20642 21271])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21378 21387])
                    ("" variable (:type ("IgnoreReturnValue" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21388 21406]))                  
                :type "int")
                nil [21373 21743])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21869 21878])
                    ("" variable (:type ("ReturnConvertible" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21879 21897]))                  
                :type "int")
                nil [21864 22879])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22886 22895])
                    ("" variable (:type ("ConvertReturnType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22896 22914]))                  
                :type "int")
                nil [22881 24459])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24564 24573])
                    ("" variable (:type ("asStdFunction_void" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24574 24593]))                  
                :type "int")
                nil [24559 24836])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24843 24852])
                    ("" variable (:type ("asStdFunction_void_const" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24853 24878]))                  
                :type "int")
                nil [24838 25127])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25134 25143])
                    ("" variable (:type ("asStdFunction_return" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25144 25165]))                  
                :type "int")
                nil [25129 25442])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25449 25458])
                    ("" variable (:type ("asStdFunction_return_const" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25459 25486]))                  
                :type "int")
                nil [25444 25769])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25776 25785])
                    ("" variable (:type ("asStdFunction_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25786 25805]))                  
                :type "int")
                nil [25771 26108])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26115 26124])
                    ("" variable (:type ("asStdFunction_args_const" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26125 26150]))                  
                :type "int")
                nil [26110 26459])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26564 26573])
                    ("" variable (:type ("asSharedProxy_void" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26574 26593]))                  
                :type "int")
                nil [26559 26775])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26782 26791])
                    ("" variable (:type ("asSharedProxy_void_const" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26792 26817]))                  
                :type "int")
                nil [26777 27005])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27012 27021])
                    ("" variable (:type ("asSharedProxy_return" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27022 27043]))                  
                :type "int")
                nil [27007 27234])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27241 27250])
                    ("" variable (:type ("asSharedProxy_return_const" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27251 27278]))                  
                :type "int")
                nil [27236 27475])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27482 27491])
                    ("" variable (:type ("asSharedProxy_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27492 27511]))                  
                :type "int")
                nil [27477 27795])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27802 27811])
                    ("" variable (:type ("asSharedProxy_args_const" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27812 27837]))                  
                :type "int")
                nil [27797 28087])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28094 28103])
                    ("" variable (:type ("NoAllocatedMemoryAfterMove" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28104 28131]))                  
                :type "int")
                nil [28089 28375])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28382 28391])
                    ("" variable (:type ("ConstCastEmbedded" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28392 28410]))                  
                :type "int")
                nil [28377 28633])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28640 28649])
                    ("" variable (:type ("EmptyAfterConstCast" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28650 28670]))                  
                :type "int")
                nil [28635 28824])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28831 28840])
                    ("" variable (:type ("SelfStdSwap" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28841 28853]))                  
                :type "int")
                nil [28826 29089])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29096 29105])
                    ("" variable (:type ("SelfMove" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29106 29115]))                  
                :type "int")
                nil [29091 29345])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29352 29361])
                    ("" variable (:type ("DeducableArguments" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29362 29381]))                  
                :type "int")
                nil [29347 29558])
            ("TEST" function
               (:arguments 
                  ( ("" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29565 29574])
                    ("" variable (:type ("CtorWithCopy" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29575 29588]))                  
                :type "int")
                nil [29560 30002]))          
      :file "FunctionTest.cpp"
      :pointmax 30003
      :fsize 30002
      :lastmodtime '(22873 63939 0 0)
      :unmatched-syntax '((punctuation 20574 . 20575) (CONST 20569 . 20574) (punctuation 20567 . 20568) (CONST 20562 . 20567) (semantic-list 20530 . 20561) (punctuation 20525 . 20526) (punctuation 19050 . 19051) (punctuation 19049 . 19050) (punctuation 19048 . 19049) (punctuation 19018 . 19019) (symbol 19014 . 19018) (punctuation 19012 . 19013) (punctuation 19011 . 19012) (punctuation 19010 . 19011) (CLASS 19005 . 19010) (punctuation 19004 . 19005) (TEMPLATE 18995 . 19003) (semantic-list 15752 . 15817) (symbol 15743 . 15751) (semantic-list 15721 . 15742) (punctuation 15720 . 15721) (OPERATOR 15712 . 15720) (punctuation 15738 . 15739) (punctuation 15710 . 15711) (symbol 15695 . 15710) (punctuation 15738 . 15739) (punctuation 15658 . 15659) (punctuation 15649 . 15650) (symbol 15640 . 15648) (semantic-list 15618 . 15639) (symbol 15603 . 15618) (punctuation 15635 . 15636) (semantic-list 15535 . 15599) (symbol 15526 . 15534) (semantic-list 15499 . 15525) (punctuation 15498 . 15499) (OPERATOR 15490 . 15498) (punctuation 15488 . 15489) (symbol 15473 . 15488) (punctuation 15437 . 15438) (punctuation 15428 . 15429) (symbol 15419 . 15427) (semantic-list 15392 . 15418) (symbol 15377 . 15392) (EXPLICIT 15265 . 15273) (punctuation 15261 . 15262) (DELETE 15255 . 15261) (punctuation 15253 . 15254) (semantic-list 15250 . 15252) (symbol 15235 . 15250) (string 5087 . 5089) (punctuation 5075 . 5076) (punctuation 5074 . 5075) (punctuation 5073 . 5074) (punctuation 5072 . 5073) (CONST 5067 . 5072) (semantic-list 5061 . 5066) (punctuation 5055 . 5056) (punctuation 5036 . 5037) (semantic-list 5029 . 5036) (punctuation 5025 . 5026) (punctuation 5007 . 5008) (punctuation 4980 . 4981) (string 4956 . 4958) (punctuation 4935 . 4936) (punctuation 4934 . 4935) (punctuation 4933 . 4934) (punctuation 4932 . 4933) (CONST 4927 . 4932) (semantic-list 4921 . 4926) (punctuation 4917 . 4918) (punctuation 4906 . 4907) (semantic-list 4901 . 4906) (punctuation 4897 . 4898) (punctuation 4888 . 4889) (string 4838 . 4840) (punctuation 4826 . 4827) (punctuation 4825 . 4826) (punctuation 4824 . 4825) (punctuation 4823 . 4824) (CONST 4818 . 4823) (semantic-list 4812 . 4817) (punctuation 4806 . 4807) (punctuation 4787 . 4788) (semantic-list 4780 . 4787) (punctuation 4776 . 4777) (punctuation 4758 . 4759) (punctuation 4728 . 4729) (string 4704 . 4706) (punctuation 4692 . 4693) (punctuation 4691 . 4692) (punctuation 4690 . 4691) (punctuation 4689 . 4690) (CONST 4684 . 4689) (semantic-list 4678 . 4683) (punctuation 4674 . 4675) (punctuation 4655 . 4656) (semantic-list 4650 . 4655) (punctuation 4646 . 4647) (punctuation 4628 . 4629) (string 4574 . 4576) (punctuation 4553 . 4554) (punctuation 4552 . 4553) (punctuation 4551 . 4552) (punctuation 4550 . 4551) (punctuation 4549 . 4550) (semantic-list 4544 . 4549) (punctuation 4538 . 4539) (punctuation 4527 . 4528) (CONST 4522 . 4527) (semantic-list 4514 . 4521) (punctuation 4510 . 4511) (punctuation 4501 . 4502) (punctuation 4482 . 4483) (string 4458 . 4460) (punctuation 4437 . 4438) (punctuation 4436 . 4437) (punctuation 4435 . 4436) (punctuation 4434 . 4435) (punctuation 4433 . 4434) (CONST 4428 . 4433) (semantic-list 4422 . 4427) (punctuation 4416 . 4417) (punctuation 4405 . 4406) (semantic-list 4398 . 4405) (punctuation 4394 . 4395) (punctuation 4385 . 4386) (punctuation 4366 . 4367) (string 4342 . 4344) (punctuation 4330 . 4331) (punctuation 4329 . 4330) (punctuation 4328 . 4329) (punctuation 4327 . 4328) (punctuation 4326 . 4327) (semantic-list 4321 . 4326) (punctuation 4317 . 4318) (punctuation 4306 . 4307) (CONST 4301 . 4306) (semantic-list 4295 . 4300) (punctuation 4291 . 4292) (punctuation 4282 . 4283) (punctuation 4263 . 4264) (string 4239 . 4241) (punctuation 4227 . 4228) (punctuation 4226 . 4227) (punctuation 4225 . 4226) (punctuation 4224 . 4225) (punctuation 4223 . 4224) (CONST 4218 . 4223) (semantic-list 4212 . 4217) (punctuation 4208 . 4209) (punctuation 4197 . 4198) (semantic-list 4192 . 4197) (punctuation 4188 . 4189) (punctuation 4179 . 4180) (punctuation 4160 . 4161) (string 4136 . 4138) (punctuation 4115 . 4116) (punctuation 4114 . 4115) (punctuation 4113 . 4114) (punctuation 4112 . 4113) (semantic-list 4107 . 4112) (punctuation 4101 . 4102) (punctuation 4090 . 4091) (CONST 4085 . 4090) (semantic-list 4077 . 4084) (punctuation 4073 . 4074) (punctuation 4064 . 4065) (punctuation 4045 . 4046) (string 4021 . 4023) (punctuation 4009 . 4010) (punctuation 4008 . 4009) (punctuation 4007 . 4008) (punctuation 4006 . 4007) (CONST 4001 . 4006) (semantic-list 3995 . 4000) (punctuation 3989 . 3990) (punctuation 3978 . 3979) (semantic-list 3971 . 3978) (punctuation 3967 . 3968) (punctuation 3958 . 3959) (string 3916 . 3918) (punctuation 3904 . 3905) (punctuation 3903 . 3904) (punctuation 3902 . 3903) (punctuation 3901 . 3902) (semantic-list 3896 . 3901) (punctuation 3892 . 3893) (punctuation 3881 . 3882) (CONST 3876 . 3881) (semantic-list 3870 . 3875) (punctuation 3866 . 3867) (punctuation 3857 . 3858) (punctuation 3838 . 3839) (string 3814 . 3816) (punctuation 3802 . 3803) (punctuation 3801 . 3802) (punctuation 3800 . 3801) (punctuation 3799 . 3800) (CONST 3794 . 3799) (semantic-list 3788 . 3793) (punctuation 3784 . 3785) (punctuation 3773 . 3774) (semantic-list 3768 . 3773) (punctuation 3764 . 3765) (punctuation 3755 . 3756) (string 3712 . 3714) (punctuation 3691 . 3692) (punctuation 3690 . 3691) (punctuation 3689 . 3690) (punctuation 3688 . 3689) (punctuation 3687 . 3688) (semantic-list 3682 . 3687) (punctuation 3676 . 3677) (punctuation 3665 . 3666) (CONST 3660 . 3665) (semantic-list 3652 . 3659) (punctuation 3648 . 3649) (punctuation 3639 . 3640) (punctuation 3617 . 3618) (string 3593 . 3595) (punctuation 3572 . 3573) (punctuation 3571 . 3572) (punctuation 3570 . 3571) (punctuation 3569 . 3570) (punctuation 3568 . 3569) (CONST 3563 . 3568) (semantic-list 3557 . 3562) (punctuation 3551 . 3552) (punctuation 3540 . 3541) (semantic-list 3533 . 3540) (punctuation 3529 . 3530) (punctuation 3520 . 3521) (punctuation 3498 . 3499) (string 3474 . 3476) (punctuation 3453 . 3454) (punctuation 3452 . 3453) (punctuation 3451 . 3452) (punctuation 3450 . 3451) (punctuation 3449 . 3450) (semantic-list 3444 . 3449) (punctuation 3440 . 3441) (punctuation 3429 . 3430) (CONST 3424 . 3429) (semantic-list 3418 . 3423) (punctuation 3414 . 3415) (punctuation 3405 . 3406) (punctuation 3383 . 3384) (string 3359 . 3361) (punctuation 3338 . 3339) (punctuation 3337 . 3338) (punctuation 3336 . 3337) (punctuation 3335 . 3336) (punctuation 3334 . 3335) (CONST 3329 . 3334) (semantic-list 3323 . 3328) (punctuation 3319 . 3320) (punctuation 3308 . 3309) (semantic-list 3303 . 3308) (punctuation 3299 . 3300) (punctuation 3290 . 3291) (punctuation 3268 . 3269) (string 3244 . 3246) (punctuation 3223 . 3224) (punctuation 3222 . 3223) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (semantic-list 3215 . 3220) (punctuation 3209 . 3210) (punctuation 3198 . 3199) (CONST 3193 . 3198) (semantic-list 3185 . 3192) (punctuation 3181 . 3182) (punctuation 3172 . 3173) (punctuation 3150 . 3151) (string 3126 . 3128) (punctuation 3105 . 3106) (punctuation 3104 . 3105) (punctuation 3103 . 3104) (punctuation 3102 . 3103) (CONST 3097 . 3102) (semantic-list 3091 . 3096) (punctuation 3085 . 3086) (punctuation 3074 . 3075) (semantic-list 3067 . 3074) (punctuation 3063 . 3064) (punctuation 3054 . 3055) (string 3009 . 3011) (punctuation 2997 . 2998) (punctuation 2996 . 2997) (punctuation 2995 . 2996) (punctuation 2994 . 2995) (semantic-list 2989 . 2994) (punctuation 2985 . 2986) (punctuation 2974 . 2975) (CONST 2969 . 2974) (semantic-list 2963 . 2968) (punctuation 2959 . 2960) (punctuation 2950 . 2951) (punctuation 2928 . 2929) (string 2904 . 2906) (punctuation 2892 . 2893) (punctuation 2891 . 2892) (punctuation 2890 . 2891) (punctuation 2889 . 2890) (CONST 2884 . 2889) (semantic-list 2878 . 2883) (punctuation 2874 . 2875) (punctuation 2863 . 2864) (semantic-list 2858 . 2863) (punctuation 2854 . 2855) (punctuation 2845 . 2846) (string 2799 . 2801) (punctuation 2787 . 2788) (punctuation 2786 . 2787) (punctuation 2785 . 2786) (punctuation 2759 . 2760) (CONST 2754 . 2759) (semantic-list 2751 . 2753) (punctuation 2746 . 2747) (punctuation 2737 . 2738) (punctuation 2718 . 2719) (string 2694 . 2696) (punctuation 2682 . 2683) (punctuation 2681 . 2682) (punctuation 2680 . 2681) (punctuation 2655 . 2656) (CONST 2650 . 2655) (semantic-list 2647 . 2649) (punctuation 2642 . 2643) (punctuation 2633 . 2634) (punctuation 2614 . 2615) (string 2590 . 2592) (punctuation 2578 . 2579) (punctuation 2577 . 2578) (punctuation 2576 . 2577) (punctuation 2550 . 2551) (semantic-list 2548 . 2550) (punctuation 2543 . 2544) (punctuation 2534 . 2535) (punctuation 2515 . 2516) (string 2491 . 2493) (punctuation 2479 . 2480) (punctuation 2478 . 2479) (punctuation 2477 . 2478) (punctuation 2452 . 2453) (semantic-list 2450 . 2452) (punctuation 2445 . 2446) (punctuation 2436 . 2437) (punctuation 2417 . 2418) (string 2392 . 2394) (punctuation 2371 . 2372) (punctuation 2370 . 2371) (punctuation 2369 . 2370) (punctuation 2343 . 2344) (CONST 2338 . 2343) (semantic-list 2335 . 2337) (punctuation 2330 . 2331) (punctuation 2321 . 2322) (punctuation 2299 . 2300) (string 2275 . 2277) (punctuation 2254 . 2255) (punctuation 2253 . 2254) (punctuation 2252 . 2253) (punctuation 2227 . 2228) (CONST 2222 . 2227) (semantic-list 2219 . 2221) (punctuation 2214 . 2215) (punctuation 2205 . 2206) (punctuation 2183 . 2184) (string 2159 . 2161) (punctuation 2147 . 2148) (punctuation 2146 . 2147) (punctuation 2145 . 2146) (punctuation 2119 . 2120) (semantic-list 2117 . 2119) (punctuation 2112 . 2113) (punctuation 2103 . 2104) (punctuation 2081 . 2082) (string 2057 . 2059) (punctuation 2045 . 2046) (punctuation 2044 . 2045) (punctuation 2043 . 2044) (punctuation 2018 . 2019) (semantic-list 2016 . 2018) (punctuation 2011 . 2012) (punctuation 2002 . 2003) (punctuation 1983 . 1984) (punctuation 1773 . 1774) (punctuation 1748 . 1749) (symbol 1744 . 1748) (punctuation 1742 . 1743) (punctuation 1741 . 1742) (punctuation 1740 . 1741) (CLASS 1735 . 1740) (punctuation 1734 . 1735) (TEMPLATE 1725 . 1733) (punctuation 1721 . 1722) (DELETE 1715 . 1721) (punctuation 1713 . 1714) (semantic-list 1686 . 1712) (punctuation 1685 . 1686) (OPERATOR 1677 . 1685) (punctuation 1710 . 1711) (punctuation 1675 . 1676) (symbol 1653 . 1675) (punctuation 1710 . 1711) (punctuation 1649 . 1650) (DELETE 1643 . 1649) (punctuation 1641 . 1642) (semantic-list 1609 . 1640) (punctuation 1608 . 1609) (OPERATOR 1600 . 1608) (punctuation 1598 . 1599) (symbol 1576 . 1598) (punctuation 1572 . 1573) (DELETE 1566 . 1572) (punctuation 1564 . 1565) (semantic-list 1537 . 1563) (symbol 1515 . 1537) (punctuation 1561 . 1562) (punctuation 1511 . 1512) (DELETE 1505 . 1511) (punctuation 1503 . 1504) (semantic-list 1471 . 1502) (symbol 1449 . 1471) (punctuation 1378 . 1379) (semantic-list 1369 . 1378) (punctuation 1365 . 1366) (punctuation 1339 . 1340) (symbol 1335 . 1339) (punctuation 1333 . 1334) (punctuation 1332 . 1333) (punctuation 1331 . 1332) (TYPENAME 1323 . 1331) (punctuation 1321 . 1322) (symbol 1318 . 1321) (TYPENAME 1309 . 1317) (punctuation 1308 . 1309) (TEMPLATE 1299 . 1307) (punctuation 20574 . 20575) (CONST 20569 . 20574) (punctuation 20567 . 20568) (CONST 20562 . 20567) (semantic-list 20530 . 20561) (punctuation 20525 . 20526) (punctuation 19050 . 19051) (punctuation 19049 . 19050) (punctuation 19048 . 19049) (punctuation 19018 . 19019) (symbol 19014 . 19018) (punctuation 19012 . 19013) (punctuation 19011 . 19012) (punctuation 19010 . 19011) (CLASS 19005 . 19010) (punctuation 19004 . 19005) (TEMPLATE 18995 . 19003) (semantic-list 15752 . 15817) (symbol 15743 . 15751) (semantic-list 15721 . 15742) (punctuation 15720 . 15721) (OPERATOR 15712 . 15720) (punctuation 15738 . 15739) (punctuation 15710 . 15711) (symbol 15695 . 15710) (punctuation 15738 . 15739) (punctuation 15658 . 15659) (punctuation 15649 . 15650) (symbol 15640 . 15648) (semantic-list 15618 . 15639) (symbol 15603 . 15618) (punctuation 15635 . 15636) (semantic-list 15535 . 15599) (symbol 15526 . 15534) (semantic-list 15499 . 15525) (punctuation 15498 . 15499) (OPERATOR 15490 . 15498) (punctuation 15488 . 15489) (symbol 15473 . 15488) (punctuation 15437 . 15438) (punctuation 15428 . 15429) (symbol 15419 . 15427) (semantic-list 15392 . 15418) (symbol 15377 . 15392) (EXPLICIT 15265 . 15273) (punctuation 15261 . 15262) (DELETE 15255 . 15261) (punctuation 15253 . 15254) (semantic-list 15250 . 15252) (symbol 15235 . 15250) (string 5087 . 5089) (punctuation 5075 . 5076) (punctuation 5074 . 5075) (punctuation 5073 . 5074) (punctuation 5072 . 5073) (CONST 5067 . 5072) (semantic-list 5061 . 5066) (punctuation 5055 . 5056) (punctuation 5036 . 5037) (semantic-list 5029 . 5036) (punctuation 5025 . 5026) (punctuation 5007 . 5008) (punctuation 4980 . 4981) (string 4956 . 4958) (punctuation 4935 . 4936) (punctuation 4934 . 4935) (punctuation 4933 . 4934) (punctuation 4932 . 4933) (CONST 4927 . 4932) (semantic-list 4921 . 4926) (punctuation 4917 . 4918) (punctuation 4906 . 4907) (semantic-list 4901 . 4906) (punctuation 4897 . 4898) (punctuation 4888 . 4889) (string 4838 . 4840) (punctuation 4826 . 4827) (punctuation 4825 . 4826) (punctuation 4824 . 4825) (punctuation 4823 . 4824) (CONST 4818 . 4823) (semantic-list 4812 . 4817) (punctuation 4806 . 4807) (punctuation 4787 . 4788) (semantic-list 4780 . 4787) (punctuation 4776 . 4777) (punctuation 4758 . 4759) (punctuation 4728 . 4729) (string 4704 . 4706) (punctuation 4692 . 4693) (punctuation 4691 . 4692) (punctuation 4690 . 4691) (punctuation 4689 . 4690) (CONST 4684 . 4689) (semantic-list 4678 . 4683) (punctuation 4674 . 4675) (punctuation 4655 . 4656) (semantic-list 4650 . 4655) (punctuation 4646 . 4647) (punctuation 4628 . 4629) (string 4574 . 4576) (punctuation 4553 . 4554) (punctuation 4552 . 4553) (punctuation 4551 . 4552) (punctuation 4550 . 4551) (punctuation 4549 . 4550) (semantic-list 4544 . 4549) (punctuation 4538 . 4539) (punctuation 4527 . 4528) (CONST 4522 . 4527) (semantic-list 4514 . 4521) (punctuation 4510 . 4511) (punctuation 4501 . 4502) (punctuation 4482 . 4483) (string 4458 . 4460) (punctuation 4437 . 4438) (punctuation 4436 . 4437) (punctuation 4435 . 4436) (punctuation 4434 . 4435) (punctuation 4433 . 4434) (CONST 4428 . 4433) (semantic-list 4422 . 4427) (punctuation 4416 . 4417) (punctuation 4405 . 4406) (semantic-list 4398 . 4405) (punctuation 4394 . 4395) (punctuation 4385 . 4386) (punctuation 4366 . 4367) (string 4342 . 4344) (punctuation 4330 . 4331) (punctuation 4329 . 4330) (punctuation 4328 . 4329) (punctuation 4327 . 4328) (punctuation 4326 . 4327) (semantic-list 4321 . 4326) (punctuation 4317 . 4318) (punctuation 4306 . 4307) (CONST 4301 . 4306) (semantic-list 4295 . 4300) (punctuation 4291 . 4292) (punctuation 4282 . 4283) (punctuation 4263 . 4264) (string 4239 . 4241) (punctuation 4227 . 4228) (punctuation 4226 . 4227) (punctuation 4225 . 4226) (punctuation 4224 . 4225) (punctuation 4223 . 4224) (CONST 4218 . 4223) (semantic-list 4212 . 4217) (punctuation 4208 . 4209) (punctuation 4197 . 4198) (semantic-list 4192 . 4197) (punctuation 4188 . 4189) (punctuation 4179 . 4180) (punctuation 4160 . 4161) (string 4136 . 4138) (punctuation 4115 . 4116) (punctuation 4114 . 4115) (punctuation 4113 . 4114) (punctuation 4112 . 4113) (semantic-list 4107 . 4112) (punctuation 4101 . 4102) (punctuation 4090 . 4091) (CONST 4085 . 4090) (semantic-list 4077 . 4084) (punctuation 4073 . 4074) (punctuation 4064 . 4065) (punctuation 4045 . 4046) (string 4021 . 4023) (punctuation 4009 . 4010) (punctuation 4008 . 4009) (punctuation 4007 . 4008) (punctuation 4006 . 4007) (CONST 4001 . 4006) (semantic-list 3995 . 4000) (punctuation 3989 . 3990) (punctuation 3978 . 3979) (semantic-list 3971 . 3978) (punctuation 3967 . 3968) (punctuation 3958 . 3959) (string 3916 . 3918) (punctuation 3904 . 3905) (punctuation 3903 . 3904) (punctuation 3902 . 3903) (punctuation 3901 . 3902) (semantic-list 3896 . 3901) (punctuation 3892 . 3893) (punctuation 3881 . 3882) (CONST 3876 . 3881) (semantic-list 3870 . 3875) (punctuation 3866 . 3867) (punctuation 3857 . 3858) (punctuation 3838 . 3839) (string 3814 . 3816) (punctuation 3802 . 3803) (punctuation 3801 . 3802) (punctuation 3800 . 3801) (punctuation 3799 . 3800) (CONST 3794 . 3799) (semantic-list 3788 . 3793) (punctuation 3784 . 3785) (punctuation 3773 . 3774) (semantic-list 3768 . 3773) (punctuation 3764 . 3765) (punctuation 3755 . 3756) (string 3712 . 3714) (punctuation 3691 . 3692) (punctuation 3690 . 3691) (punctuation 3689 . 3690) (punctuation 3688 . 3689) (punctuation 3687 . 3688) (semantic-list 3682 . 3687) (punctuation 3676 . 3677) (punctuation 3665 . 3666) (CONST 3660 . 3665) (semantic-list 3652 . 3659) (punctuation 3648 . 3649) (punctuation 3639 . 3640) (punctuation 3617 . 3618) (string 3593 . 3595) (punctuation 3572 . 3573) (punctuation 3571 . 3572) (punctuation 3570 . 3571) (punctuation 3569 . 3570) (punctuation 3568 . 3569) (CONST 3563 . 3568) (semantic-list 3557 . 3562) (punctuation 3551 . 3552) (punctuation 3540 . 3541) (semantic-list 3533 . 3540) (punctuation 3529 . 3530) (punctuation 3520 . 3521) (punctuation 3498 . 3499) (string 3474 . 3476) (punctuation 3453 . 3454) (punctuation 3452 . 3453) (punctuation 3451 . 3452) (punctuation 3450 . 3451) (punctuation 3449 . 3450) (semantic-list 3444 . 3449) (punctuation 3440 . 3441) (punctuation 3429 . 3430) (CONST 3424 . 3429) (semantic-list 3418 . 3423) (punctuation 3414 . 3415) (punctuation 3405 . 3406) (punctuation 3383 . 3384) (string 3359 . 3361) (punctuation 3338 . 3339) (punctuation 3337 . 3338) (punctuation 3336 . 3337) (punctuation 3335 . 3336) (punctuation 3334 . 3335) (CONST 3329 . 3334) (semantic-list 3323 . 3328) (punctuation 3319 . 3320) (punctuation 3308 . 3309) (semantic-list 3303 . 3308) (punctuation 3299 . 3300) (punctuation 3290 . 3291) (punctuation 3268 . 3269) (string 3244 . 3246) (punctuation 3223 . 3224) (punctuation 3222 . 3223) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (semantic-list 3215 . 3220) (punctuation 3209 . 3210) (punctuation 3198 . 3199) (CONST 3193 . 3198) (semantic-list 3185 . 3192) (punctuation 3181 . 3182) (punctuation 3172 . 3173) (punctuation 3150 . 3151) (string 3126 . 3128) (punctuation 3105 . 3106) (punctuation 3104 . 3105) (punctuation 3103 . 3104) (punctuation 3102 . 3103) (CONST 3097 . 3102) (semantic-list 3091 . 3096) (punctuation 3085 . 3086) (punctuation 3074 . 3075) (semantic-list 3067 . 3074) (punctuation 3063 . 3064) (punctuation 3054 . 3055) (string 3009 . 3011) (punctuation 2997 . 2998) (punctuation 2996 . 2997) (punctuation 2995 . 2996) (punctuation 2994 . 2995) (semantic-list 2989 . 2994) (punctuation 2985 . 2986) (punctuation 2974 . 2975) (CONST 2969 . 2974) (semantic-list 2963 . 2968) (punctuation 2959 . 2960) (punctuation 2950 . 2951) (punctuation 2928 . 2929) (string 2904 . 2906) (punctuation 2892 . 2893) (punctuation 2891 . 2892) (punctuation 2890 . 2891) (punctuation 2889 . 2890) (CONST 2884 . 2889) (semantic-list 2878 . 2883) (punctuation 2874 . 2875) (punctuation 2863 . 2864) (semantic-list 2858 . 2863) (punctuation 2854 . 2855) (punctuation 2845 . 2846) (string 2799 . 2801) (punctuation 2787 . 2788) (punctuation 2786 . 2787) (punctuation 2785 . 2786) (punctuation 2759 . 2760) (CONST 2754 . 2759) (semantic-list 2751 . 2753) (punctuation 2746 . 2747) (punctuation 2737 . 2738) (punctuation 2718 . 2719) (string 2694 . 2696) (punctuation 2682 . 2683) (punctuation 2681 . 2682) (punctuation 2680 . 2681) (punctuation 2655 . 2656) (CONST 2650 . 2655) (semantic-list 2647 . 2649) (punctuation 2642 . 2643) (punctuation 2633 . 2634) (punctuation 2614 . 2615) (string 2590 . 2592) (punctuation 2578 . 2579) (punctuation 2577 . 2578) (punctuation 2576 . 2577) (punctuation 2550 . 2551) (semantic-list 2548 . 2550) (punctuation 2543 . 2544) (punctuation 2534 . 2535) (punctuation 2515 . 2516) (string 2491 . 2493) (punctuation 2479 . 2480) (punctuation 2478 . 2479) (punctuation 2477 . 2478) (punctuation 2452 . 2453) (semantic-list 2450 . 2452) (punctuation 2445 . 2446) (punctuation 2436 . 2437) (punctuation 2417 . 2418) (string 2392 . 2394) (punctuation 2371 . 2372) (punctuation 2370 . 2371) (punctuation 2369 . 2370) (punctuation 2343 . 2344) (CONST 2338 . 2343) (semantic-list 2335 . 2337) (punctuation 2330 . 2331) (punctuation 2321 . 2322) (punctuation 2299 . 2300) (string 2275 . 2277) (punctuation 2254 . 2255) (punctuation 2253 . 2254) (punctuation 2252 . 2253) (punctuation 2227 . 2228) (CONST 2222 . 2227) (semantic-list 2219 . 2221) (punctuation 2214 . 2215) (punctuation 2205 . 2206) (punctuation 2183 . 2184) (string 2159 . 2161) (punctuation 2147 . 2148) (punctuation 2146 . 2147) (punctuation 2145 . 2146) (punctuation 2119 . 2120) (semantic-list 2117 . 2119) (punctuation 2112 . 2113) (punctuation 2103 . 2104) (punctuation 2081 . 2082) (string 2057 . 2059) (punctuation 2045 . 2046) (punctuation 2044 . 2045) (punctuation 2043 . 2044) (punctuation 2018 . 2019) (semantic-list 2016 . 2018) (punctuation 2011 . 2012) (punctuation 2002 . 2003) (punctuation 1983 . 1984) (punctuation 1773 . 1774) (punctuation 1748 . 1749) (symbol 1744 . 1748) (punctuation 1742 . 1743) (punctuation 1741 . 1742) (punctuation 1740 . 1741) (CLASS 1735 . 1740) (punctuation 1734 . 1735) (TEMPLATE 1725 . 1733) (punctuation 1721 . 1722) (DELETE 1715 . 1721) (punctuation 1713 . 1714) (semantic-list 1686 . 1712) (punctuation 1685 . 1686) (OPERATOR 1677 . 1685) (punctuation 1710 . 1711) (punctuation 1675 . 1676) (symbol 1653 . 1675) (punctuation 1710 . 1711) (punctuation 1649 . 1650) (DELETE 1643 . 1649) (punctuation 1641 . 1642) (semantic-list 1609 . 1640) (punctuation 1608 . 1609) (OPERATOR 1600 . 1608) (punctuation 1598 . 1599) (symbol 1576 . 1598) (punctuation 1572 . 1573) (DELETE 1566 . 1572) (punctuation 1564 . 1565) (semantic-list 1537 . 1563) (symbol 1515 . 1537) (punctuation 1561 . 1562) (punctuation 1511 . 1512) (DELETE 1505 . 1511) (punctuation 1503 . 1504) (semantic-list 1471 . 1502) (symbol 1449 . 1471) (punctuation 1378 . 1379) (semantic-list 1369 . 1378) (punctuation 1365 . 1366) (punctuation 1339 . 1340) (symbol 1335 . 1339) (punctuation 1333 . 1334) (punctuation 1332 . 1333) (punctuation 1331 . 1332) (TYPENAME 1323 . 1331) (punctuation 1321 . 1322) (symbol 1318 . 1321) (TYPENAME 1309 . 1317) (punctuation 1308 . 1309) (TEMPLATE 1299 . 1307) (string 2159 . 2161) (punctuation 2147 . 2148) (punctuation 2146 . 2147) (punctuation 2145 . 2146) (punctuation 2119 . 2120) (semantic-list 2117 . 2119) (punctuation 2112 . 2113) (punctuation 2103 . 2104) (punctuation 2081 . 2082) (string 2057 . 2059) (punctuation 2045 . 2046) (punctuation 2044 . 2045) (punctuation 2043 . 2044) (punctuation 2018 . 2019) (semantic-list 2016 . 2018) (punctuation 2011 . 2012) (punctuation 2002 . 2003) (punctuation 1983 . 1984) (punctuation 1773 . 1774) (punctuation 1748 . 1749) (symbol 1744 . 1748) (punctuation 1742 . 1743) (punctuation 1741 . 1742) (punctuation 1740 . 1741) (CLASS 1735 . 1740) (punctuation 1734 . 1735) (TEMPLATE 1725 . 1733) (punctuation 1721 . 1722) (DELETE 1715 . 1721) (punctuation 1713 . 1714) (semantic-list 1686 . 1712) (punctuation 1685 . 1686) (OPERATOR 1677 . 1685) (punctuation 1710 . 1711) (punctuation 1675 . 1676) (symbol 1653 . 1675) (punctuation 1710 . 1711) (punctuation 1649 . 1650) (DELETE 1643 . 1649) (punctuation 1641 . 1642) (semantic-list 1609 . 1640) (punctuation 1608 . 1609) (OPERATOR 1600 . 1608) (punctuation 1598 . 1599) (symbol 1576 . 1598) (punctuation 1572 . 1573) (DELETE 1566 . 1572) (punctuation 1564 . 1565) (semantic-list 1537 . 1563) (symbol 1515 . 1537) (punctuation 1561 . 1562) (punctuation 1511 . 1512) (DELETE 1505 . 1511) (punctuation 1503 . 1504) (semantic-list 1471 . 1502) (symbol 1449 . 1471) (punctuation 1378 . 1379) (semantic-list 1369 . 1378) (punctuation 1365 . 1366) (punctuation 1339 . 1340) (symbol 1335 . 1339) (punctuation 1333 . 1334) (punctuation 1332 . 1333) (punctuation 1331 . 1332) (TYPENAME 1323 . 1331) (punctuation 1321 . 1322) (symbol 1318 . 1321) (TYPENAME 1309 . 1317) (punctuation 1308 . 1309) (TEMPLATE 1299 . 1307) (string 2904 . 2906) (punctuation 2892 . 2893) (punctuation 2891 . 2892) (punctuation 2890 . 2891) (punctuation 2889 . 2890) (CONST 2884 . 2889) (semantic-list 2878 . 2883) (punctuation 2874 . 2875) (punctuation 2863 . 2864) (semantic-list 2858 . 2863) (punctuation 2854 . 2855) (punctuation 2845 . 2846) (string 2799 . 2801) (punctuation 2787 . 2788) (punctuation 2786 . 2787) (punctuation 2785 . 2786) (punctuation 2759 . 2760) (CONST 2754 . 2759) (semantic-list 2751 . 2753) (punctuation 2746 . 2747) (punctuation 2737 . 2738) (punctuation 2718 . 2719) (string 2694 . 2696) (punctuation 2682 . 2683) (punctuation 2681 . 2682) (punctuation 2680 . 2681) (punctuation 2655 . 2656) (CONST 2650 . 2655) (semantic-list 2647 . 2649) (punctuation 2642 . 2643) (punctuation 2633 . 2634) (punctuation 2614 . 2615) (string 2590 . 2592) (punctuation 2578 . 2579) (punctuation 2577 . 2578) (punctuation 2576 . 2577) (punctuation 2550 . 2551) (semantic-list 2548 . 2550) (punctuation 2543 . 2544) (punctuation 2534 . 2535) (punctuation 2515 . 2516) (string 2491 . 2493) (punctuation 2479 . 2480) (punctuation 2478 . 2479) (punctuation 2477 . 2478) (punctuation 2452 . 2453) (semantic-list 2450 . 2452) (punctuation 2445 . 2446) (punctuation 2436 . 2437) (punctuation 2417 . 2418) (string 2392 . 2394) (punctuation 2371 . 2372) (punctuation 2370 . 2371) (punctuation 2369 . 2370) (punctuation 2343 . 2344) (CONST 2338 . 2343) (semantic-list 2335 . 2337) (punctuation 2330 . 2331) (punctuation 2321 . 2322) (punctuation 2299 . 2300) (string 2275 . 2277) (punctuation 2254 . 2255) (punctuation 2253 . 2254) (punctuation 2252 . 2253) (punctuation 2227 . 2228) (CONST 2222 . 2227) (semantic-list 2219 . 2221) (punctuation 2214 . 2215) (punctuation 2205 . 2206) (punctuation 2183 . 2184) (string 2159 . 2161) (punctuation 2147 . 2148) (punctuation 2146 . 2147) (punctuation 2145 . 2146) (punctuation 2119 . 2120) (semantic-list 2117 . 2119) (punctuation 2112 . 2113) (punctuation 2103 . 2104) (punctuation 2081 . 2082) (string 2057 . 2059) (punctuation 2045 . 2046) (punctuation 2044 . 2045) (punctuation 2043 . 2044) (punctuation 2018 . 2019) (semantic-list 2016 . 2018) (punctuation 2011 . 2012) (punctuation 2002 . 2003) (punctuation 1983 . 1984) (punctuation 1773 . 1774) (punctuation 1748 . 1749) (symbol 1744 . 1748) (punctuation 1742 . 1743) (punctuation 1741 . 1742) (punctuation 1740 . 1741) (CLASS 1735 . 1740) (punctuation 1734 . 1735) (TEMPLATE 1725 . 1733) (punctuation 1721 . 1722) (DELETE 1715 . 1721) (punctuation 1713 . 1714) (semantic-list 1686 . 1712) (punctuation 1685 . 1686) (OPERATOR 1677 . 1685) (punctuation 1710 . 1711) (punctuation 1675 . 1676) (symbol 1653 . 1675) (punctuation 1710 . 1711) (punctuation 1649 . 1650) (DELETE 1643 . 1649) (punctuation 1641 . 1642) (semantic-list 1609 . 1640) (punctuation 1608 . 1609) (OPERATOR 1600 . 1608) (punctuation 1598 . 1599) (symbol 1576 . 1598) (punctuation 1572 . 1573) (DELETE 1566 . 1572) (punctuation 1564 . 1565) (semantic-list 1537 . 1563) (symbol 1515 . 1537) (punctuation 1561 . 1562) (punctuation 1511 . 1512) (DELETE 1505 . 1511) (punctuation 1503 . 1504) (semantic-list 1471 . 1502) (symbol 1449 . 1471) (punctuation 1378 . 1379) (semantic-list 1369 . 1378) (punctuation 1365 . 1366) (punctuation 1339 . 1340) (symbol 1335 . 1339) (punctuation 1333 . 1334) (punctuation 1332 . 1333) (punctuation 1331 . 1332) (TYPENAME 1323 . 1331) (punctuation 1321 . 1322) (symbol 1318 . 1321) (TYPENAME 1309 . 1317) (punctuation 1308 . 1309) (TEMPLATE 1299 . 1307) (punctuation 1378 . 1379) (semantic-list 1369 . 1378) (punctuation 1365 . 1366) (punctuation 1339 . 1340) (symbol 1335 . 1339) (punctuation 1333 . 1334) (punctuation 1332 . 1333) (punctuation 1331 . 1332) (TYPENAME 1323 . 1331) (punctuation 1321 . 1322) (symbol 1318 . 1321) (TYPENAME 1309 . 1317) (punctuation 1308 . 1309) (TEMPLATE 1299 . 1307) (punctuation 1378 . 1379) (semantic-list 1369 . 1378) (punctuation 1365 . 1366) (punctuation 1339 . 1340) (symbol 1335 . 1339) (punctuation 1333 . 1334) (punctuation 1332 . 1333) (punctuation 1331 . 1332) (TYPENAME 1323 . 1331) (punctuation 1321 . 1322) (symbol 1318 . 1321) (TYPENAME 1309 . 1317) (punctuation 1308 . 1309) (TEMPLATE 1299 . 1307) (string 3814 . 3816) (punctuation 3802 . 3803) (punctuation 3801 . 3802) (punctuation 3800 . 3801) (punctuation 3799 . 3800) (CONST 3794 . 3799) (semantic-list 3788 . 3793) (punctuation 3784 . 3785) (punctuation 3773 . 3774) (semantic-list 3768 . 3773) (punctuation 3764 . 3765) (punctuation 3755 . 3756) (string 3712 . 3714) (punctuation 3691 . 3692) (punctuation 3690 . 3691) (punctuation 3689 . 3690) (punctuation 3688 . 3689) (punctuation 3687 . 3688) (semantic-list 3682 . 3687) (punctuation 3676 . 3677) (punctuation 3665 . 3666) (CONST 3660 . 3665) (semantic-list 3652 . 3659) (punctuation 3648 . 3649) (punctuation 3639 . 3640) (punctuation 3617 . 3618) (string 3593 . 3595) (punctuation 3572 . 3573) (punctuation 3571 . 3572) (punctuation 3570 . 3571) (punctuation 3569 . 3570) (punctuation 3568 . 3569) (CONST 3563 . 3568) (semantic-list 3557 . 3562) (punctuation 3551 . 3552) (punctuation 3540 . 3541) (semantic-list 3533 . 3540) (punctuation 3529 . 3530) (punctuation 3520 . 3521) (punctuation 3498 . 3499) (string 3474 . 3476) (punctuation 3453 . 3454) (punctuation 3452 . 3453) (punctuation 3451 . 3452) (punctuation 3450 . 3451) (punctuation 3449 . 3450) (semantic-list 3444 . 3449) (punctuation 3440 . 3441) (punctuation 3429 . 3430) (CONST 3424 . 3429) (semantic-list 3418 . 3423) (punctuation 3414 . 3415) (punctuation 3405 . 3406) (punctuation 3383 . 3384) (string 3359 . 3361) (punctuation 3338 . 3339) (punctuation 3337 . 3338) (punctuation 3336 . 3337) (punctuation 3335 . 3336) (punctuation 3334 . 3335) (CONST 3329 . 3334) (semantic-list 3323 . 3328) (punctuation 3319 . 3320) (punctuation 3308 . 3309) (semantic-list 3303 . 3308) (punctuation 3299 . 3300) (punctuation 3290 . 3291) (punctuation 3268 . 3269) (string 3244 . 3246) (punctuation 3223 . 3224) (punctuation 3222 . 3223) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (semantic-list 3215 . 3220) (punctuation 3209 . 3210) (punctuation 3198 . 3199) (CONST 3193 . 3198) (semantic-list 3185 . 3192) (punctuation 3181 . 3182) (punctuation 3172 . 3173) (punctuation 3150 . 3151) (string 3126 . 3128) (punctuation 3105 . 3106) (punctuation 3104 . 3105) (punctuation 3103 . 3104) (punctuation 3102 . 3103) (CONST 3097 . 3102) (semantic-list 3091 . 3096) (punctuation 3085 . 3086) (punctuation 3074 . 3075) (semantic-list 3067 . 3074) (punctuation 3063 . 3064) (punctuation 3054 . 3055) (string 3009 . 3011) (punctuation 2997 . 2998) (punctuation 2996 . 2997) (punctuation 2995 . 2996) (punctuation 2994 . 2995) (semantic-list 2989 . 2994) (punctuation 2985 . 2986) (punctuation 2974 . 2975) (CONST 2969 . 2974) (semantic-list 2963 . 2968) (punctuation 2959 . 2960) (punctuation 2950 . 2951) (punctuation 2928 . 2929) (string 2904 . 2906) (punctuation 2892 . 2893) (punctuation 2891 . 2892) (punctuation 2890 . 2891) (punctuation 2889 . 2890) (CONST 2884 . 2889) (semantic-list 2878 . 2883) (punctuation 2874 . 2875) (punctuation 2863 . 2864) (semantic-list 2858 . 2863) (punctuation 2854 . 2855) (punctuation 2845 . 2846) (string 2799 . 2801) (punctuation 2787 . 2788) (punctuation 2786 . 2787) (punctuation 2785 . 2786) (punctuation 2759 . 2760) (CONST 2754 . 2759) (semantic-list 2751 . 2753) (punctuation 2746 . 2747) (punctuation 2737 . 2738) (punctuation 2718 . 2719) (string 2694 . 2696) (punctuation 2682 . 2683) (punctuation 2681 . 2682) (punctuation 2680 . 2681) (punctuation 2655 . 2656) (CONST 2650 . 2655) (semantic-list 2647 . 2649) (punctuation 2642 . 2643) (punctuation 2633 . 2634) (punctuation 2614 . 2615) (string 2590 . 2592) (punctuation 2578 . 2579) (punctuation 2577 . 2578) (punctuation 2576 . 2577) (punctuation 2550 . 2551) (semantic-list 2548 . 2550) (punctuation 2543 . 2544) (punctuation 2534 . 2535) (punctuation 2515 . 2516) (string 2491 . 2493) (punctuation 2479 . 2480) (punctuation 2478 . 2479) (punctuation 2477 . 2478) (punctuation 2452 . 2453) (semantic-list 2450 . 2452) (punctuation 2445 . 2446) (punctuation 2436 . 2437) (punctuation 2417 . 2418) (string 2392 . 2394) (punctuation 2371 . 2372) (punctuation 2370 . 2371) (punctuation 2369 . 2370) (punctuation 2343 . 2344) (CONST 2338 . 2343) (semantic-list 2335 . 2337) (punctuation 2330 . 2331) (punctuation 2321 . 2322) (punctuation 2299 . 2300) (string 2275 . 2277) (punctuation 2254 . 2255) (punctuation 2253 . 2254) (punctuation 2252 . 2253) (punctuation 2227 . 2228) (CONST 2222 . 2227) (semantic-list 2219 . 2221) (punctuation 2214 . 2215) (punctuation 2205 . 2206) (punctuation 2183 . 2184) (string 2159 . 2161) (punctuation 2147 . 2148) (punctuation 2146 . 2147) (punctuation 2145 . 2146) (punctuation 2119 . 2120) (semantic-list 2117 . 2119) (punctuation 2112 . 2113) (punctuation 2103 . 2104) (punctuation 2081 . 2082) (string 2057 . 2059) (punctuation 2045 . 2046) (punctuation 2044 . 2045) (punctuation 2043 . 2044) (punctuation 2018 . 2019) (semantic-list 2016 . 2018) (punctuation 2011 . 2012) (punctuation 2002 . 2003) (punctuation 1983 . 1984) (punctuation 1773 . 1774) (punctuation 1748 . 1749) (symbol 1744 . 1748) (punctuation 1742 . 1743) (punctuation 1741 . 1742) (punctuation 1740 . 1741) (CLASS 1735 . 1740) (punctuation 1734 . 1735) (TEMPLATE 1725 . 1733) (punctuation 1721 . 1722) (DELETE 1715 . 1721) (punctuation 1713 . 1714) (semantic-list 1686 . 1712) (punctuation 1685 . 1686) (OPERATOR 1677 . 1685) (punctuation 1710 . 1711) (punctuation 1675 . 1676) (symbol 1653 . 1675) (punctuation 1710 . 1711) (punctuation 1649 . 1650) (DELETE 1643 . 1649) (punctuation 1641 . 1642) (semantic-list 1609 . 1640) (punctuation 1608 . 1609) (OPERATOR 1600 . 1608) (punctuation 1598 . 1599) (symbol 1576 . 1598) (punctuation 1572 . 1573) (DELETE 1566 . 1572) (punctuation 1564 . 1565) (semantic-list 1537 . 1563) (symbol 1515 . 1537) (punctuation 1561 . 1562) (punctuation 1511 . 1512) (DELETE 1505 . 1511) (punctuation 1503 . 1504) (semantic-list 1471 . 1502) (symbol 1449 . 1471) (punctuation 1378 . 1379) (semantic-list 1369 . 1378) (punctuation 1365 . 1366) (punctuation 1339 . 1340) (symbol 1335 . 1339) (punctuation 1333 . 1334) (punctuation 1332 . 1333) (punctuation 1331 . 1332) (TYPENAME 1323 . 1331) (punctuation 1321 . 1322) (symbol 1318 . 1321) (TYPENAME 1309 . 1317) (punctuation 1308 . 1309) (TEMPLATE 1299 . 1307))))
  :file "!Users!ric!Downloads!trunk!thirdparty!folly!test!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
