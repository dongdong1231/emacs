;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BASE_COMMANDLINEFLAGS_H__" variable (:constant-flag t) nil [2467 2492])
            ("config.h" include nil nil [2494 2513])
            ("string" include (:system-flag t) nil [2514 2531])
            ("string.h" include (:system-flag t) nil [2532 2551])
            ("stdlib.h" include (:system-flag t) nil [2580 2599])
            ("glog/logging.h" include nil nil [2699 2724])
            ("DECLARE_VARIABLE" variable (:constant-flag t) nil [2734 2750])
            ("DEFINE_VARIABLE" variable (:constant-flag t) nil [3139 3154])
            ("DECLARE_bool" variable (:constant-flag t) nil [3626 3638])
            ("DEFINE_bool" variable (:constant-flag t) nil [3692 3703])
            ("DECLARE_int32" variable (:constant-flag t) nil [3813 3826])
            ("DEFINE_int32" variable (:constant-flag t) nil [3900 3912])
            ("DECLARE_string" variable (:constant-flag t) nil [4163 4177])
            ("DEFINE_string" variable (:constant-flag t) nil [4560 4573])
            ("GLOG_DEFINE_bool" variable (:constant-flag t) nil [5376 5392])
            ("GLOG_DEFINE_int32" variable (:constant-flag t) nil [5488 5505])
            ("GLOG_DEFINE_string" variable (:constant-flag t) nil [5601 5619])
            ("EnvToString" variable (:constant-flag t) nil [5862 5873])
            ("EnvToBool" variable (:constant-flag t) nil [5950 5959])
            ("EnvToInt" variable (:constant-flag t) nil [6069 6077]))          
      :file "commandlineflags.h"
      :pointmax 6200
      :fsize 6199
      :lastmodtime '(22840 64239 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("DEFINE_VARIABLE" (spp-arg-list ("type" "name" "value" "meaning" "tn") 3154 . 3186) . 
              ((NAMESPACE "namespace" 3191 . 3200) (spp-symbol-merge ((spp-symbol-merge ((symbol "FLAG__namespace_do_not_use_directly_use_DECLARE_" 3201 . 3249) (symbol "tn" 3251 . 3253)) 3201 . 3253) (symbol "_instead" 3255 . 3263)) 3201 . 3263) (semantic-list "{  \\
  GOOGLE_GLOG_DLL_DECL type FLAGS_##name(value);                              \\
  char FLAGS_no##name;                                                        \\
  }" 3264 . 3432) (USING "using" 3511 . 3516) (spp-symbol-merge ((spp-symbol-merge ((symbol "FLAG__namespace_do_not_use_directly_use_DECLARE_" 3517 . 3565) (symbol "tn" 3567 . 3569)) 3517 . 3569) (symbol "_instead" 3571 . 3579)) 3517 . 3579) (punctuation ":" 3579 . 3580) (punctuation ":" 3580 . 3581) (spp-symbol-merge ((symbol "FLAGS_" 3581 . 3587) (symbol "name" 3589 . 3593)) 3581 . 3593)))
          ("EnvToString" (spp-arg-list ("envname" "dflt") 5873 . 5888) . ((semantic-list "(!getenv(envname) ? (dflt) : getenv(envname))" 5895 . 5940)))
          ("DECLARE_bool" (spp-arg-list ("name") 3638 . 3644) . ((symbol "DECLARE_VARIABLE" 3649 . 3665) (semantic-list "(bool, name, bool)" 3665 . 3683)))
          ("DECLARE_string" (spp-arg-list ("name") 4177 . 4183) . 
              ((NAMESPACE "namespace" 4229 . 4238) (symbol "FLAG__namespace_do_not_use_directly_use_DECLARE_string_instead" 4239 . 4301) (semantic-list "{  \\
  extern GOOGLE_GLOG_DLL_DECL std::string FLAGS_##name;                       \\
  }" 4302 . 4390) (USING "using" 4469 . 4474) (symbol "FLAG__namespace_do_not_use_directly_use_DECLARE_string_instead" 4475 . 4537) (punctuation ":" 4537 . 4538) (punctuation ":" 4538 . 4539) (spp-symbol-merge ((symbol "FLAGS_" 4539 . 4545) (symbol "name" 4547 . 4551)) 4539 . 4551)))
          ("DEFINE_string" (spp-arg-list ("name" "value" "meaning") 4573 . 4595) . 
              ((NAMESPACE "namespace" 4634 . 4643) (symbol "FLAG__namespace_do_not_use_directly_use_DECLARE_string_instead" 4644 . 4706) (semantic-list "{  \\
  GOOGLE_GLOG_DLL_DECL std::string FLAGS_##name(value);                       \\
  char FLAGS_no##name;                                                        \\
  }" 4707 . 4875) (USING "using" 4954 . 4959) (symbol "FLAG__namespace_do_not_use_directly_use_DECLARE_string_instead" 4960 . 5022) (punctuation ":" 5022 . 5023) (punctuation ":" 5023 . 5024) (spp-symbol-merge ((symbol "FLAGS_" 5024 . 5030) (symbol "name" 5032 . 5036)) 5024 . 5036)))
          ("GLOG_DEFINE_bool" (spp-arg-list ("name" "value" "meaning") 5392 . 5414) . ((symbol "DEFINE_bool" 5419 . 5430) (semantic-list "(name, EnvToBool(\"GLOG_\" #name, value), meaning)" 5430 . 5478)))
          ("DEFINE_bool" (spp-arg-list ("name" "value" "meaning") 3703 . 3725) . ((symbol "DEFINE_VARIABLE" 3730 . 3745) (semantic-list "(bool, name, value, meaning, bool)" 3745 . 3779)))
          ("GLOG_DEFINE_int32" (spp-arg-list ("name" "value" "meaning") 5505 . 5527) . ((symbol "DEFINE_int32" 5532 . 5544) (semantic-list "(name, EnvToInt(\"GLOG_\" #name, value), meaning)" 5544 . 5591)))
          ("DEFINE_int32" (spp-arg-list ("name" "value" "meaning") 3912 . 3934) . ((symbol "DEFINE_VARIABLE" 3939 . 3954) (semantic-list "(GOOGLE_NAMESPACE::int32, name, value, meaning, int32)" 3954 . 4008)))
          ("DECLARE_VARIABLE" (spp-arg-list ("type" "name" "tn") 2750 . 2766) . 
              ((NAMESPACE "namespace" 2808 . 2817) (spp-symbol-merge ((spp-symbol-merge ((symbol "FLAG__namespace_do_not_use_directly_use_DECLARE_" 2818 . 2866) (symbol "tn" 2868 . 2870)) 2818 . 2870) (symbol "_instead" 2872 . 2880)) 2818 . 2880) (semantic-list "{  \\
  extern GOOGLE_GLOG_DLL_DECL type FLAGS_##name;                              \\
  }" 2881 . 2969) (USING "using" 3048 . 3053) (spp-symbol-merge ((spp-symbol-merge ((symbol "FLAG__namespace_do_not_use_directly_use_DECLARE_" 3054 . 3102) (symbol "tn" 3104 . 3106)) 3054 . 3106) (symbol "_instead" 3108 . 3116)) 3054 . 3116) (punctuation ":" 3116 . 3117) (punctuation ":" 3117 . 3118) (spp-symbol-merge ((symbol "FLAGS_" 3118 . 3124) (symbol "name" 3126 . 3130)) 3118 . 3130)))
          ("BASE_COMMANDLINEFLAGS_H__")
          ("GLOG_DEFINE_string" (spp-arg-list ("name" "value" "meaning") 5619 . 5641) . ((symbol "DEFINE_string" 5646 . 5659) (semantic-list "(name, EnvToString(\"GLOG_\" #name, value), meaning)" 5659 . 5709)))
          ("EnvToBool" (spp-arg-list ("envname" "dflt") 5959 . 5974) . ((semantic-list "(!getenv(envname) ? (dflt) : memchr(\"tTyY1\\0\", getenv(envname)[0], 6) != NULL)" 5981 . 6059)))
          ("EnvToInt" (spp-arg-list ("envname" "dflt") 6077 . 6092) . ((semantic-list "(!getenv(envname) ? (dflt) : strtol(getenv(envname), NULL, 10))" 6098 . 6161)))
          ("DECLARE_int32" (spp-arg-list ("name") 3826 . 3832) . ((symbol "DECLARE_VARIABLE" 3837 . 3853) (semantic-list "(GOOGLE_NAMESPACE::int32, name, int32)" 3853 . 3891)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("_GOOGLEINIT_H" variable (:constant-flag t) nil [1636 1649])
            ("GoogleInitializer" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1678 1685])
                    ("void_function" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1718 1723]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [1696 1724])
                    ("GoogleInitializer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [1745 1757])
                            ("f" variable (:type ("void_function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1758 1774]))                          
                        :type ("GoogleInitializer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1727 1789]))                  
                :type "class")
                nil [1651 1792])
            ("REGISTER_MODULE_INITIALIZER" variable (:constant-flag t) nil [1802 1829]))          
      :file "googleinit.h"
      :pointmax 2156
      :fsize 2155
      :lastmodtime '(22840 64239 0 0)
      :unmatched-syntax '((TYPEDEF 1688 . 1695))
      :lexical-table 
        '(("_GOOGLEINIT_H")
          ("REGISTER_MODULE_INITIALIZER" (spp-arg-list ("name" "body") 1829 . 1841) . ((NAMESPACE "namespace" 1862 . 1871) (semantic-list "{                                                   \\
    static void google_init_module_##name () { body; }          \\
    GoogleInitializer google_initializer_module_##name(#name,   \\
            google_init_module_##name);                         \\
  }" 1872 . 2127)))
          )
))
  :file "!Users!ric!Downloads!trunk!thirdparty!glog-0.3.2!src!base!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
