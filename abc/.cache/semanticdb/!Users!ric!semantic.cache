;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("dotspacemacs/layers" function nil nil [123 4405])
            ("dotspacemacs/init" function nil nil [4407 16574])
            ("dotspacemacs/user-init" function nil nil [16576 17941])
            ("dotspacemacs/user-config" function nil nil [17943 18657])
            ("custom-set-variables" code nil nil [18774 22098])
            ("custom-set-faces" code nil nil [22099 22338]))          
      :file ".spacemacs"
      :pointmax 22339
      :fsize 22340
      :lastmodtime '(23262 51690 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode html-mode
      :tags 
        '( ("abc.html" section nil nil [205 239])
            ("Convert a markdown or gfm file into HTML. \"gfm\" refers to Github flavored markdown.
Usage: markdown file-to-convert [options]

Examples:
  markdown README.md -h                         Convert gfm README.md to HTML with code highlighting
  markdown test/test.md -h -s test/style.css    Convert gfm README.md to HTML with code highlighting. Use stylesheet \"style.css\"
  markdown REAMDE.md -f markdown                Convert standard markdown README.md to HTML. Assumes file is not \"gfm\".
  markdown REAMD.md -c cwjohan/node-redis       Convert gfm README.md to HTML. Uses the given CSS file to format the output.
  markdown --help                               Display this usage info.


Options:
  -f, --flavor      Type of file: \"gfm\" or \"markdown\"
  -h, --highlight   Highlight any source code in the output                                               [default: false]
  -s, --stylesheet  Path to the stylesheet to use
  -c, --context     Github user/project to use with #<n> issue number references
  -t, --title       Add a page title to the header (e.g., $FILENAME, $DIRNAME, $BASENAME, or $PATHNAME).
  -v, --verbose     Verbose output                                                                        [default: false]
  -d, --debug       Debug output                                                                          [default: false]

Not enough non-option arguments: got 0, need at least 1" section nil nil [239 1676]))          
      :file "abc.html"
      :pointmax 1676
      :fsize 1675
      :lastmodtime '(23015 6386 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("gflags" include nil nil [48 61])
            ("google.apputils" include nil nil [62 93])
            ("FLAGS" variable nil nil [94 114])
            ("gflags" code nil nil [314 372])
            ("gflags" code nil nil [373 443])
            ("gflags" code nil nil [444 510])
            ("gflags" code nil nil [511 585])
            ("main" function (:arguments 
              ( ("argv" variable nil (reparse-symbol function_parameters) [597 601]))              ) nil [588 803])
            ("if" code nil nil [804 928]))          
      :file "test-gflags.py"
      :pointmax 928
      :fsize 927
      :lastmodtime '(23032 11043 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("iostream" include (:system-flag t) nil [1 20])
            ("stdint.h" include (:system-flag t) nil [21 40])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [42 62])
            ("main" function (:type ("int32_t" type (:type "class") nil nil)) nil [64 197]))          
      :file "a.cc"
      :pointmax 198
      :fsize 197
      :lastmodtime '(23159 62764 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("partition" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [15 24])
                    ("low" variable (:type "int") (reparse-symbol arg-sub-list) [25 33])
                    ("high" variable (:type "int") (reparse-symbol arg-sub-list) [34 43]))                  
                :type "int")
                nil [1 338])
            ("qsort" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [351 360])
                    ("low" variable (:type "int") (reparse-symbol arg-sub-list) [361 369])
                    ("high" variable (:type "int") (reparse-symbol arg-sub-list) [370 379]))                  
                :type "void")
                nil [340 512])
            ("siftdown" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [541 550])
                    ("low" variable (:type "int") (reparse-symbol arg-sub-list) [551 559])
                    ("high" variable (:type "int") (reparse-symbol arg-sub-list) [560 569]))                  
                :type "void")
                nil [527 986])
            ("heapify" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [1001 1010])
                    ("length" variable (:type "int") (reparse-symbol arg-sub-list) [1011 1022]))                  
                :type "void")
                nil [988 1143])
            ("heapsort" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [1159 1168])
                    ("length" variable (:type "int") (reparse-symbol arg-sub-list) [1169 1180]))                  
                :type "void")
                nil [1145 1362])
            ("partition" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [1379 1388])
                    ("low" variable (:type "int") (reparse-symbol arg-sub-list) [1389 1397])
                    ("high" variable (:type "int") (reparse-symbol arg-sub-list) [1398 1407]))                  
                :type "int")
                nil [1365 1606])
            ("qsort" function
               (:arguments 
                  ( ("ptr" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [1619 1628])
                    ("low" variable (:type "int") (reparse-symbol arg-sub-list) [1629 1637])
                    ("high" variable (:type "int") (reparse-symbol arg-sub-list) [1638 1647]))                  
                :type "void")
                nil [1608 2206]))          
      :file "qsort.cc"
      :pointmax 2207
      :fsize 2206
      :lastmodtime '(23248 29843 0 0)
      :unmatched-syntax nil))
  :file "!Users!ric!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
