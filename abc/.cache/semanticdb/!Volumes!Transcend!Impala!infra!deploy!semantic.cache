;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("argparse" include nil nil [1375 1390])
            ("hashlib" include nil nil [1391 1405])
            ("os" include nil nil [1406 1415])
            ("re" include nil nil [1416 1425])
            ("time" include nil nil [1426 1437])
            ("cm_api.api_client" include nil nil [1439 1480])
            ("IMPALA_KUDU_PARCEL_URL" variable nil nil [1482 1640])
            ("IMPALA_KUDU_PARCEL_PRODUCT" variable nil nil [1641 1683])
            ("MAX_PARCEL_REPO_WAIT_SECS" variable nil nil [1684 1714])
            ("MAX_PARCEL_WAIT_SECS" code nil nil [1715 1745])
            ("SERVICE_DEPENDENCIES" variable nil nil [1747 1898])
            ("parse_args" function nil nil [1900 5253])
            ("find_cluster" function (:arguments 
              ( ("api" variable nil (reparse-symbol function_parameters) [5271 5274])
                ("cluster_name" variable nil (reparse-symbol function_parameters) [5276 5288]))              ) nil [5254 5776])
            ("find_dependencies" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [5799 5803])
                ("cluster" variable nil (reparse-symbol function_parameters) [5805 5812]))              ) nil [5777 7359])
            ("check_new_service_does_not_exist" function (:arguments 
              ( ("api" variable nil (reparse-symbol function_parameters) [7397 7400])
                ("cluster" variable nil (reparse-symbol function_parameters) [7402 7409])
                ("new_name" variable nil (reparse-symbol function_parameters) [7411 7419]))              ) nil [7360 7654])
            ("find_template_service" function (:arguments 
              ( ("api" variable nil (reparse-symbol function_parameters) [7681 7684])
                ("cluster" variable nil (reparse-symbol function_parameters) [7686 7693])
                ("based_on" variable nil (reparse-symbol function_parameters) [7695 7703]))              ) nil [7655 8262])
            ("find_master_host" function (:arguments 
              ( ("api" variable nil (reparse-symbol function_parameters) [8284 8287])
                ("cm_hostname" variable nil (reparse-symbol function_parameters) [8289 8300])
                ("master_hostname" variable nil (reparse-symbol function_parameters) [8302 8317]))              ) nil [8263 8872])
            ("get_best_parcel" function (:arguments 
              ( ("api" variable nil (reparse-symbol function_parameters) [8893 8896])
                ("cluster" variable nil (reparse-symbol function_parameters) [8898 8905]))              ) nil [8873 10611])
            ("ensure_parcel_repo_added" function (:arguments 
              ( ("api" variable nil (reparse-symbol function_parameters) [10641 10644]))              ) nil [10612 11104])
            ("wait_for_parcel_stage" function (:arguments 
              ( ("cluster" variable nil (reparse-symbol function_parameters) [11131 11138])
                ("parcel" variable nil (reparse-symbol function_parameters) [11140 11146])
                ("stage" variable nil (reparse-symbol function_parameters) [11148 11153]))              ) nil [11105 11766])
            ("ensure_parcel_activated" function (:arguments 
              ( ("cluster" variable nil (reparse-symbol function_parameters) [11795 11802])
                ("parcel" variable nil (reparse-symbol function_parameters) [11804 11810]))              ) nil [11767 12889])
            ("print_configs" function (:arguments 
              ( ("entity_name" variable nil (reparse-symbol function_parameters) [12908 12919])
                ("config_dict" variable nil (reparse-symbol function_parameters) [12921 12932]))              ) nil [12890 13052])
            ("create_new_service" function (:arguments 
              ( ("api" variable nil (reparse-symbol function_parameters) [13076 13079])
                ("cluster" variable nil (reparse-symbol function_parameters) [13081 13088])
                ("new_name" variable nil (reparse-symbol function_parameters) [13090 13098])
                ("deps" variable nil (reparse-symbol function_parameters) [13100 13104])
                ("scratch_dirs" variable nil (reparse-symbol function_parameters) [13106 13118])
                ("master_host" variable nil (reparse-symbol function_parameters) [13120 13131]))              ) nil [13053 14696])
            ("transform_path" function (:arguments 
              ( ("rcg_name" variable nil (reparse-symbol function_parameters) [14716 14724])
                ("rcg_config_dict" variable nil (reparse-symbol function_parameters) [14726 14741])
                ("rcg_config_name" variable nil (reparse-symbol function_parameters) [14743 14758]))              ) nil [14697 15189])
            ("transform_port" function (:arguments 
              ( ("rcg_name" variable nil (reparse-symbol function_parameters) [15209 15217])
                ("rcg_config_dict" variable nil (reparse-symbol function_parameters) [15219 15234])
                ("rcg_config_name" variable nil (reparse-symbol function_parameters) [15236 15251]))              ) nil [15190 15765])
            ("transform_rcg_config" function (:arguments 
              ( ("rcg" variable nil (reparse-symbol function_parameters) [15791 15794]))              ) nil [15766 17308])
            ("clone_existing_service" function (:arguments 
              ( ("cluster" variable nil (reparse-symbol function_parameters) [17336 17343])
                ("new_name" variable nil (reparse-symbol function_parameters) [17345 17353])
                ("template_service" variable nil (reparse-symbol function_parameters) [17355 17371]))              ) nil [17309 19809])
            ("main" function nil nil [19810 21129])
            ("if" code nil nil [21130 21168]))          
      :file "deploy.py"
      :pointmax 21168
      :fsize 21167
      :lastmodtime '(22925 26281 0 0)
      :unmatched-syntax '((NAME 15910 . 15914) (IF 15936 . 15938) (ELSE 15952 . 15956))))
  :file "!Volumes!Transcend!Impala!infra!deploy!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
