;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("ABSL_BASE_CALL_ONCE_H_" variable (:constant-flag t) nil [1154 1176])
            ("algorithm" include (:system-flag t) nil [1178 1198])
            ("atomic" include (:system-flag t) nil [1199 1216])
            ("cstdint" include (:system-flag t) nil [1217 1235])
            ("type_traits" include (:system-flag t) nil [1236 1258])
            ("absl/base/internal/invoke.h" include nil nil [1260 1298])
            ("absl/base/internal/low_level_scheduling.h" include nil nil [1299 1351])
            ("absl/base/internal/raw_logging.h" include nil nil [1352 1395])
            ("absl/base/internal/scheduling_mode.h" include nil nil [1396 1443])
            ("absl/base/internal/spinlock_wait.h" include nil nil [1444 1489])
            ("absl/base/macros.h" include nil nil [1490 1519])
            ("absl/base/port.h" include nil nil [1520 1547])
            ("absl" type
               (:members 
                  ( ("once_flag" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1567 1583])
                    ("base_internal" type
                       (:members 
                          ( ("ControlWord" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("flag" variable
                                       (:pointer 1
                                        :type ("absl::once_flag" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1672 1694]))                                  
                                :type ("std::atomic" type
                                     (:template-specifier 
                                        ( ("uint32_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [1637 1695]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1585 1697])
                    ("call_once" function
                       (:prototype-flag t
                        :arguments 
                          ( ("flag" variable
                               (:reference 1
                                :type ("absl::once_flag" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2588 2610])
                            ("" variable
                               (:reference 1
                                :type ("Callable" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2611 2621])
                            ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2622 2625])
                            ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2626 2632])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2636 2641]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2573 2642])
                    ("once_flag" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [2972 2979])
                            ("once_flag" function
                               (:constructor-flag t
                                :type ("constexpr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2982 3020])
                            ("private" label nil (reparse-symbol classsubparts) [3114 3122])
                            ("ControlWord" function
                               (:prototype-flag t
                                :pointer 1
                                :parent "base_internal"
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("flag" variable
                                       (:pointer 1
                                        :type ("once_flag" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3182 3198]))                                  
                                :type ("std::atomic" type
                                     (:template-specifier 
                                        ( ("uint32_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [3125 3199])
                            ("control_" variable (:type ("std::atomic" type
                                 (:template-specifier 
                                    ( ("uint32_t" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [3202 3233]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [2953 3236])
                    ("base_internal" type
                       (:members 
                          ( ("LowLevelCallOnce" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("flag" variable
                                       (:pointer 1
                                        :type ("absl::once_flag" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3696 3718])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callable" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3719 3729])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3730 3733])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3734 3740])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3744 3749]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [3674 3750])
                            ("SchedulingHelper" type
                               (:members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [3904 3911])
                                    ("SchedulingHelper" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("mode" variable (:type ("base_internal::SchedulingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3940 3975]))                                          
                                        :type ("SchedulingHelper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3923 4134])
                                    ("SchedulingHelper" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [4138 4298])
                                    ("private" label nil (reparse-symbol classsubparts) [4301 4309])
                                    ("mode_" variable (:type ("base_internal::SchedulingMode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4312 4348])
                                    ("guard_result_" variable (:type "bool") (reparse-symbol classsubparts) [4351 4370]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [3878 4373])
                            ("" type
                               (:members 
                                  ( ("kOnceInit" variable
                                       (:constant-flag t
                                        :default-value (4704 4705)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4692 4705])
                                    ("kOnceRunning" variable
                                       (:constant-flag t
                                        :default-value (4724 4734)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4709 4734])
                                    ("kOnceWaiter" variable
                                       (:constant-flag t
                                        :default-value (4752 4762)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4738 4762])
                                    ("kOnceDone" variable
                                       (:constant-flag t
                                        :default-value (4778 4788)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4766 4788]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [4683 4792])
                            ("CallOnceImpl" function
                               (:arguments 
                                  ( ("control" variable
                                       (:pointer 1
                                        :type ("std::atomic" type
                                             (:template-specifier 
                                                ( ("uint32_t" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4859 4890])
                                    ("scheduling_mode" variable (:type ("base_internal::SchedulingMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4909 4955])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callable" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4956 4966])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4967 4970])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4989 4995])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4999 5004]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [4841 6726])
                            ("ControlWord" function
                               (:pointer 1
                                :typemodifiers ("inline")
                                :arguments 
                                  ( ("flag" variable
                                       (:pointer 1
                                        :type ("once_flag" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6770 6786]))                                  
                                :type ("std::atomic" type
                                     (:template-specifier 
                                        ( ("uint32_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [6728 6816])
                            ("LowLevelCallOnce" function
                               (:arguments 
                                  ( ("flag" variable
                                       (:pointer 1
                                        :type ("absl::once_flag" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6887 6909])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callable" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6910 6920])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6921 6924])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6925 6931])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6935 6940]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [6865 7324]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3464 7327])
                    ("call_once" function
                       (:arguments 
                          ( ("flag" variable
                               (:reference 1
                                :type ("absl::once_flag" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7419 7441])
                            ("" variable
                               (:reference 1
                                :type ("Callable" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7442 7452])
                            ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7453 7456])
                            ("" variable
                               (:reference 1
                                :type ("Args" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7457 7463])
                            ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7467 7472]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7404 7821]))                  
                :type "namespace")
                nil [1549 7824]))          
      :file "call_once.h"
      :pointmax 7879
      :fsize 7878
      :lastmodtime '(23005 43659 0 0)
      :unmatched-syntax '((punctuation 7465 . 7466) (punctuation 7464 . 7465) (punctuation 7463 . 7464) (punctuation 7462 . 7463) (punctuation 7451 . 7452) (punctuation 7402 . 7403) (symbol 7398 . 7402) (punctuation 7396 . 7397) (punctuation 7395 . 7396) (punctuation 7394 . 7395) (TYPENAME 7386 . 7394) (punctuation 7384 . 7385) (symbol 7376 . 7384) (TYPENAME 7367 . 7375) (punctuation 7366 . 7367) (TEMPLATE 7357 . 7365) (punctuation 6933 . 6934) (punctuation 6932 . 6933) (punctuation 6931 . 6932) (punctuation 6930 . 6931) (punctuation 6919 . 6920) (punctuation 6863 . 6864) (symbol 6859 . 6863) (punctuation 6857 . 6858) (punctuation 6856 . 6857) (punctuation 6855 . 6856) (TYPENAME 6847 . 6855) (punctuation 6845 . 6846) (symbol 6837 . 6845) (TYPENAME 6828 . 6836) (punctuation 6827 . 6828) (TEMPLATE 6818 . 6826) (punctuation 4997 . 4998) (punctuation 4996 . 4997) (punctuation 4995 . 4996) (punctuation 4994 . 4995) (punctuation 4965 . 4966) (punctuation 4839 . 4840) (symbol 4835 . 4839) (punctuation 4833 . 4834) (punctuation 4832 . 4833) (punctuation 4831 . 4832) (TYPENAME 4823 . 4831) (punctuation 4821 . 4822) (symbol 4813 . 4821) (TYPENAME 4804 . 4812) (punctuation 4803 . 4804) (TEMPLATE 4794 . 4802) (EXPLICIT 3914 . 3922) (punctuation 3742 . 3743) (punctuation 3741 . 3742) (punctuation 3740 . 3741) (punctuation 3739 . 3740) (punctuation 3728 . 3729) (punctuation 3672 . 3673) (symbol 3668 . 3672) (punctuation 3666 . 3667) (punctuation 3665 . 3666) (punctuation 3664 . 3665) (TYPENAME 3656 . 3664) (punctuation 3654 . 3655) (symbol 3646 . 3654) (TYPENAME 3637 . 3645) (punctuation 3636 . 3637) (TEMPLATE 3627 . 3635) (punctuation 3110 . 3111) (DELETE 3104 . 3110) (punctuation 3102 . 3103) (semantic-list 3083 . 3101) (punctuation 3082 . 3083) (OPERATOR 3074 . 3082) (punctuation 3072 . 3073) (symbol 3063 . 3072) (punctuation 3059 . 3060) (DELETE 3053 . 3059) (punctuation 3051 . 3052) (semantic-list 3032 . 3050) (symbol 3023 . 3032) (punctuation 2634 . 2635) (punctuation 2633 . 2634) (punctuation 2632 . 2633) (punctuation 2631 . 2632) (punctuation 2620 . 2621) (punctuation 2571 . 2572) (symbol 2567 . 2571) (punctuation 2565 . 2566) (punctuation 2564 . 2565) (punctuation 2563 . 2564) (TYPENAME 2555 . 2563) (punctuation 2553 . 2554) (symbol 2545 . 2553) (TYPENAME 2536 . 2544) (punctuation 2535 . 2536) (TEMPLATE 2526 . 2534))
      :lexical-table 
        '(("ABSL_BASE_CALL_ONCE_H_")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("ABSL_BASE_MACROS_H_" variable (:constant-flag t) nil [1233 1252])
            ("cassert" include (:system-flag t) nil [1254 1272])
            ("cstddef" include (:system-flag t) nil [1273 1291])
            ("absl/base/port.h" include nil nil [1293 1320])
            ("absl" type
               (:members 
                  ( ("macros_internal" type (:type "namespace") (reparse-symbol namespacesubparts) [1725 1829]))                  
                :type "namespace")
                nil [1708 1861])
            ("ABSL_ARRAYSIZE" variable (:constant-flag t) nil [1889 1903])
            ("absl" type
               (:members 
                  ( ("base_internal" type
                       (:members 
                          ( ("LinkerInitialized" type
                               (:members 
                                  ( ("kLinkerInitialized" variable
                                       (:constant-flag t
                                        :default-value (3034 3035)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [3013 3035]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [2986 3039]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2960 3041]))                  
                :type "namespace")
                nil [2943 3071])
            ("ABSL_FALLTHROUGH_INTENDED" variable (:constant-flag t) nil [4927 4952])
            ("ABSL_DEPRECATED" variable (:constant-flag t) nil [5768 5783])
            ("ABSL_ASSERT" variable (:constant-flag t) nil [7102 7113]))          
      :file "macros.h"
      :pointmax 7236
      :fsize 7235
      :lastmodtime '(23033 30525 0 0)
      :unmatched-syntax '((punctuation 1826 . 1827) (semantic-list 1823 . 1826) (semantic-list 1790 . 1823) (CHAR 1785 . 1789) (punctuation 1783 . 1784) (symbol 1782 . 1783) (symbol 1775 . 1781) (punctuation 1773 . 1774) (symbol 1772 . 1773) (TYPENAME 1763 . 1771) (punctuation 1762 . 1763) (TEMPLATE 1753 . 1761))
      :lexical-table 
        '(("ABSL_ASSERT" (spp-arg-list ("expr") 7113 . 7119) . ((semantic-list "(ABSL_PREDICT_TRUE((expr)) ? (void)0 : [] { assert(false && #expr); }())" 7124 . 7196)))
          ("ABSL_ARRAYSIZE" (spp-arg-list ("array") 1903 . 1910) . ((semantic-list "(sizeof(::absl::macros_internal::ArraySizeHelper(array)))" 1915 . 1972)))
          ("ABSL_FALLTHROUGH_INTENDED" . 
              ((DO "do" 4957 . 4959) (semantic-list "{                            \\
  }" 4960 . 4994) (WHILE "while" 4995 . 5000) (semantic-list "(0)" 5001 . 5004)))
          ("ABSL_DEPRECATED" (spp-arg-list ("message") 5783 . 5792))
          ("ABSL_BASE_MACROS_H_")
          )
)
    (semanticdb-table "semanticdb-table"
      :file "port.h"
      :fsize 936
      :lastmodtime '(23005 43659 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("absl/base/call_once.h" include nil nil [599 631])
            ("thread" include (:system-flag t) nil [633 650])
            ("vector" include (:system-flag t) nil [651 668])
            ("gtest/gtest.h" include nil nil [670 694])
            ("absl/base/thread_annotations.h" include nil nil [695 736])
            ("absl/synchronization/mutex.h" include nil nil [737 776])
            ("absl" type
               (:members 
                  ( ("unnamed" type
                       (:members 
                          ( ("once" variable (:type ("absl::once_flag" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [808 829])
                            ("counters_mu" variable (:type ("Mutex" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [830 848])
                            ("GUARDED_BY" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("counters_mu" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [886 898]))                                  
                                :type ("running_thread_count" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [854 903])
                            ("GUARDED_BY" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("counters_mu" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [942 954]))                                  
                                :type ("call_once_invoke_count" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [908 959])
                            ("GUARDED_BY" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("counters_mu" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1000 1012]))                                  
                                :type ("call_once_finished_count" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [964 1017])
                            ("GUARDED_BY" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("counters_mu" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1056 1068]))                                  
                                :type ("call_once_return_count" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [1022 1073])
                            ("false" variable (:type "int") (reparse-symbol namespacesubparts) [1119 1125])
                            ("WaitAndIncrement" function (:type "void") (reparse-symbol namespacesubparts) [1201 1408])
                            ("ThreadBody" function (:type "void") (reparse-symbol namespacesubparts) [1410 1622])
                            ("EXCLUSIVE_LOCKS_REQUIRED" function
                               (:arguments 
                                  ( ("" variable (:type ("counters_mu" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1733 1745]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1708 1895])
                            ("TEST" function
                               (:arguments 
                                  ( ("" variable (:type ("CallOnceTest" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1902 1915])
                                    ("" variable (:type ("ExecutionCount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1916 1931]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1897 2996]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [795 2999]))                  
                :type "namespace")
                nil [778 3015]))          
      :file "call_once_test.cc"
      :pointmax 3035
      :fsize 3034
      :lastmodtime '(23005 43659 0 0)
      :unmatched-syntax '((semantic-list 1700 . 1707) (symbol 1685 . 1700) (BOOL 1680 . 1684) (punctuation 1117 . 1118) (semantic-list 1103 . 1116) (symbol 1093 . 1103) (symbol 1079 . 1092) (BOOL 1074 . 1078) (INT 1018 . 1021) (INT 960 . 963) (INT 904 . 907) (INT 850 . 853)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("ABSL_BASE_THREAD_ANNOTATIONS_H_" variable (:constant-flag t) nil [1663 1694])
            ("THREAD_ANNOTATION_ATTRIBUTE__" variable (:constant-flag t) nil [1726 1755])
            ("GUARDED_BY" variable (:constant-flag t) nil [2142 2152])
            ("GUARDED_VAR" variable (:constant-flag t) nil [2209 2220])
            ("PT_GUARDED_BY" variable (:constant-flag t) nil [2752 2765])
            ("PT_GUARDED_VAR" variable (:constant-flag t) nil [2825 2839])
            ("ACQUIRED_AFTER" variable (:constant-flag t) nil [3318 3332])
            ("ACQUIRED_BEFORE" variable (:constant-flag t) nil [3410 3425])
            ("EXCLUSIVE_LOCKS_REQUIRED" variable (:constant-flag t) nil [3879 3903])
            ("SHARED_LOCKS_REQUIRED" variable (:constant-flag t) nil [3991 4012])
            ("LOCKS_EXCLUDED" variable (:constant-flag t) nil [4288 4302])
            ("LOCK_RETURNED" variable (:constant-flag t) nil [4594 4607])
            ("LOCKABLE" variable (:constant-flag t) nil [4764 4772])
            ("SCOPED_LOCKABLE" variable (:constant-flag t) nil [5174 5189])
            ("EXCLUSIVE_LOCK_FUNCTION" variable (:constant-flag t) nil [5378 5401])
            ("SHARED_LOCK_FUNCTION" variable (:constant-flag t) nil [5629 5649])
            ("UNLOCK_FUNCTION" variable (:constant-flag t) nil [5883 5898])
            ("EXCLUSIVE_TRYLOCK_FUNCTION" variable (:constant-flag t) nil [6456 6482])
            ("SHARED_TRYLOCK_FUNCTION" variable (:constant-flag t) nil [6572 6595])
            ("ASSERT_EXCLUSIVE_LOCK" variable (:constant-flag t) nil [6838 6859])
            ("ASSERT_SHARED_LOCK" variable (:constant-flag t) nil [6944 6962])
            ("NO_THREAD_SAFETY_ANALYSIS" variable (:constant-flag t) nil [7307 7332])
            ("TS_UNCHECKED" variable (:constant-flag t) nil [7791 7803])
            ("TS_FIXME" variable (:constant-flag t) nil [8039 8047])
            ("NO_THREAD_SAFETY_ANALYSIS_FIXME" variable (:constant-flag t) nil [8413 8444])
            ("GUARDED_BY_FIXME" variable (:constant-flag t) nil [8675 8691])
            ("TS_UNCHECKED_READ" variable (:constant-flag t) nil [8901 8918])
            ("thread_safety_analysis" type
               (:members 
                  ( ("ts_unchecked_read" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :constant-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9147 9158]))                          
                        :constant-flag t
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [9091 9200])
                    ("ts_unchecked_read" function
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type ("T" type (:type "class") nil nil)
                        :arguments 
                          ( ("v" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9252 9257]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [9202 9299]))                  
                :type "namespace")
                nil [8969 9302]))          
      :file "thread_annotations.h"
      :pointmax 9384
      :fsize 9383
      :lastmodtime '(23033 30525 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("LOCK_RETURNED" (spp-arg-list ("x") 4607 . 4610) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 4615 . 4644) (semantic-list "(lock_returned(x))" 4644 . 4662)))
          ("ASSERT_EXCLUSIVE_LOCK" (spp-arg-list ("...") 6859 . 6864) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 6869 . 6898) (semantic-list "(assert_exclusive_lock(__VA_ARGS__))" 6898 . 6934)))
          ("TS_UNCHECKED_READ" (spp-arg-list ("x") 8918 . 8921) . 
              ((symbol "thread_safety_analysis" 8922 . 8944) (punctuation ":" 8944 . 8945) (punctuation ":" 8945 . 8946) (symbol "ts_unchecked_read" 8946 . 8963) (semantic-list "(x)" 8963 . 8966)))
          ("SCOPED_LOCKABLE" . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 5194 . 5223) (semantic-list "(scoped_lockable)" 5223 . 5240)))
          ("SHARED_LOCK_FUNCTION" (spp-arg-list ("...") 5649 . 5654) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 5659 . 5688) (semantic-list "(shared_lock_function(__VA_ARGS__))" 5688 . 5723)))
          ("SHARED_LOCKS_REQUIRED" (spp-arg-list ("...") 4012 . 4017) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 4022 . 4051) (semantic-list "(shared_locks_required(__VA_ARGS__))" 4051 . 4087)))
          ("SHARED_TRYLOCK_FUNCTION" (spp-arg-list ("...") 6595 . 6600) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 6605 . 6634) (semantic-list "(shared_trylock_function(__VA_ARGS__))" 6634 . 6672)))
          ("TS_FIXME" (spp-arg-list ("x") 8047 . 8050) . ((string "\"\"" 8051 . 8053)))
          ("PT_GUARDED_VAR" . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 2842 . 2871) (semantic-list "(pt_guarded)" 2871 . 2883)))
          ("ACQUIRED_BEFORE" (spp-arg-list ("...") 3425 . 3430) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 3435 . 3464) (semantic-list "(acquired_before(__VA_ARGS__))" 3464 . 3494)))
          ("EXCLUSIVE_LOCKS_REQUIRED" (spp-arg-list ("...") 3903 . 3908) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 3913 . 3942) (semantic-list "(exclusive_locks_required(__VA_ARGS__))" 3942 . 3981)))
          ("EXCLUSIVE_LOCK_FUNCTION" (spp-arg-list ("...") 5401 . 5406) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 5411 . 5440) (semantic-list "(exclusive_lock_function(__VA_ARGS__))" 5440 . 5478)))
          ("ASSERT_SHARED_LOCK" (spp-arg-list ("...") 6962 . 6967) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 6972 . 7001) (semantic-list "(assert_shared_lock(__VA_ARGS__))" 7001 . 7034)))
          ("TS_UNCHECKED" (spp-arg-list ("x") 7803 . 7806) . ((string "\"\"" 7807 . 7809)))
          ("GUARDED_BY_FIXME" (spp-arg-list ("x") 8691 . 8694))
          ("GUARDED_BY" (spp-arg-list ("x") 2152 . 2155) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 2156 . 2185) (semantic-list "(guarded_by(x))" 2185 . 2200)))
          ("GUARDED_VAR" . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 2223 . 2252) (semantic-list "(guarded)" 2252 . 2261)))
          ("NO_THREAD_SAFETY_ANALYSIS" . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 7337 . 7366) (semantic-list "(no_thread_safety_analysis)" 7366 . 7393)))
          ("NO_THREAD_SAFETY_ANALYSIS_FIXME" . ((symbol "NO_THREAD_SAFETY_ANALYSIS" 8446 . 8471)))
          ("THREAD_ANNOTATION_ATTRIBUTE__" (spp-arg-list ("x") 1755 . 1758) . ((symbol "__attribute__" 1761 . 1774) (semantic-list "((x))" 1774 . 1779)))
          ("UNLOCK_FUNCTION" (spp-arg-list ("...") 5898 . 5903) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 5908 . 5937) (semantic-list "(unlock_function(__VA_ARGS__))" 5937 . 5967)))
          ("LOCKS_EXCLUDED" (spp-arg-list ("...") 4302 . 4307) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 4312 . 4341) (semantic-list "(locks_excluded(__VA_ARGS__))" 4341 . 4370)))
          ("LOCKABLE" . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 4777 . 4806) (semantic-list "(lockable)" 4806 . 4816)))
          ("EXCLUSIVE_TRYLOCK_FUNCTION" (spp-arg-list ("...") 6482 . 6487) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 6492 . 6521) (semantic-list "(exclusive_trylock_function(__VA_ARGS__))" 6521 . 6562)))
          ("ABSL_BASE_THREAD_ANNOTATIONS_H_")
          ("PT_GUARDED_BY" (spp-arg-list ("x") 2765 . 2768) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 2769 . 2798) (semantic-list "(pt_guarded_by(x))" 2798 . 2816)))
          ("ACQUIRED_AFTER" (spp-arg-list ("...") 3332 . 3337) . ((symbol "THREAD_ANNOTATION_ATTRIBUTE__" 3342 . 3371) (semantic-list "(acquired_after(__VA_ARGS__))" 3371 . 3400)))
          )
))
  :file "!Volumes!Transcend!abseil-cpp!absl!base!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
