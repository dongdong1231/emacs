;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [612 632])
            ("exception" include (:system-flag t) nil [633 653])
            ("functional" include (:system-flag t) nil [654 675])
            ("memory" include (:system-flag t) nil [676 693])
            ("type_traits" include (:system-flag t) nil [694 716])
            ("vector" include (:system-flag t) nil [717 734])
            ("folly/Optional.h" include (:system-flag t) nil [736 763])
            ("folly/Portability.h" include (:system-flag t) nil [764 794])
            ("folly/ScopeGuard.h" include (:system-flag t) nil [795 824])
            ("folly/Try.h" include (:system-flag t) nil [825 847])
            ("folly/Utility.h" include (:system-flag t) nil [848 874])
            ("folly/executors/DrivableExecutor.h" include (:system-flag t) nil [875 920])
            ("folly/futures/FutureException.h" include (:system-flag t) nil [921 963])
            ("folly/futures/Promise.h" include (:system-flag t) nil [964 998])
            ("folly/futures/detail/Types.h" include (:system-flag t) nil [999 1038])
            ("folly/futures/Future-pre.h" include (:system-flag t) nil [1078 1115])
            ("folly/futures/helpers.h" include (:system-flag t) nil [1261 1295])
            ("folly" type
               (:members 
                  ( ("Future" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1316 1348])
                    ("SemiFuture" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1350 1386])
                    ("futures" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("FutureBase" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [1466 1473])
                                            ("value_type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1476 1497])
                                            ("FutureBase" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :type ("T2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1792 1796])
                                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1797 1801]))                                                  
                                                :type ("FutureBase" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [1781 1802])
                                            ("FutureBase" function
                                               (:template 
                                                  ( ("T2" type (:type "class") nil nil))                                                  
                                                :type ("FutureBase" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :typemodifiers ("typename")
                                                        :type ("std::enable_if::type" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1865 1927]))                                                  
                                                :constructor-flag t
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) [1806 1928])
                                            ("FutureBase" function
                                               (:prototype-flag t
                                                :constructor-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2087 2098])
                                                    ("" variable
                                                       (:reference 1
                                                        :type ("Args" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2099 2105])
                                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2109 2114]))                                                  
                                                :type ("FutureBase" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [2076 2115])
                                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [2192 2201])
                                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [2228 2237])
                                            ("FutureBase" function
                                               (:prototype-flag t
                                                :destructor-flag t
                                                :type "void")
                                                (reparse-symbol classsubparts) [2346 2360])
                                            ("isReady" function
                                               (:prototype-flag t
                                                :methodconst-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [2855 2876])
                                            ("hasValue" function
                                               (:prototype-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [2916 2932])
                                            ("hasException" function
                                               (:prototype-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [2976 2996])
                                            ("poll" function
                                               (:prototype-flag t
                                                :type ("Optional" type
                                                     (:template-specifier 
                                                        ( ("Try" type (:template-specifier 
                                                            ( ("T" type nil nil nil))                                                            ) nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol classsubparts) [3162 3186])
                                            ("setCallback_" function
                                               (:template 
                                                  ( ("F" type (:type "class") nil nil))                                                  
                                                :type "void"
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :type ("F" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3486 3489])
                                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3490 3495]))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) [3447 3496])
                                            ("isActive" function (:type "bool") (reparse-symbol classsubparts) [3500 3551])
                                            ("raise" function
                                               (:template 
                                                  ( ("E" type (:type "class") nil nil))                                                  
                                                :type "void"
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :type ("E" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3587 3590])
                                                    ("" variable (:type ("exception" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3591 3601]))                                                  )
                                                (reparse-symbol classsubparts) [3555 3720])
                                            ("raise" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("interrupt" variable (:type ("exception_wrapper" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4273 4301]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [4262 4302])
                                            ("cancel" function (:type "void") (reparse-symbol classsubparts) [4306 4358])
                                            ("protected" label nil (reparse-symbol classsubparts) [4361 4371])
                                            ("Promise" friend nil (reparse-symbol classsubparts) [4374 4394])
                                            ("SemiFuture" type
                                               (:template 
                                                  ( ("" type nil nil nil))                                                  
                                                :type "class"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [4401 4444])
                                            ("Future" type
                                               (:template 
                                                  ( ("" type nil nil nil))                                                  
                                                :type "class"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [4447 4486])
                                            ("core_" variable (:type ("corePtr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4566 4580])
                                            ("FutureBase" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("obj" variable (:type ("corePtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4604 4616]))                                                  
                                                :type ("FutureBase" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4593 4632])
                                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [4689 4698])
                                            ("detach" function
                                               (:prototype-flag t
                                                :type "void")
                                                (reparse-symbol classsubparts) [4702 4716])
                                            ("throwIfInvalid" function
                                               (:prototype-flag t
                                                :methodconst-flag t
                                                :type "void")
                                                (reparse-symbol classsubparts) [4720 4748])
                                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [4807 4816])
                                            ("getExecutor" function
                                               (:pointer 1
                                                :type ("Executor" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [4820 4882])
                                            ("setExecutor" function
                                               (:arguments 
                                                  ( ("x" variable
                                                       (:pointer 1
                                                        :type ("Executor" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4903 4915])
                                                    ("priority" variable
                                                       (:default-value "Executor"
                                                        :type ("int8_t" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4916 4942])
                                                    ("" variable (:type ("MID_PRI" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4944 4952]))                                                  
                                                :type "void")
                                                (reparse-symbol classsubparts) [4886 4995])
                                            ("thenImplementation" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :type ("F" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [5245 5248])
                                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5249 5254])
                                                    ("" variable (:type ("futures::detail::argResult" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5255 5282])
                                                    ("" variable (:type ("isTry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5282 5288])
                                                    ("" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5289 5291])
                                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5292 5297]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [5219 5302])
                                            ("thenImplementation" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :type ("F" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [5559 5562])
                                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5563 5568])
                                                    ("" variable (:type ("futures::detail::argResult" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5569 5596])
                                                    ("" variable (:type ("isTry" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5596 5602])
                                                    ("" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5603 5605])
                                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5606 5611]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [5533 5616]))                                          )
                                        (reparse-symbol namespacesubparts) [1427 5619]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1408 5621]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1388 5643])
                    ("SemiFuture" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [5746 5754])
                            ("futures::detail::FutureBase" variable (:type "int") (reparse-symbol classsubparts) [5770 5801])
                            ("futures::detail::DeferredExecutor" variable (:type "int") (reparse-symbol classsubparts) [5829 5863])
                            ("public" label nil (reparse-symbol classsubparts) [5866 5873])
                            ("makeEmpty" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :type ("SemiFuture" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [5876 5909])
                            ("Base::value_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [6089 6115])
                            ("SemiFuture" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6410 6414])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6415 6419]))                                  
                                :type ("SemiFuture" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6399 6452])
                            ("SemiFuture" function
                               (:template 
                                  ( ("T2" type (:type "class") nil nil))                                  
                                :type ("SemiFuture" type (:type "class") nil nil)
                                :arguments 
                                  ( ("p" variable
                                       (:pointer 1
                                        :typemodifiers ("typename")
                                        :default-value "nullptr"
                                        :type ("std::enable_if::type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6515 6588]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [6456 6608])
                            ("SemiFuture" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6767 6778])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6779 6785])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6789 6794]))                                  
                                :type ("SemiFuture" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6756 6849])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [6939 6948])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [7033 7042])
                            ("Base::cancel" variable (:type "int") (reparse-symbol classsubparts) [7052 7065])
                            ("Base::hasException" variable (:type "int") (reparse-symbol classsubparts) [7074 7093])
                            ("Base::hasValue" variable (:type "int") (reparse-symbol classsubparts) [7102 7117])
                            ("Base::isActive" variable (:type "int") (reparse-symbol classsubparts) [7126 7141])
                            ("Base::isReady" variable (:type "int") (reparse-symbol classsubparts) [7150 7164])
                            ("Base::poll" variable (:type "int") (reparse-symbol classsubparts) [7173 7184])
                            ("Base::raise" variable (:type "int") (reparse-symbol classsubparts) [7193 7205])
                            ("Base::setCallback_" variable (:type "int") (reparse-symbol classsubparts) [7214 7233])
                            ("Base::value" variable (:type "int") (reparse-symbol classsubparts) [7242 7254])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [7347 7356])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [7394 7403])
                            ("boost_" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [10806 10820])
                            ("private" label nil (reparse-symbol classsubparts) [10823 10831])
                            ("Promise" friend nil (reparse-symbol classsubparts) [10834 10854])
                            ("FutureBase" type
                               (:template 
                                  ( ("" type nil nil nil))                                  
                                :type "class"
                                :prototype t
                                :parent "futures::detail")
                                (reparse-symbol classsubparts) [10861 10921])
                            ("SemiFuture" type
                               (:template 
                                  ( ("" type nil nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [10924 10967])
                            ("Base::corePtr" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [10977 11000])
                            ("Base::setExecutor" variable (:type "int") (reparse-symbol classsubparts) [11009 11027])
                            ("Base::throwIfInvalid" variable (:type "int") (reparse-symbol classsubparts) [11036 11057])
                            ("makeSemiFuture" function
                               (:template 
                                  ( ("T2" type (:type "class") nil nil))                                  
                                :type ("SemiFuture" type
                                     (:template-specifier 
                                        ( ("T2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Try" type
                                             (:template-specifier 
                                                ( ("T2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [11120 11129]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [11061 11131])
                            ("SemiFuture" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("obj" variable (:type ("corePtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11155 11167]))                                  
                                :type ("SemiFuture" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11144 11182])
                            ("Base" function
                               (:arguments 
                                  ( ("" variable (:type ("futures::detail::EmptyConstruct" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11261 11294]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [11256 11298]))                          
                        :superclasses 
                          ( ("futures::detail::FutureBase" type
                               (:protection "private"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [5666 11301])
                    ("Future" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [11379 11387])
                            ("futures::detail::FutureBase" variable (:type "int") (reparse-symbol classsubparts) [11403 11434])
                            ("public" label nil (reparse-symbol classsubparts) [11437 11444])
                            ("Base::value_type" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [11595 11621])
                            ("Future" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [11912 11916])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11917 11921]))                                  
                                :type ("Future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11905 11954])
                            ("Future" function
                               (:template 
                                  ( ("T2" type (:type "class") nil nil))                                  
                                :type ("Future" type (:type "class") nil nil)
                                :arguments 
                                  ( ("p" variable
                                       (:pointer 1
                                        :typemodifiers ("typename")
                                        :default-value "nullptr"
                                        :type ("std::enable_if::type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12013 12086]))                                  
                                :constructor-flag t)
                                (reparse-symbol classsubparts) [11958 12106])
                            ("Future" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("in_place_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12261 12272])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12273 12279])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12283 12288]))                                  
                                :type ("Future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12254 12343])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [12417 12426])
                            ("Future" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Future" type
                                             (:template-specifier 
                                                ( ("T2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [12733 12745]))                                  
                                :type ("Future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [12726 12747])
                            ("Future" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Future" type
                                             (:template-specifier 
                                                ( ("T2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [13027 13039]))                                  
                                :type ("Future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13020 13041])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Future" type
                                             (:template-specifier 
                                                ( ("T2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [13269 13281]))                                  
                                :type ("Future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13251 13283])
                            ("Base::cancel" variable (:type "int") (reparse-symbol classsubparts) [13293 13306])
                            ("Base::hasException" variable (:type "int") (reparse-symbol classsubparts) [13315 13334])
                            ("Base::hasValue" variable (:type "int") (reparse-symbol classsubparts) [13343 13358])
                            ("Base::isActive" variable (:type "int") (reparse-symbol classsubparts) [13367 13382])
                            ("Base::isReady" variable (:type "int") (reparse-symbol classsubparts) [13391 13405])
                            ("Base::poll" variable (:type "int") (reparse-symbol classsubparts) [13414 13425])
                            ("Base::raise" variable (:type "int") (reparse-symbol classsubparts) [13434 13446])
                            ("Base::setCallback_" variable (:type "int") (reparse-symbol classsubparts) [13455 13474])
                            ("Base::value" variable (:type "int") (reparse-symbol classsubparts) [13483 13495])
                            ("makeEmpty" function
                               (:prototype-flag t
                                :typemodifiers ("static")
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [13499 13528])
                            ("noexcept" variable (:type "int") (reparse-symbol classsubparts) [13665 13674])
                            ("getVia" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("e" variable
                                       (:pointer 1
                                        :type ("DrivableExecutor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13886 13906]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13877 13907])
                            ("getTryVia" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("e" variable
                                       (:pointer 1
                                        :type ("DrivableExecutor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14117 14137]))                                  
                                :type ("Try" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [14099 14138])
                            ("unwrap" function
                               (:prototype-flag t
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14359 14379])
                            ("then" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16295 16298])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16299 16304]))                                  
                                :type ("R::Return" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16271 16413])
                            ("then" function
                               (:prototype-flag t
                                :arguments ((nil variable (:pointer (("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16805 16810]) ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [16809 16813])) :type ("R" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16787 16814]) ("instance" variable (:pointer 1 :type ("Caller" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) #<overlay from 16821 to 16838 in Future.h>))
                                :type "int")
                                (reparse-symbol classsubparts) [16775 16839])
                            ("then" function
                               (:arguments 
                                  ( ("x" variable
                                       (:pointer 1
                                        :type ("Executor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17254 17266])
                                    ("" variable
                                       (:reference 1
                                        :type ("Arg" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17267 17272])
                                    ("" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17273 17277])
                                    ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17278 17284])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17288 17293]))                                  
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [17244 17457])
                            ("then" function
                               (:prototype-flag t
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [17617 17637])
                            ("unit" function (:type ("Future" type
                                 (:template-specifier 
                                    ( ("Unit" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [17811 17855])
                            ("onError" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18691 18694])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18695 18700]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [18676 18701])
                            ("onError" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19059 19062])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19063 19068]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19044 19069])
                            ("onError" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19358 19361])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19362 19367]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19343 19368])
                            ("onError" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19650 19653])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19654 19659]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [19635 19660])
                            ("ensure" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [19997 20000])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20001 20006]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [19959 20007])
                            ("onTimeout" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20451 20460])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20461 20464])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20465 20470])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [20471 20492]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [20410 20494])
                            ("within" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21408 21417])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21418 21439]))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [21391 21441])
                            ("within" function
                               (:template 
                                  ( ("E" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21650 21659])
                                    ("exception" variable (:type ("E" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21660 21672])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21673 21694]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [21612 21696])
                            ("delayed" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21856 21865])
                                    ("" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21866 21887]))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [21838 21889])
                            ("get" function
                               (:prototype-flag t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22043 22051])
                            ("get" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22230 22243]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22224 22244])
                            ("getTry" function
                               (:prototype-flag t
                                :type ("Try" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [22293 22310])
                            ("willEqual" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Future" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [23405 23416]))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [23382 23417])
                            ("filter" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23635 23638])
                                    ("" variable (:type ("predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23639 23649]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [23597 23650])
                            ("reduce" function
                               (:template 
                                  ( ("I" type (:type "class") nil nil)
                                    ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("I" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("I" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23822 23825])
                                    ("" variable (:type ("initial" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23826 23834])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23835 23838])
                                    ("" variable (:type ("func" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23839 23844]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [23775 23845])
                            ("thenMulti" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Callback" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24143 24153])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24154 24157])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callbacks" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24158 24169])
                                    ("" variable (:type ("fns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24173 24177]))                                  
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24128 24350])
                            ("thenMulti" function
                               (:template 
                                  ( ("Callback" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Callback" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24397 24407])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24408 24411]))                                  )
                                (reparse-symbol classsubparts) [24354 24512])
                            ("thenMultiWithExecutor" function
                               (:arguments 
                                  ( ("x" variable
                                       (:pointer 1
                                        :type ("Executor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24875 24887])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callback" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24888 24898])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24899 24902])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callbacks" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24903 24914])
                                    ("" variable (:type ("fns" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24918 24922]))                                  
                                :type ("auto" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [24848 25204])
                            ("thenMultiWithExecutor" function
                               (:template 
                                  ( ("Callback" type (:type "class") nil nil))                                  
                                :type ("auto" type (:type "class") nil nil)
                                :arguments 
                                  ( ("x" variable
                                       (:pointer 1
                                        :type ("Executor" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25263 25275])
                                    ("" variable
                                       (:reference 1
                                        :type ("Callback" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25276 25286])
                                    ("" variable (:type ("fn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25287 25290]))                                  )
                                (reparse-symbol classsubparts) [25208 25411])
                            ("semi" function (:type ("SemiFuture" type
                                 (:template-specifier 
                                    ( ("T" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [25535 25605])
                            ("protected" label nil (reparse-symbol classsubparts) [25608 25618])
                            ("Promise" friend nil (reparse-symbol classsubparts) [25621 25641])
                            ("FutureBase" type
                               (:template 
                                  ( ("" type nil nil nil))                                  
                                :type "class"
                                :prototype t
                                :parent "futures::detail")
                                (reparse-symbol classsubparts) [25648 25708])
                            ("Future" type
                               (:template 
                                  ( ("" type nil nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [25711 25750])
                            ("SemiFuture" type
                               (:template 
                                  ( ("" type nil nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol classsubparts) [25753 25796])
                            ("Base::setExecutor" variable (:type "int") (reparse-symbol classsubparts) [25806 25824])
                            ("Base::throwIfInvalid" variable (:type "int") (reparse-symbol classsubparts) [25833 25854])
                            ("Base::corePtr" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [25863 25886])
                            ("Future" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("obj" variable (:type ("corePtr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25906 25918]))                                  
                                :type ("Future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [25899 25933])
                            ("Base" function
                               (:arguments 
                                  ( ("" variable (:type ("futures::detail::EmptyConstruct" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26008 26041]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [26003 26045])
                            ("makeFuture" function
                               (:template 
                                  ( ("T2" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("T2" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Try" type
                                             (:template-specifier 
                                                ( ("T2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [26100 26109]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [26049 26111])
                            ("times" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("n" variable (:type "int") (reparse-symbol arg-sub-list) [26306 26312])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26313 26316])
                                    ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26317 26323]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [26259 26324])
                            ("when" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("p" variable (:type "bool") (reparse-symbol arg-sub-list) [26529 26536])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26537 26540])
                                    ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26541 26547]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [26483 26548])
                            ("whileDo" function
                               (:template 
                                  ( ("P" type (:type "class") nil nil)
                                    ("F" type (:type "class") nil nil))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("P" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26844 26847])
                                    ("" variable (:type ("predicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26848 26858])
                                    ("" variable
                                       (:reference 1
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [26859 26862])
                                    ("" variable (:type ("thunk" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26863 26869]))                                  
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [26786 26870]))                          
                        :superclasses 
                          ( ("futures::detail::FutureBase" type
                               (:protection "private"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [11303 26873]))                  
                :type "namespace")
                nil [1297 26876])
            ("folly/futures/Future-inl.h" include (:system-flag t) nil [26897 26934]))          
      :file "Future.h"
      :pointmax 26935
      :fsize 26934
      :lastmodtime '(23235 25230 0 0)
      :unmatched-syntax '((punctuation 26861 . 26862) (punctuation 26846 . 26847) (punctuation 26539 . 26540) (punctuation 26315 . 26316) (punctuation 26108 . 26109) (semantic-list 26039 . 26041) (punctuation 26001 . 26002) (symbol 25986 . 25994) (semantic-list 25952 . 25985) (symbol 25946 . 25952) (EXPLICIT 25937 . 25945) (EXPLICIT 25890 . 25898) (USING 25857 . 25862) (USING 25827 . 25832) (USING 25800 . 25805) (punctuation 25644 . 25645) (punctuation 25643 . 25644) (symbol 25642 . 25643) (punctuation 25641 . 25642) (punctuation 25285 . 25286) (punctuation 24916 . 24917) (punctuation 24915 . 24916) (punctuation 24914 . 24915) (punctuation 24913 . 24914) (punctuation 24897 . 24898) (punctuation 24844 . 24845) (symbol 24835 . 24844) (punctuation 24833 . 24834) (punctuation 24832 . 24833) (punctuation 24831 . 24832) (CLASS 24826 . 24831) (punctuation 24824 . 24825) (symbol 24816 . 24824) (CLASS 24810 . 24815) (punctuation 24809 . 24810) (TEMPLATE 24800 . 24808) (punctuation 24406 . 24407) (punctuation 24171 . 24172) (punctuation 24170 . 24171) (punctuation 24169 . 24170) (punctuation 24168 . 24169) (punctuation 24152 . 24153) (punctuation 24124 . 24125) (symbol 24115 . 24124) (punctuation 24113 . 24114) (punctuation 24112 . 24113) (punctuation 24111 . 24112) (CLASS 24106 . 24111) (punctuation 24104 . 24105) (symbol 24096 . 24104) (CLASS 24090 . 24095) (punctuation 24089 . 24090) (TEMPLATE 24080 . 24088) (punctuation 23837 . 23838) (punctuation 23824 . 23825) (punctuation 23637 . 23638) (punctuation 23128 . 23129) (punctuation 23127 . 23128) (punctuation 23126 . 23127) (semantic-list 23104 . 23125) (symbol 23097 . 23104) (punctuation 23095 . 23096) (punctuation 23094 . 23095) (punctuation 23093 . 23094) (symbol 23092 . 23093) (punctuation 23091 . 23092) (symbol 23085 . 23091) (punctuation 23033 . 23034) (punctuation 23032 . 23033) (semantic-list 23010 . 23031) (symbol 23003 . 23010) (punctuation 23001 . 23002) (punctuation 23000 . 23001) (symbol 22999 . 23000) (punctuation 22998 . 22999) (symbol 22992 . 22998) (punctuation 22719 . 22720) (punctuation 22718 . 22719) (punctuation 22717 . 22718) (semantic-list 22706 . 22716) (symbol 22702 . 22706) (punctuation 22700 . 22701) (punctuation 22699 . 22700) (punctuation 22698 . 22699) (symbol 22697 . 22698) (punctuation 22696 . 22697) (symbol 22690 . 22696) (punctuation 22633 . 22634) (punctuation 22632 . 22633) (semantic-list 22621 . 22631) (symbol 22617 . 22621) (punctuation 22615 . 22616) (punctuation 22614 . 22615) (symbol 22613 . 22614) (punctuation 22612 . 22613) (symbol 22606 . 22612) (punctuation 22482 . 22483) (punctuation 22481 . 22482) (punctuation 22480 . 22481) (semantic-list 22477 . 22479) (symbol 22473 . 22477) (punctuation 22471 . 22472) (punctuation 22470 . 22471) (punctuation 22469 . 22470) (symbol 22468 . 22469) (punctuation 22467 . 22468) (symbol 22461 . 22467) (punctuation 22412 . 22413) (punctuation 22411 . 22412) (semantic-list 22408 . 22410) (symbol 22404 . 22408) (punctuation 22402 . 22403) (punctuation 22401 . 22402) (symbol 22400 . 22401) (punctuation 22399 . 22400) (symbol 22393 . 22399) (semantic-list 21172 . 21237) (punctuation 21170 . 21171) (punctuation 21169 . 21170) (semantic-list 21166 . 21168) (symbol 21156 . 21166) (punctuation 21154 . 21155) (symbol 21153 . 21154) (punctuation 21152 . 21153) (symbol 21146 . 21152) (semantic-list 21131 . 21145) (symbol 21115 . 21131) (string 21132 . 21144) (semantic-list 21049 . 21112) (punctuation 21047 . 21048) (punctuation 21046 . 21047) (semantic-list 21043 . 21045) (symbol 21035 . 21043) (punctuation 21033 . 21034) (symbol 21032 . 21033) (punctuation 21031 . 21032) (symbol 21025 . 21031) (semantic-list 21010 . 21024) (symbol 20994 . 21010) (string 21011 . 21023) (semantic-list 20937 . 20991) (punctuation 20935 . 20936) (semantic-list 20932 . 20934) (symbol 20922 . 20932) (punctuation 20920 . 20921) (punctuation 20919 . 20920) (symbol 20918 . 20919) (punctuation 20917 . 20918) (symbol 20911 . 20917) (semantic-list 20896 . 20910) (symbol 20880 . 20896) (string 20897 . 20909) (semantic-list 20825 . 20877) (punctuation 20823 . 20824) (semantic-list 20820 . 20822) (symbol 20812 . 20820) (punctuation 20810 . 20811) (punctuation 20809 . 20810) (symbol 20808 . 20809) (punctuation 20807 . 20808) (symbol 20801 . 20807) (semantic-list 20786 . 20800) (symbol 20770 . 20786) (string 20787 . 20799) (punctuation 20463 . 20464) (punctuation 19999 . 20000) (punctuation 19652 . 19653) (punctuation 19634 . 19635) (punctuation 19633 . 19634) (punctuation 19632 . 19633) (punctuation 19631 . 19632) (symbol 19630 . 19631) (punctuation 19629 . 19630) (symbol 19623 . 19629) (punctuation 19615 . 19616) (symbol 19610 . 19615) (punctuation 19609 . 19610) (punctuation 19608 . 19609) (symbol 19595 . 19608) (punctuation 19594 . 19595) (punctuation 19593 . 19594) (punctuation 19592 . 19593) (symbol 19591 . 19592) (punctuation 19590 . 19591) (symbol 19583 . 19590) (punctuation 19582 . 19583) (punctuation 19581 . 19582) (symbol 19575 . 19581) (punctuation 19574 . 19575) (punctuation 19573 . 19574) (symbol 19566 . 19573) (punctuation 19565 . 19566) (punctuation 19553 . 19554) (punctuation 19552 . 19553) (symbol 19546 . 19551) (punctuation 19545 . 19546) (punctuation 19544 . 19545) (punctuation 19543 . 19544) (symbol 19526 . 19543) (punctuation 19524 . 19525) (symbol 19523 . 19524) (punctuation 19522 . 19523) (symbol 19510 . 19522) (punctuation 19509 . 19510) (punctuation 19508 . 19509) (symbol 19502 . 19508) (punctuation 19501 . 19502) (punctuation 19500 . 19501) (symbol 19493 . 19500) (punctuation 19485 . 19486) (symbol 19476 . 19485) (punctuation 19475 . 19476) (punctuation 19474 . 19475) (symbol 19471 . 19474) (TYPENAME 19462 . 19470) (punctuation 19458 . 19459) (symbol 19457 . 19458) (CLASS 19451 . 19456) (punctuation 19450 . 19451) (TEMPLATE 19441 . 19449) (punctuation 19360 . 19361) (punctuation 19342 . 19343) (punctuation 19341 . 19342) (punctuation 19340 . 19341) (punctuation 19339 . 19340) (symbol 19338 . 19339) (punctuation 19337 . 19338) (symbol 19331 . 19337) (punctuation 19323 . 19324) (symbol 19318 . 19323) (punctuation 19317 . 19318) (punctuation 19316 . 19317) (symbol 19303 . 19316) (punctuation 19302 . 19303) (punctuation 19301 . 19302) (punctuation 19300 . 19301) (symbol 19299 . 19300) (punctuation 19298 . 19299) (symbol 19291 . 19298) (punctuation 19290 . 19291) (punctuation 19289 . 19290) (symbol 19283 . 19289) (punctuation 19282 . 19283) (punctuation 19281 . 19282) (symbol 19274 . 19281) (punctuation 19262 . 19263) (punctuation 19261 . 19262) (symbol 19255 . 19260) (punctuation 19254 . 19255) (punctuation 19253 . 19254) (punctuation 19252 . 19253) (symbol 19235 . 19252) (punctuation 19233 . 19234) (symbol 19232 . 19233) (punctuation 19231 . 19232) (symbol 19219 . 19231) (punctuation 19218 . 19219) (punctuation 19217 . 19218) (symbol 19211 . 19217) (punctuation 19210 . 19211) (punctuation 19209 . 19210) (symbol 19202 . 19209) (punctuation 19194 . 19195) (symbol 19185 . 19194) (punctuation 19184 . 19185) (punctuation 19183 . 19184) (symbol 19180 . 19183) (TYPENAME 19171 . 19179) (punctuation 19167 . 19168) (symbol 19166 . 19167) (CLASS 19160 . 19165) (punctuation 19159 . 19160) (TEMPLATE 19150 . 19158) (punctuation 19061 . 19062) (punctuation 19043 . 19044) (punctuation 19042 . 19043) (punctuation 19041 . 19042) (punctuation 19040 . 19041) (symbol 19039 . 19040) (punctuation 19038 . 19039) (symbol 19032 . 19038) (punctuation 19024 . 19025) (symbol 19019 . 19024) (punctuation 19018 . 19019) (punctuation 19017 . 19018) (symbol 19004 . 19017) (punctuation 19003 . 19004) (punctuation 19002 . 19003) (punctuation 19001 . 19002) (symbol 19000 . 19001) (punctuation 18999 . 19000) (symbol 18992 . 18999) (punctuation 18991 . 18992) (punctuation 18990 . 18991) (symbol 18984 . 18990) (punctuation 18983 . 18984) (punctuation 18982 . 18983) (symbol 18975 . 18982) (punctuation 18963 . 18964) (punctuation 18962 . 18963) (symbol 18956 . 18961) (punctuation 18955 . 18956) (punctuation 18954 . 18955) (punctuation 18953 . 18954) (punctuation 18952 . 18953) (symbol 18935 . 18952) (punctuation 18933 . 18934) (symbol 18932 . 18933) (punctuation 18931 . 18932) (symbol 18919 . 18931) (punctuation 18918 . 18919) (punctuation 18917 . 18918) (symbol 18911 . 18917) (punctuation 18910 . 18911) (punctuation 18909 . 18910) (symbol 18902 . 18909) (punctuation 18901 . 18902) (punctuation 18889 . 18890) (punctuation 18888 . 18889) (symbol 18882 . 18887) (punctuation 18881 . 18882) (punctuation 18880 . 18881) (punctuation 18879 . 18880) (symbol 18862 . 18879) (punctuation 18860 . 18861) (symbol 18859 . 18860) (punctuation 18858 . 18859) (symbol 18846 . 18858) (punctuation 18845 . 18846) (punctuation 18844 . 18845) (symbol 18838 . 18844) (punctuation 18837 . 18838) (punctuation 18836 . 18837) (symbol 18829 . 18836) (punctuation 18828 . 18829) (punctuation 18820 . 18821) (symbol 18811 . 18820) (punctuation 18810 . 18811) (punctuation 18809 . 18810) (symbol 18806 . 18809) (TYPENAME 18797 . 18805) (punctuation 18793 . 18794) (symbol 18792 . 18793) (CLASS 18786 . 18791) (punctuation 18785 . 18786) (TEMPLATE 18776 . 18784) (punctuation 18693 . 18694) (punctuation 18675 . 18676) (punctuation 18674 . 18675) (punctuation 18673 . 18674) (punctuation 18672 . 18673) (symbol 18671 . 18672) (punctuation 18670 . 18671) (symbol 18664 . 18670) (punctuation 18656 . 18657) (symbol 18651 . 18656) (punctuation 18650 . 18651) (punctuation 18649 . 18650) (symbol 18636 . 18649) (punctuation 18635 . 18636) (punctuation 18634 . 18635) (punctuation 18633 . 18634) (symbol 18632 . 18633) (punctuation 18631 . 18632) (symbol 18624 . 18631) (punctuation 18623 . 18624) (punctuation 18622 . 18623) (symbol 18616 . 18622) (punctuation 18615 . 18616) (punctuation 18614 . 18615) (symbol 18607 . 18614) (punctuation 18606 . 18607) (punctuation 18594 . 18595) (punctuation 18593 . 18594) (symbol 18587 . 18592) (punctuation 18586 . 18587) (punctuation 18585 . 18586) (punctuation 18584 . 18585) (punctuation 18583 . 18584) (symbol 18566 . 18583) (punctuation 18564 . 18565) (symbol 18563 . 18564) (punctuation 18562 . 18563) (symbol 18550 . 18562) (punctuation 18549 . 18550) (punctuation 18548 . 18549) (symbol 18542 . 18548) (punctuation 18541 . 18542) (punctuation 18540 . 18541) (symbol 18533 . 18540) (punctuation 18532 . 18533) (punctuation 18520 . 18521) (punctuation 18519 . 18520) (symbol 18513 . 18518) (punctuation 18512 . 18513) (punctuation 18511 . 18512) (punctuation 18510 . 18511) (symbol 18493 . 18510) (punctuation 18491 . 18492) (symbol 18490 . 18491) (punctuation 18489 . 18490) (symbol 18477 . 18489) (punctuation 18476 . 18477) (punctuation 18475 . 18476) (symbol 18469 . 18475) (punctuation 18468 . 18469) (punctuation 18467 . 18468) (symbol 18460 . 18467) (punctuation 18459 . 18460) (punctuation 18451 . 18452) (symbol 18442 . 18451) (punctuation 18441 . 18442) (punctuation 18440 . 18441) (symbol 18437 . 18440) (TYPENAME 18428 . 18436) (punctuation 18424 . 18425) (symbol 18423 . 18424) (CLASS 18417 . 18422) (punctuation 18416 . 18417) (TEMPLATE 18407 . 18415) (punctuation 17286 . 17287) (punctuation 17285 . 17286) (punctuation 17284 . 17285) (punctuation 17283 . 17284) (punctuation 17271 . 17272) (punctuation 17240 . 17241) (symbol 17236 . 17240) (punctuation 17234 . 17235) (punctuation 17233 . 17234) (punctuation 17232 . 17233) (CLASS 17227 . 17232) (punctuation 17225 . 17226) (symbol 17222 . 17225) (CLASS 17216 . 17221) (punctuation 17214 . 17215) (symbol 17206 . 17214) (CLASS 17200 . 17205) (punctuation 17199 . 17200) (TEMPLATE 17190 . 17198) (punctuation 16773 . 16774) (symbol 16768 . 16773) (punctuation 16767 . 16768) (punctuation 16766 . 16767) (punctuation 16765 . 16766) (symbol 16764 . 16765) (punctuation 16763 . 16764) (symbol 16755 . 16763) (TYPENAME 16746 . 16754) (punctuation 16745 . 16746) (symbol 16739 . 16745) (punctuation 16735 . 16736) (symbol 16731 . 16735) (punctuation 16729 . 16730) (punctuation 16728 . 16729) (punctuation 16727 . 16728) (TYPENAME 16719 . 16727) (punctuation 16717 . 16718) (symbol 16711 . 16717) (TYPENAME 16702 . 16710) (punctuation 16700 . 16701) (symbol 16699 . 16700) (TYPENAME 16690 . 16698) (punctuation 16689 . 16690) (TEMPLATE 16680 . 16688) (punctuation 16297 . 16298) (punctuation 16267 . 16268) (punctuation 16266 . 16267) (symbol 16265 . 16266) (punctuation 16263 . 16264) (symbol 16262 . 16263) (punctuation 16261 . 16262) (symbol 16247 . 16261) (punctuation 16246 . 16247) (punctuation 16245 . 16246) (symbol 16239 . 16245) (punctuation 16238 . 16239) (punctuation 16237 . 16238) (symbol 16230 . 16237) (punctuation 16228 . 16229) (symbol 16226 . 16227) (TYPENAME 16217 . 16225) (punctuation 16215 . 16216) (symbol 16214 . 16215) (TYPENAME 16205 . 16213) (punctuation 16204 . 16205) (TEMPLATE 16195 . 16203) (punctuation 15552 . 15553) (punctuation 15551 . 15552) (semantic-list 15480 . 15550) (symbol 15477 . 15480) (punctuation 15541 . 15542) (punctuation 15540 . 15541) (punctuation 15475 . 15476) (symbol 15474 . 15475) (punctuation 15473 . 15474) (symbol 15467 . 15473) (punctuation 15541 . 15542) (punctuation 15540 . 15541) (INLINE 15460 . 15466) (punctuation 15541 . 15542) (punctuation 15540 . 15541) (punctuation 15264 . 15265) (punctuation 15263 . 15264) (punctuation 15262 . 15263) (semantic-list 15191 . 15261) (symbol 15188 . 15191) (punctuation 15252 . 15253) (punctuation 15251 . 15252) (punctuation 15186 . 15187) (symbol 15185 . 15186) (punctuation 15184 . 15185) (symbol 15178 . 15184) (punctuation 15252 . 15253) (punctuation 15251 . 15252) (INLINE 15171 . 15177) (punctuation 15252 . 15253) (punctuation 15251 . 15252) (punctuation 14358 . 14359) (punctuation 14357 . 14358) (punctuation 14356 . 14357) (punctuation 14355 . 14356) (symbol 14350 . 14355) (punctuation 14349 . 14350) (punctuation 14348 . 14349) (punctuation 14347 . 14348) (symbol 14346 . 14347) (punctuation 14345 . 14346) (symbol 14337 . 14345) (TYPENAME 14328 . 14336) (punctuation 14327 . 14328) (symbol 14321 . 14327) (punctuation 14319 . 14320) (symbol 14314 . 14319) (punctuation 14313 . 14314) (punctuation 14312 . 14313) (punctuation 14311 . 14312) (symbol 14310 . 14311) (punctuation 14309 . 14310) (symbol 14301 . 14309) (punctuation 14300 . 14301) (symbol 14291 . 14300) (punctuation 14283 . 14284) (punctuation 14282 . 14283) (symbol 14279 . 14282) (TYPENAME 14270 . 14278) (punctuation 14266 . 14267) (symbol 14265 . 14266) (punctuation 14263 . 14264) (symbol 14261 . 14262) (CLASS 14255 . 14260) (punctuation 14254 . 14255) (TEMPLATE 14245 . 14253) (semantic-list 13654 . 13664) (punctuation 13653 . 13654) (OPERATOR 13645 . 13653) (punctuation 13662 . 13663) (punctuation 13643 . 13644) (symbol 13637 . 13643) (punctuation 13662 . 13663) (punctuation 13619 . 13620) (DELETE 13613 . 13619) (punctuation 13611 . 13612) (semantic-list 13595 . 13610) (punctuation 13594 . 13595) (OPERATOR 13586 . 13594) (punctuation 13584 . 13585) (symbol 13578 . 13584) (USING 13477 . 13482) (USING 13449 . 13454) (USING 13428 . 13433) (USING 13408 . 13413) (USING 13385 . 13390) (USING 13361 . 13366) (USING 13337 . 13342) (USING 13309 . 13314) (USING 13287 . 13292) (punctuation 13280 . 13281) (punctuation 13247 . 13248) (number 13246 . 13247) (punctuation 13244 . 13245) (symbol 13239 . 13243) (punctuation 13238 . 13239) (punctuation 13237 . 13238) (punctuation 13236 . 13237) (INT 13233 . 13236) (punctuation 13221 . 13222) (symbol 13216 . 13221) (punctuation 13215 . 13216) (punctuation 13214 . 13215) (punctuation 13213 . 13214) (punctuation 13212 . 13213) (punctuation 13211 . 13212) (symbol 13209 . 13211) (punctuation 13207 . 13208) (symbol 13206 . 13207) (punctuation 13205 . 13206) (symbol 13189 . 13205) (punctuation 13188 . 13189) (punctuation 13187 . 13188) (symbol 13184 . 13187) (punctuation 13168 . 13169) (punctuation 13167 . 13168) (symbol 13161 . 13166) (punctuation 13160 . 13161) (punctuation 13159 . 13160) (punctuation 13158 . 13159) (symbol 13154 . 13158) (punctuation 13153 . 13154) (punctuation 13152 . 13153) (punctuation 13151 . 13152) (symbol 13149 . 13151) (punctuation 13148 . 13149) (symbol 13143 . 13148) (punctuation 13142 . 13143) (punctuation 13141 . 13142) (symbol 13138 . 13141) (TYPENAME 13129 . 13137) (punctuation 13127 . 13128) (symbol 13126 . 13127) (punctuation 13125 . 13126) (symbol 13118 . 13125) (punctuation 13117 . 13118) (punctuation 13116 . 13117) (symbol 13113 . 13116) (punctuation 13112 . 13113) (punctuation 13100 . 13101) (symbol 13091 . 13100) (punctuation 13090 . 13091) (punctuation 13089 . 13090) (symbol 13086 . 13089) (TYPENAME 13077 . 13085) (punctuation 13069 . 13070) (symbol 13067 . 13069) (CLASS 13061 . 13066) (punctuation 13053 . 13054) (TEMPLATE 13044 . 13052) (punctuation 13038 . 13039) (EXPLICIT 13011 . 13019) (punctuation 13007 . 13008) (number 13006 . 13007) (punctuation 13004 . 13005) (symbol 12999 . 13003) (punctuation 12998 . 12999) (punctuation 12997 . 12998) (punctuation 12996 . 12997) (INT 12993 . 12996) (punctuation 12981 . 12982) (symbol 12976 . 12981) (punctuation 12975 . 12976) (punctuation 12974 . 12975) (punctuation 12973 . 12974) (symbol 12972 . 12973) (punctuation 12970 . 12971) (punctuation 12969 . 12970) (punctuation 12968 . 12969) (symbol 12966 . 12968) (punctuation 12965 . 12966) (symbol 12951 . 12965) (punctuation 12950 . 12951) (punctuation 12949 . 12950) (symbol 12946 . 12949) (punctuation 12945 . 12946) (punctuation 12929 . 12930) (punctuation 12928 . 12929) (symbol 12922 . 12927) (punctuation 12921 . 12922) (punctuation 12920 . 12921) (punctuation 12919 . 12920) (punctuation 12918 . 12919) (punctuation 12917 . 12918) (symbol 12915 . 12917) (punctuation 12913 . 12914) (symbol 12912 . 12913) (punctuation 12911 . 12912) (symbol 12895 . 12911) (punctuation 12894 . 12895) (punctuation 12893 . 12894) (symbol 12890 . 12893) (punctuation 12874 . 12875) (punctuation 12873 . 12874) (symbol 12867 . 12872) (punctuation 12866 . 12867) (punctuation 12865 . 12866) (punctuation 12864 . 12865) (symbol 12860 . 12864) (punctuation 12859 . 12860) (punctuation 12858 . 12859) (punctuation 12857 . 12858) (symbol 12855 . 12857) (punctuation 12854 . 12855) (symbol 12849 . 12854) (punctuation 12848 . 12849) (punctuation 12847 . 12848) (symbol 12844 . 12847) (TYPENAME 12835 . 12843) (punctuation 12833 . 12834) (symbol 12832 . 12833) (punctuation 12831 . 12832) (symbol 12824 . 12831) (punctuation 12823 . 12824) (punctuation 12822 . 12823) (symbol 12819 . 12822) (punctuation 12818 . 12819) (punctuation 12806 . 12807) (symbol 12797 . 12806) (punctuation 12796 . 12797) (punctuation 12795 . 12796) (symbol 12792 . 12795) (TYPENAME 12783 . 12791) (punctuation 12775 . 12776) (symbol 12773 . 12775) (CLASS 12767 . 12772) (punctuation 12759 . 12760) (TEMPLATE 12750 . 12758) (punctuation 12744 . 12745) (punctuation 12707 . 12708) (number 12706 . 12707) (punctuation 12704 . 12705) (symbol 12699 . 12703) (punctuation 12698 . 12699) (punctuation 12697 . 12698) (punctuation 12696 . 12697) (INT 12693 . 12696) (punctuation 12681 . 12682) (symbol 12676 . 12681) (punctuation 12675 . 12676) (punctuation 12674 . 12675) (punctuation 12673 . 12674) (symbol 12672 . 12673) (punctuation 12670 . 12671) (punctuation 12669 . 12670) (punctuation 12668 . 12669) (symbol 12666 . 12668) (punctuation 12665 . 12666) (symbol 12651 . 12665) (punctuation 12650 . 12651) (punctuation 12649 . 12650) (symbol 12646 . 12649) (punctuation 12630 . 12631) (punctuation 12629 . 12630) (symbol 12623 . 12628) (punctuation 12622 . 12623) (punctuation 12621 . 12622) (punctuation 12620 . 12621) (punctuation 12619 . 12620) (punctuation 12618 . 12619) (symbol 12616 . 12618) (punctuation 12614 . 12615) (symbol 12613 . 12614) (punctuation 12612 . 12613) (symbol 12596 . 12612) (punctuation 12595 . 12596) (punctuation 12594 . 12595) (symbol 12591 . 12594) (punctuation 12575 . 12576) (punctuation 12574 . 12575) (symbol 12568 . 12573) (punctuation 12567 . 12568) (punctuation 12566 . 12567) (punctuation 12565 . 12566) (symbol 12561 . 12565) (punctuation 12560 . 12561) (punctuation 12559 . 12560) (punctuation 12558 . 12559) (symbol 12556 . 12558) (punctuation 12555 . 12556) (symbol 12550 . 12555) (punctuation 12549 . 12550) (punctuation 12548 . 12549) (symbol 12545 . 12548) (TYPENAME 12536 . 12544) (punctuation 12534 . 12535) (symbol 12533 . 12534) (punctuation 12532 . 12533) (symbol 12525 . 12532) (punctuation 12524 . 12525) (punctuation 12523 . 12524) (symbol 12520 . 12523) (punctuation 12519 . 12520) (punctuation 12507 . 12508) (symbol 12498 . 12507) (punctuation 12497 . 12498) (punctuation 12496 . 12497) (symbol 12493 . 12496) (TYPENAME 12484 . 12492) (punctuation 12476 . 12477) (symbol 12474 . 12476) (CLASS 12468 . 12473) (punctuation 12460 . 12461) (TEMPLATE 12451 . 12459) (semantic-list 12403 . 12416) (symbol 12397 . 12403) (punctuation 12414 . 12415) (punctuation 12380 . 12381) (DELETE 12374 . 12380) (punctuation 12372 . 12373) (semantic-list 12353 . 12371) (symbol 12347 . 12353) (punctuation 12281 . 12282) (punctuation 12280 . 12281) (punctuation 12279 . 12280) (punctuation 12278 . 12279) (EXPLICIT 12245 . 12253) (punctuation 12241 . 12242) (number 12240 . 12241) (punctuation 12238 . 12239) (symbol 12233 . 12237) (punctuation 12221 . 12222) (punctuation 12220 . 12221) (punctuation 12219 . 12220) (INT 12216 . 12219) (punctuation 12214 . 12215) (symbol 12209 . 12214) (punctuation 12208 . 12209) (punctuation 12207 . 12208) (punctuation 12206 . 12207) (punctuation 12205 . 12206) (punctuation 12204 . 12205) (punctuation 12203 . 12204) (punctuation 12202 . 12203) (punctuation 12201 . 12202) (symbol 12197 . 12201) (punctuation 12195 . 12196) (symbol 12194 . 12195) (punctuation 12193 . 12194) (symbol 12177 . 12193) (punctuation 12176 . 12177) (punctuation 12175 . 12176) (symbol 12172 . 12175) (punctuation 12171 . 12172) (symbol 12162 . 12171) (punctuation 12161 . 12162) (punctuation 12160 . 12161) (symbol 12157 . 12160) (TYPENAME 12148 . 12156) (punctuation 12140 . 12141) (symbol 12136 . 12140) (punctuation 12134 . 12135) (punctuation 12133 . 12134) (punctuation 12132 . 12133) (CLASS 12127 . 12132) (punctuation 12119 . 12120) (TEMPLATE 12110 . 12118) (punctuation 11915 . 11916) (punctuation 11886 . 11887) (symbol 11882 . 11886) (punctuation 11881 . 11882) (punctuation 11880 . 11881) (punctuation 11879 . 11880) (symbol 11874 . 11879) (punctuation 11873 . 11874) (punctuation 11872 . 11873) (punctuation 11871 . 11872) (symbol 11867 . 11871) (punctuation 11866 . 11867) (punctuation 11865 . 11866) (punctuation 11864 . 11865) (symbol 11862 . 11864) (punctuation 11861 . 11862) (symbol 11856 . 11861) (punctuation 11855 . 11856) (punctuation 11854 . 11855) (symbol 11851 . 11854) (TYPENAME 11842 . 11850) (punctuation 11841 . 11842) (symbol 11829 . 11841) (punctuation 11828 . 11829) (punctuation 11816 . 11817) (punctuation 11815 . 11816) (symbol 11809 . 11814) (punctuation 11808 . 11809) (punctuation 11807 . 11808) (punctuation 11806 . 11807) (symbol 11802 . 11806) (punctuation 11801 . 11802) (punctuation 11800 . 11801) (punctuation 11799 . 11800) (symbol 11797 . 11799) (punctuation 11796 . 11797) (symbol 11791 . 11796) (punctuation 11790 . 11791) (punctuation 11789 . 11790) (symbol 11786 . 11789) (TYPENAME 11777 . 11785) (punctuation 11776 . 11777) (symbol 11768 . 11776) (punctuation 11767 . 11768) (punctuation 11755 . 11756) (symbol 11746 . 11755) (punctuation 11745 . 11746) (punctuation 11744 . 11745) (symbol 11741 . 11744) (TYPENAME 11732 . 11740) (punctuation 11730 . 11731) (TYPENAME 11721 . 11729) (punctuation 11713 . 11714) (symbol 11712 . 11713) (punctuation 11710 . 11711) (symbol 11707 . 11709) (CLASS 11701 . 11706) (punctuation 11693 . 11694) (TEMPLATE 11684 . 11692) (USING 11589 . 11594) (punctuation 11401 . 11402) (symbol 11396 . 11400) (USING 11390 . 11395) (semantic-list 11292 . 11294) (punctuation 11254 . 11255) (symbol 11239 . 11247) (semantic-list 11205 . 11238) (symbol 11195 . 11205) (EXPLICIT 11186 . 11194) (EXPLICIT 11135 . 11143) (punctuation 11128 . 11129) (USING 11030 . 11035) (USING 11003 . 11008) (USING 10971 . 10976) (punctuation 10857 . 10858) (punctuation 10856 . 10857) (symbol 10855 . 10856) (punctuation 10854 . 10855) (punctuation 10681 . 10682) (punctuation 10680 . 10681) (punctuation 10679 . 10680) (semantic-list 10668 . 10678) (symbol 10663 . 10668) (punctuation 10671 . 10672) (punctuation 10659 . 10660) (symbol 10649 . 10659) (punctuation 10648 . 10649) (punctuation 10647 . 10648) (symbol 10641 . 10647) (punctuation 10640 . 10641) (punctuation 10639 . 10640) (punctuation 10638 . 10639) (symbol 10637 . 10638) (punctuation 10635 . 10636) (symbol 10634 . 10635) (punctuation 10633 . 10634) (symbol 10619 . 10633) (punctuation 10618 . 10619) (punctuation 10617 . 10618) (symbol 10611 . 10617) (punctuation 10610 . 10611) (punctuation 10609 . 10610) (symbol 10602 . 10609) (TYPENAME 10593 . 10601) (punctuation 10592 . 10593) (symbol 10582 . 10592) (punctuation 10578 . 10579) (symbol 10577 . 10578) (TYPENAME 10568 . 10576) (punctuation 10567 . 10568) (TEMPLATE 10558 . 10566) (punctuation 10096 . 10097) (punctuation 10095 . 10096) (punctuation 10094 . 10095) (semantic-list 10023 . 10093) (symbol 10020 . 10023) (punctuation 10084 . 10085) (punctuation 10083 . 10084) (punctuation 10018 . 10019) (symbol 10017 . 10018) (punctuation 10016 . 10017) (symbol 10010 . 10016) (punctuation 10084 . 10085) (punctuation 10083 . 10084) (INLINE 10003 . 10009) (punctuation 10084 . 10085) (punctuation 10083 . 10084) (punctuation 9210 . 9211) (punctuation 9209 . 9210) (punctuation 9208 . 9209) (semantic-list 9186 . 9207) (symbol 9179 . 9186) (punctuation 9177 . 9178) (punctuation 9176 . 9177) (punctuation 9175 . 9176) (symbol 9174 . 9175) (punctuation 9173 . 9174) (symbol 9163 . 9173) (punctuation 9111 . 9112) (punctuation 9110 . 9111) (semantic-list 9088 . 9109) (symbol 9081 . 9088) (punctuation 9079 . 9080) (punctuation 9078 . 9079) (symbol 9077 . 9078) (punctuation 9076 . 9077) (symbol 9066 . 9076) (punctuation 8789 . 8790) (punctuation 8788 . 8789) (punctuation 8787 . 8788) (semantic-list 8776 . 8786) (symbol 8772 . 8776) (punctuation 8770 . 8771) (punctuation 8769 . 8770) (punctuation 8768 . 8769) (symbol 8767 . 8768) (punctuation 8766 . 8767) (symbol 8756 . 8766) (punctuation 8699 . 8700) (punctuation 8698 . 8699) (semantic-list 8687 . 8697) (symbol 8683 . 8687) (punctuation 8681 . 8682) (punctuation 8680 . 8681) (symbol 8679 . 8680) (punctuation 8678 . 8679) (symbol 8668 . 8678) (punctuation 8544 . 8545) (punctuation 8543 . 8544) (punctuation 8542 . 8543) (semantic-list 8539 . 8541) (symbol 8535 . 8539) (punctuation 8533 . 8534) (punctuation 8532 . 8533) (punctuation 8531 . 8532) (symbol 8530 . 8531) (punctuation 8529 . 8530) (symbol 8519 . 8529) (punctuation 8470 . 8471) (punctuation 8469 . 8470) (semantic-list 8466 . 8468) (symbol 8462 . 8466) (punctuation 8460 . 8461) (punctuation 8459 . 8460) (symbol 8458 . 8459) (punctuation 8457 . 8458) (symbol 8447 . 8457) (punctuation 8363 . 8364) (punctuation 8362 . 8363) (punctuation 8361 . 8362) (semantic-list 8339 . 8360) (symbol 8330 . 8339) (punctuation 8328 . 8329) (symbol 8327 . 8328) (punctuation 8326 . 8327) (symbol 8323 . 8326) (punctuation 8133 . 8134) (punctuation 8132 . 8133) (punctuation 8131 . 8132) (semantic-list 8109 . 8130) (symbol 8103 . 8109) (symbol 8101 . 8102) (punctuation 7897 . 7898) (punctuation 7896 . 7897) (punctuation 7895 . 7896) (semantic-list 7892 . 7894) (symbol 7886 . 7892) (punctuation 7884 . 7885) (symbol 7883 . 7884) (punctuation 7882 . 7883) (symbol 7879 . 7882) (punctuation 7763 . 7764) (punctuation 7762 . 7763) (punctuation 7761 . 7762) (semantic-list 7746 . 7760) (symbol 7743 . 7746) (symbol 7741 . 7742) (punctuation 7567 . 7568) (punctuation 7566 . 7567) (punctuation 7565 . 7566) (semantic-list 7562 . 7564) (symbol 7559 . 7562) (symbol 7557 . 7558) (semantic-list 7380 . 7393) (punctuation 7379 . 7380) (OPERATOR 7371 . 7379) (punctuation 7391 . 7392) (punctuation 7369 . 7370) (symbol 7359 . 7369) (punctuation 7391 . 7392) (semantic-list 7332 . 7346) (punctuation 7331 . 7332) (OPERATOR 7323 . 7331) (punctuation 7344 . 7345) (punctuation 7321 . 7322) (symbol 7311 . 7321) (punctuation 7344 . 7345) (punctuation 7307 . 7308) (DELETE 7301 . 7307) (punctuation 7299 . 7300) (semantic-list 7279 . 7298) (punctuation 7278 . 7279) (OPERATOR 7270 . 7278) (punctuation 7268 . 7269) (symbol 7258 . 7268) (USING 7236 . 7241) (USING 7208 . 7213) (USING 7187 . 7192) (USING 7167 . 7172) (USING 7144 . 7149) (USING 7120 . 7125) (USING 7096 . 7101) (USING 7068 . 7073) (USING 7046 . 7051) (semantic-list 7019 . 7032) (symbol 7009 . 7019) (punctuation 7030 . 7031) (semantic-list 6921 . 6938) (symbol 6911 . 6921) (punctuation 6936 . 6937) (punctuation 6894 . 6895) (DELETE 6888 . 6894) (punctuation 6886 . 6887) (semantic-list 6863 . 6885) (symbol 6853 . 6863) (punctuation 6787 . 6788) (punctuation 6786 . 6787) (punctuation 6785 . 6786) (punctuation 6784 . 6785) (EXPLICIT 6747 . 6755) (punctuation 6743 . 6744) (number 6742 . 6743) (punctuation 6740 . 6741) (symbol 6735 . 6739) (punctuation 6723 . 6724) (punctuation 6722 . 6723) (punctuation 6721 . 6722) (INT 6718 . 6721) (punctuation 6716 . 6717) (symbol 6711 . 6716) (punctuation 6710 . 6711) (punctuation 6709 . 6710) (punctuation 6708 . 6709) (punctuation 6707 . 6708) (punctuation 6706 . 6707) (punctuation 6705 . 6706) (punctuation 6704 . 6705) (punctuation 6703 . 6704) (symbol 6699 . 6703) (punctuation 6697 . 6698) (symbol 6696 . 6697) (punctuation 6695 . 6696) (symbol 6679 . 6695) (punctuation 6678 . 6679) (punctuation 6677 . 6678) (symbol 6674 . 6677) (punctuation 6673 . 6674) (symbol 6664 . 6673) (punctuation 6663 . 6664) (punctuation 6662 . 6663) (symbol 6659 . 6662) (TYPENAME 6650 . 6658) (punctuation 6642 . 6643) (symbol 6638 . 6642) (punctuation 6636 . 6637) (punctuation 6635 . 6636) (punctuation 6634 . 6635) (CLASS 6629 . 6634) (punctuation 6621 . 6622) (TEMPLATE 6612 . 6620) (punctuation 6413 . 6414) (punctuation 6380 . 6381) (symbol 6376 . 6380) (punctuation 6375 . 6376) (punctuation 6374 . 6375) (punctuation 6373 . 6374) (symbol 6368 . 6373) (punctuation 6367 . 6368) (punctuation 6366 . 6367) (punctuation 6365 . 6366) (symbol 6361 . 6365) (punctuation 6360 . 6361) (punctuation 6359 . 6360) (punctuation 6358 . 6359) (symbol 6356 . 6358) (punctuation 6355 . 6356) (symbol 6350 . 6355) (punctuation 6349 . 6350) (punctuation 6348 . 6349) (symbol 6345 . 6348) (TYPENAME 6336 . 6344) (punctuation 6335 . 6336) (symbol 6323 . 6335) (punctuation 6322 . 6323) (punctuation 6310 . 6311) (punctuation 6309 . 6310) (symbol 6303 . 6308) (punctuation 6302 . 6303) (punctuation 6301 . 6302) (punctuation 6300 . 6301) (symbol 6296 . 6300) (punctuation 6295 . 6296) (punctuation 6294 . 6295) (punctuation 6293 . 6294) (symbol 6291 . 6293) (punctuation 6290 . 6291) (symbol 6285 . 6290) (punctuation 6284 . 6285) (punctuation 6283 . 6284) (symbol 6280 . 6283) (TYPENAME 6271 . 6279) (punctuation 6270 . 6271) (symbol 6262 . 6270) (punctuation 6261 . 6262) (punctuation 6249 . 6250) (symbol 6240 . 6249) (punctuation 6239 . 6240) (punctuation 6238 . 6239) (symbol 6235 . 6238) (TYPENAME 6226 . 6234) (punctuation 6224 . 6225) (TYPENAME 6215 . 6223) (punctuation 6207 . 6208) (symbol 6206 . 6207) (punctuation 6204 . 6205) (symbol 6201 . 6203) (CLASS 6195 . 6200) (punctuation 6187 . 6188) (TEMPLATE 6178 . 6186) (USING 6083 . 6088) (punctuation 5827 . 5828) (symbol 5810 . 5826) (USING 5804 . 5809) (punctuation 5768 . 5769) (symbol 5763 . 5767) (USING 5757 . 5762) (punctuation 5613 . 5614) (punctuation 5612 . 5613) (punctuation 5611 . 5612) (punctuation 5610 . 5611) (punctuation 5595 . 5596) (punctuation 5561 . 5562) (punctuation 5532 . 5533) (punctuation 5531 . 5532) (punctuation 5530 . 5531) (symbol 5524 . 5530) (punctuation 5523 . 5524) (punctuation 5522 . 5523) (symbol 5521 . 5522) (TYPENAME 5512 . 5520) (punctuation 5510 . 5511) (symbol 5505 . 5510) (punctuation 5504 . 5505) (punctuation 5503 . 5504) (symbol 5490 . 5503) (punctuation 5489 . 5490) (punctuation 5488 . 5489) (symbol 5487 . 5488) (punctuation 5486 . 5487) (symbol 5477 . 5486) (punctuation 5476 . 5477) (punctuation 5475 . 5476) (symbol 5472 . 5475) (TYPENAME 5463 . 5471) (punctuation 5459 . 5460) (symbol 5455 . 5459) (punctuation 5453 . 5454) (punctuation 5452 . 5453) (punctuation 5451 . 5452) (TYPENAME 5443 . 5451) (punctuation 5441 . 5442) (symbol 5436 . 5441) (BOOL 5431 . 5435) (punctuation 5429 . 5430) (symbol 5428 . 5429) (TYPENAME 5419 . 5427) (punctuation 5417 . 5418) (symbol 5416 . 5417) (TYPENAME 5407 . 5415) (punctuation 5406 . 5407) (TEMPLATE 5397 . 5405) (punctuation 5299 . 5300) (punctuation 5298 . 5299) (punctuation 5297 . 5298) (punctuation 5296 . 5297) (punctuation 5281 . 5282) (punctuation 5247 . 5248) (punctuation 5218 . 5219) (punctuation 5217 . 5218) (punctuation 5216 . 5217) (symbol 5210 . 5216) (punctuation 5209 . 5210) (punctuation 5208 . 5209) (symbol 5207 . 5208) (TYPENAME 5198 . 5206) (punctuation 5196 . 5197) (symbol 5191 . 5196) (punctuation 5190 . 5191) (punctuation 5189 . 5190) (symbol 5176 . 5189) (punctuation 5175 . 5176) (punctuation 5174 . 5175) (symbol 5173 . 5174) (punctuation 5172 . 5173) (punctuation 5171 . 5172) (symbol 5162 . 5171) (punctuation 5161 . 5162) (punctuation 5160 . 5161) (symbol 5157 . 5160) (TYPENAME 5148 . 5156) (punctuation 5144 . 5145) (symbol 5140 . 5144) (punctuation 5138 . 5139) (punctuation 5137 . 5138) (punctuation 5136 . 5137) (TYPENAME 5128 . 5136) (punctuation 5126 . 5127) (symbol 5121 . 5126) (BOOL 5116 . 5120) (punctuation 5114 . 5115) (symbol 5113 . 5114) (TYPENAME 5104 . 5112) (punctuation 5102 . 5103) (symbol 5101 . 5102) (TYPENAME 5092 . 5100) (punctuation 5091 . 5092) (TEMPLATE 5082 . 5090) (punctuation 4943 . 4944) (punctuation 4942 . 4943) (semantic-list 4793 . 4806) (symbol 4787 . 4793) (VOID 4782 . 4786) (punctuation 4778 . 4779) (symbol 4768 . 4778) (CLASS 4762 . 4767) (punctuation 4761 . 4762) (TEMPLATE 4752 . 4760) (semantic-list 4655 . 4688) (symbol 4645 . 4655) (EXPLICIT 4636 . 4644) (EXPLICIT 4584 . 4592) (punctuation 4531 . 4532) (punctuation 4530 . 4531) (punctuation 4529 . 4530) (symbol 4528 . 4529) (punctuation 4527 . 4528) (symbol 4523 . 4527) (punctuation 4522 . 4523) (punctuation 4521 . 4522) (symbol 4515 . 4521) (punctuation 4514 . 4515) (punctuation 4513 . 4514) (symbol 4506 . 4513) (punctuation 4504 . 4505) (symbol 4496 . 4503) (USING 4490 . 4495) (punctuation 4397 . 4398) (punctuation 4396 . 4397) (symbol 4395 . 4396) (punctuation 4394 . 4395) (punctuation 3589 . 3590) (punctuation 3488 . 3489) (punctuation 2795 . 2796) (punctuation 2794 . 2795) (punctuation 2793 . 2794) (CONST 2788 . 2793) (semantic-list 2785 . 2787) (symbol 2780 . 2785) (punctuation 2778 . 2779) (punctuation 2777 . 2778) (CONST 2772 . 2777) (symbol 2770 . 2771) (punctuation 2766 . 2767) (punctuation 2765 . 2766) (punctuation 2764 . 2765) (semantic-list 2761 . 2763) (symbol 2756 . 2761) (punctuation 2754 . 2755) (punctuation 2753 . 2754) (symbol 2752 . 2753) (punctuation 2748 . 2749) (punctuation 2747 . 2748) (CONST 2742 . 2747) (semantic-list 2739 . 2741) (symbol 2734 . 2739) (punctuation 2732 . 2733) (CONST 2727 . 2732) (symbol 2725 . 2726) (punctuation 2721 . 2722) (punctuation 2720 . 2721) (semantic-list 2717 . 2719) (symbol 2712 . 2717) (punctuation 2710 . 2711) (symbol 2709 . 2710) (punctuation 2341 . 2342) (DELETE 2335 . 2341) (punctuation 2333 . 2334) (semantic-list 2310 . 2332) (symbol 2300 . 2310) (punctuation 2296 . 2297) (DELETE 2290 . 2296) (punctuation 2288 . 2289) (semantic-list 2269 . 2287) (symbol 2259 . 2269) (semantic-list 2214 . 2227) (symbol 2204 . 2214) (punctuation 2225 . 2226) (semantic-list 2174 . 2191) (symbol 2164 . 2174) (punctuation 2189 . 2190) (punctuation 2160 . 2161) (DELETE 2154 . 2160) (punctuation 2152 . 2153) (semantic-list 2129 . 2151) (symbol 2119 . 2129) (punctuation 2107 . 2108) (punctuation 2106 . 2107) (punctuation 2105 . 2106) (punctuation 2104 . 2105) (EXPLICIT 2067 . 2075) (punctuation 2063 . 2064) (number 2062 . 2063) (punctuation 2060 . 2061) (symbol 2055 . 2059) (punctuation 2043 . 2044) (punctuation 2042 . 2043) (punctuation 2041 . 2042) (INT 2038 . 2041) (punctuation 2036 . 2037) (symbol 2031 . 2036) (punctuation 2030 . 2031) (punctuation 2029 . 2030) (punctuation 2028 . 2029) (punctuation 2027 . 2028) (punctuation 2026 . 2027) (punctuation 2025 . 2026) (punctuation 2024 . 2025) (punctuation 2023 . 2024) (symbol 2019 . 2023) (punctuation 2017 . 2018) (symbol 2016 . 2017) (punctuation 2015 . 2016) (symbol 1999 . 2015) (punctuation 1998 . 1999) (punctuation 1997 . 1998) (symbol 1994 . 1997) (punctuation 1993 . 1994) (symbol 1984 . 1993) (punctuation 1983 . 1984) (punctuation 1982 . 1983) (symbol 1979 . 1982) (TYPENAME 1970 . 1978) (punctuation 1962 . 1963) (symbol 1958 . 1962) (punctuation 1956 . 1957) (punctuation 1955 . 1956) (punctuation 1954 . 1955) (CLASS 1949 . 1954) (punctuation 1941 . 1942) (TEMPLATE 1932 . 1940) (punctuation 1795 . 1796) (punctuation 1762 . 1763) (symbol 1758 . 1762) (punctuation 1757 . 1758) (punctuation 1756 . 1757) (punctuation 1755 . 1756) (symbol 1750 . 1755) (punctuation 1749 . 1750) (punctuation 1748 . 1749) (punctuation 1747 . 1748) (symbol 1743 . 1747) (punctuation 1742 . 1743) (punctuation 1741 . 1742) (punctuation 1740 . 1741) (symbol 1738 . 1740) (punctuation 1737 . 1738) (symbol 1732 . 1737) (punctuation 1731 . 1732) (punctuation 1730 . 1731) (symbol 1727 . 1730) (TYPENAME 1718 . 1726) (punctuation 1717 . 1718) (symbol 1705 . 1717) (punctuation 1704 . 1705) (punctuation 1692 . 1693) (punctuation 1691 . 1692) (symbol 1685 . 1690) (punctuation 1684 . 1685) (punctuation 1683 . 1684) (punctuation 1682 . 1683) (symbol 1678 . 1682) (punctuation 1677 . 1678) (punctuation 1676 . 1677) (punctuation 1675 . 1676) (symbol 1673 . 1675) (punctuation 1672 . 1673) (symbol 1667 . 1672) (punctuation 1666 . 1667) (punctuation 1665 . 1666) (symbol 1662 . 1665) (TYPENAME 1653 . 1661) (punctuation 1652 . 1653) (symbol 1644 . 1652) (punctuation 1643 . 1644) (punctuation 1631 . 1632) (symbol 1622 . 1631) (punctuation 1621 . 1622) (punctuation 1620 . 1621) (symbol 1617 . 1620) (TYPENAME 1608 . 1616) (punctuation 1606 . 1607) (TYPENAME 1597 . 1605) (punctuation 1589 . 1590) (symbol 1588 . 1589) (punctuation 1586 . 1587) (symbol 1583 . 1585) (CLASS 1577 . 1582) (punctuation 1569 . 1570) (TEMPLATE 1560 . 1568) (symbol 606 . 610) (symbol 599 . 605) (punctuation 598 . 599)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("folly/futures/Future.h" include (:system-flag t) nil [598 631])
            ("folly/Likely.h" include (:system-flag t) nil [632 657])
            ("folly/futures/ThreadWheelTimekeeper.h" include (:system-flag t) nil [658 706])
            ("folly" type
               (:members 
                  ( ("SemiFuture" type
                       (:prototype t
                        :template-specifier 
                          ( ("Unit" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [801 824])
                    ("SemiFuture" type
                       (:prototype t
                        :template-specifier 
                          ( ("bool" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [834 857])
                    ("SemiFuture" type
                       (:prototype t
                        :template-specifier 
                          ( ("int" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [867 889])
                    ("SemiFuture" type
                       (:prototype t
                        :template-specifier 
                          ( ("int64_t" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [899 925])
                    ("SemiFuture" type
                       (:prototype t
                        :template-specifier 
                          ( ("std::string" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [935 965])
                    ("SemiFuture" type
                       (:prototype t
                        :template-specifier 
                          ( ("double" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [975 1000])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("Unit" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1010 1029])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("bool" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1039 1058])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("int" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1068 1086])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("int64_t" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1096 1118])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("std::string" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1128 1154])
                    ("Future" type
                       (:prototype t
                        :template-specifier 
                          ( ("double" type nil nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1164 1185]))                  
                :type "namespace")
                nil [708 1187])
            ("folly" type
               (:members 
                  ( ("futures" type
                       (:members 
                          ( ("sleep" function
                               (:arguments 
                                  ( ("dur" variable (:type ("Duration" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1266 1279])
                                    ("tk" variable
                                       (:pointer 1
                                        :type ("Timekeeper" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1280 1295]))                                  
                                :type ("Future" type
                                     (:template-specifier 
                                        ( ("Unit" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [1247 1529]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1226 1532]))                  
                :type "namespace")
                nil [1208 1555]))          
      :file "Future.cpp"
      :pointmax 1575
      :fsize 1574
      :lastmodtime '(23109 45034 0 0)
      :unmatched-syntax '((TEMPLATE 1155 . 1163) (TEMPLATE 1119 . 1127) (TEMPLATE 1087 . 1095) (TEMPLATE 1059 . 1067) (TEMPLATE 1030 . 1038) (TEMPLATE 1001 . 1009) (TEMPLATE 966 . 974) (TEMPLATE 926 . 934) (TEMPLATE 890 . 898) (TEMPLATE 858 . 866) (TEMPLATE 825 . 833) (TEMPLATE 792 . 800) (TEMPLATE 1155 . 1163) (TEMPLATE 1119 . 1127) (TEMPLATE 1087 . 1095) (TEMPLATE 1059 . 1067) (TEMPLATE 1030 . 1038) (TEMPLATE 1001 . 1009) (TEMPLATE 966 . 974) (TEMPLATE 926 . 934) (TEMPLATE 890 . 898) (TEMPLATE 858 . 866) (TEMPLATE 825 . 833) (TEMPLATE 792 . 800))))
  :file "!Volumes!Transcend!folly!folly!futures!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
