;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("MYSQL_CLIENT" variable (:constant-flag t) nil [1201 1213])
            ("TABLE" variable (:constant-flag t) nil [1242 1247])
            ("MYSQL_TYPE_TIME2" variable (:constant-flag t) nil [1346 1362])
            ("client_priv.h" include nil nil [1445 1469])
            ("my_time.h" include (:system-flag t) nil [1494 1514])
            ("sslopt-vars.h" include (:system-flag t) nil [1515 1539])
            ("sql_priv.h" include nil nil [1616 1637])
            ("sql_basic_types.h" include nil nil [1638 1666])
            ("log_event.h" include nil nil [1667 1689])
            ("compat56.h" include nil nil [1690 1711])
            ("sql_common.h" include nil nil [1712 1735])
            ("my_dir.h" include nil nil [1736 1755])
            ("welcome_copyright_notice.h" include (:system-flag t) nil [1756 1793])
            ("sql_string.h" include nil nil [1829 1852])
            ("sql_list.h" include nil nil [1880 1901])
            ("rpl_filter.h" include nil nil [1931 1954])
            ("mysqld.h" include nil nil [1956 1975])
            ("algorithm" include (:system-flag t) nil [1977 1997])
            ("my_net_write" variable (:constant-flag t) nil [2007 2019])
            ("net_flush" variable (:constant-flag t) nil [2041 2050])
            ("cli_safe_read" variable (:constant-flag t) nil [2072 2085])
            ("my_net_read" variable (:constant-flag t) nil [2116 2127])
            ("mysql_net_store_length" function
               (:prototype-flag t
                :pointer 1
                :arguments 
                  ( ("packet" variable
                       (:pointer 1
                        :type "unsigned char")
                        (reparse-symbol arg-sub-list) [2189 2211])
                    ("length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2212 2226]))                  
                :type "unsigned char")
                nil [2151 2227])
            ("net_store_length" variable (:constant-flag t) nil [2236 2252])
            ("binlog_filter" variable
               (:pointer 1
                :default-value "0"
                :type ("Rpl_filter" type (:type "class") nil nil))
                nil [2277 2306])
            ("BIN_LOG_HEADER_SIZE" variable (:constant-flag t) nil [2316 2335])
            ("PROBE_HEADER_LEN" variable (:constant-flag t) nil [2346 2362])
            ("system_charset_info" variable
               (:pointer 1
                :default-value "&my_charset_utf8_general_ci"
                :type ("CHARSET_INFO" type (:type "class") nil nil))
                nil [2413 2476])
            ("binlog_events" variable (:type ("DYNAMIC_ARRAY" type (:type "class") nil nil)) nil [2505 2533])
            ("events_in_stmt" variable (:type ("DYNAMIC_ARRAY" type (:type "class") nil nil)) nil [2570 2599])
            ("stop_event_string" variable (:type ("String" type (:type "class") nil nil)) nil [2644 2669])
            ("server_version" variable
               (:dereference 1
                :type "char")
                nil [2711 2754])
            ("server_id" variable
               (:default-value "0"
                :type ("ulong" type (:type "class") nil nil))
                nil [2755 2775])
            ("bytes_sent" variable
               (:default-value "0L"
                :type ("ulong" type (:type "class") nil nil))
                nil [2801 2844])
            ("bytes_received" variable
               (:default-value "0L"
                :type ("ulong" type (:type "class") nil nil))
                nil [2801 2844])
            ("mysqld_net_retry_count" variable
               (:default-value "10L"
                :type ("ulong" type (:type "class") nil nil))
                nil [2845 2880])
            ("open_files_limit" variable (:type ("ulong" type (:type "class") nil nil)) nil [2881 2904])
            ("opt_binlog_rows_event_max_size" variable (:type ("ulong" type (:type "class") nil nil)) nil [2905 2942])
            ("test_flags" variable
               (:default-value "0"
                :type ("uint" type (:type "class") nil nil))
                nil [2943 2963])
            ("opt_protocol" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("uint" type (:type "class") nil nil))
                nil [2965 2993])
            ("result_file" variable
               (:pointer 1
                :typemodifiers ("static")
                :type ("FILE" type (:type "class") nil nil))
                nil [2994 3019])
            ("result_file_name" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [3020 3053])
            ("output_prefix" variable
               (:pointer 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "\"\""
                :type "char")
                nil [3054 3091])
            ("default_dbug_option" variable
               (:pointer 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "\"d:t:o,/tmp/mysqlbinlog.trace\""
                :type "char")
                nil [3110 3182])
            ("current_dbug_option" variable
               (:pointer 1
                :constant-flag t
                :default-value "default_dbug_option"
                :type "char")
                nil [3183 3236])
            ("load_groups" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "{ \"mysqlbinlog\", \"client\", \"client-server\", \"client-mariadb\", 0 }"
                :type "char")
                nil [3244 3344])
            ("ATTRIBUTE_FORMAT" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("printf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3406 3413]))                  
                :type "int")
                nil [3389 3420])
            ("ATTRIBUTE_FORMAT" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("printf" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3483 3490]))                  
                :type "int")
                nil [3466 3497])
            ("one_database" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "bool")
                nil [3499 3582])
            ("one_table" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "bool")
                nil [3499 3582])
            ("to_last_remote_log" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "bool")
                nil [3499 3582])
            ("disable_log_bin" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "bool")
                nil [3499 3582])
            ("opt_hexdump" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "bool")
                nil [3583 3626])
            ("opt_version" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "bool")
                nil [3583 3626])
            ("base64_output_mode_names" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :default-value "{\"NEVER\", \"AUTO\", \"ALWAYS\", \"UNSPEC\", \"DECODE-ROWS\", NullS}"
                :type "char")
                nil [3627 3727])
            ("base64_output_mode_typelib" variable
               (:default-value "{ array_elements(base64_output_mode_names) - 1, \"\",
    base64_output_mode_names, NULL }"
                :type ("TYPELIB" type (:type "class") nil nil))
                nil [3728 3855])
            ("opt_base64_output_mode" variable
               (:typemodifiers ("static")
                :default-value "BASE64_OUTPUT_UNSPEC"
                :type ("enum_base64_output_mode" type (:type "class") nil nil))
                nil [3856 3932])
            ("opt_base64_output_mode_str" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "NullS"
                :type "char")
                nil [3933 3980])
            ("database" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [3981 4006])
            ("table" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [4007 4029])
            ("force_opt" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4030 4088])
            ("short_form" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4030 4088])
            ("remote_opt" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4030 4088])
            ("print_row_count" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4089 4153])
            ("print_row_event_positions" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4089 4153])
            ("print_row_count_used" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4154 4228])
            ("print_row_event_positions_used" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4154 4228])
            ("debug_info_flag" variable
               (:typemodifiers ("static")
                :type ("my_bool" type (:type "class") nil nil))
                nil [4229 4278])
            ("debug_check_flag" variable
               (:typemodifiers ("static")
                :type ("my_bool" type (:type "class") nil nil))
                nil [4229 4278])
            ("force_if_open_opt" variable
               (:typemodifiers ("static")
                :default-value "1"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4279 4315])
            ("opt_raw_mode" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4316 4366])
            ("opt_stop_never" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4316 4366])
            ("opt_stop_never_slave_server_id" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("ulong" type (:type "class") nil nil))
                nil [4367 4414])
            ("opt_verify_binlog_checksum" variable
               (:typemodifiers ("static")
                :default-value "1"
                :type ("my_bool" type (:type "class") nil nil))
                nil [4415 4460])
            ("offset" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("ulonglong" type (:type "class") nil nil))
                nil [4461 4489])
            ("host" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [4490 4512])
            ("port" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "int")
                nil [4513 4532])
            ("my_end_arg" variable
               (:typemodifiers ("static")
                :type ("uint" type (:type "class") nil nil))
                nil [4533 4556])
            ("sock" variable
               (:pointer 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "0"
                :type "char")
                nil [4557 4584])
            ("opt_plugindir" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [4585 4637])
            ("opt_default_auth" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [4585 4637])
            ("user" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [4710 4732])
            ("pass" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [4733 4755])
            ("charset" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "0"
                :type "char")
                nil [4756 4780])
            ("verbose" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("uint" type (:type "class") nil nil))
                nil [4782 4805])
            ("start_position" variable
               (:typemodifiers ("static")
                :type ("ulonglong" type (:type "class") nil nil))
                nil [4807 4854])
            ("stop_position" variable
               (:typemodifiers ("static")
                :type ("ulonglong" type (:type "class") nil nil))
                nil [4807 4854])
            ("start_position_mot" variable (:constant-flag t) nil [4863 4881])
            ("stop_position_mot" variable (:constant-flag t) nil [4917 4934])
            ("start_datetime_str" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [4963 5015])
            ("stop_datetime_str" variable
               (:pointer 1
                :typemodifiers ("static")
                :type "char")
                nil [4963 5015])
            ("start_datetime" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("my_time_t" type (:type "class") nil nil))
                nil [5016 5081])
            ("stop_datetime" variable
               (:typemodifiers ("static")
                :default-value "MY_TIME_T_MAX"
                :type ("my_time_t" type (:type "class") nil nil))
                nil [5016 5081])
            ("rec_count" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type ("ulonglong" type (:type "class") nil nil))
                nil [5082 5112])
            ("mysql" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "NULL"
                :type ("MYSQL" type (:type "class") nil nil))
                nil [5113 5140])
            ("dirname_for_local_load" variable
               (:pointer 1
                :typemodifiers ("static")
                :constant-flag t
                :default-value "0"
                :type "char")
                nil [5141 5186])
            ("opt_skip_annotate_row_events" variable
               (:typemodifiers ("static")
                :default-value "0"
                :type "bool")
                nil [5187 5231])
            ("opt_flashback" variable
               (:typemodifiers ("static")
                :type ("my_bool" type (:type "class") nil nil))
                nil [5233 5262])
            ("glob_description_event" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "NULL"
                :type ("Format_description_log_event" type (:type "class") nil nil))
                nil [5638 5704])
            ("Exit_status" type
               (:members 
                  ( ("OK_CONTINUE" variable
                       (:constant-flag t
                        :default-value (5847 5848)
                        :type "int")
                        (reparse-symbol enumsubparts) [5834 5848])
                    ("ERROR_STOP" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5906 5917])
                    ("OK_STOP" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [5974 5982])
                    ("OK_EOF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [6035 6042]))                  
                :type "enum")
                nil [5755 6045])
            ("annotate_event" variable
               (:pointer 1
                :typemodifiers ("static")
                :default-value "NULL"
                :type ("Annotate_rows_log_event" type (:type "class") nil nil))
                nil [6413 6466])
            ("free_annotate_event" function (:type "void") nil [6468 6578])
            ("read_remote_annotate_event" function
               (:pointer 1
                :arguments 
                  ( ("net_buf" variable
                       (:pointer 1
                        :type ("uchar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [6618 6633])
                    ("event_len" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6634 6650])
                    ("error_msg" variable
                       (:pointer 2
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6689 6712]))                  
                :type ("Log_event" type (:type "class") nil nil))
                nil [6580 7411])
            ("keep_annotate_event" function
               (:arguments 
                  ( ("event" variable
                       (:pointer 1
                        :type ("Annotate_rows_log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7438 7469]))                  
                :type "void")
                nil [7413 7523])
            ("print_annotate_event" function
               (:arguments 
                  ( ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7551 7586]))                  
                :type "bool")
                nil [7525 7819])
            ("dump_local_log_entries" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7863 7882])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7883 7895]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [7821 7896])
            ("dump_remote_log_entries" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [7940 7959])
                    ("" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [7960 7972]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [7897 7973])
            ("dump_log_entries" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("logname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [8010 8030]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [7974 8031])
            ("safe_connect" function
               (:prototype-flag t
                :typemodifiers ("static")
                :type ("Exit_status" type (:type "class") nil nil))
                nil [8032 8066])
            ("Load_log_processor" type
               (:members 
                  ( ("target_dir_name" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [8098 8130])
                    ("target_dir_name_len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8133 8160])
                    ("File_name_record" type
                       (:members 
                          ( ("fname" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol classsubparts) [8729 8741])
                            ("event" variable
                               (:pointer 1
                                :type ("Create_file_log_event" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8746 8775]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [8697 8780])
                    ("file_names" variable (:type ("DYNAMIC_ARRAY" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9113 9138])
                    ("create_unique_file" function
                       (:arguments 
                          ( ("filename" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [9710 9725])
                            ("file_name_end" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [9726 9746]))                          
                        :type ("File" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9686 10082])
                    ("public" label nil (reparse-symbol classsubparts) [10084 10091])
                    ("Load_log_processor" function
                       (:constructor-flag t
                        :type ("Load_log_processor" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10094 10117])
                    ("Load_log_processor" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [10120 10144])
                    ("init" function (:type "int") (reparse-symbol classsubparts) [10148 10290])
                    ("init_by_dir_name" function
                       (:arguments 
                          ( ("dir" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [10316 10332]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [10294 10444])
                    ("init_by_cur_dir" function (:type "void") (reparse-symbol classsubparts) [10447 10616])
                    ("destroy" function (:type "void") (reparse-symbol classsubparts) [10619 10984])
                    ("grab_event" function
                       (:pointer 1
                        :arguments 
                          ( ("file_id" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11658 11671]))                          
                        :type ("Create_file_log_event" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [11624 11977])
                    ("grab_fname" function
                       (:pointer 1
                        :arguments 
                          ( ("file_id" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12673 12686]))                          
                        :type "char")
                        (reparse-symbol classsubparts) [12656 13013])
                    ("process" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ce" variable
                               (:pointer 1
                                :type ("Create_file_log_event" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13036 13062]))                          
                        :type ("Exit_status" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13016 13063])
                    ("process" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ce" variable
                               (:pointer 1
                                :type ("Begin_load_query_log_event" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13086 13117]))                          
                        :type ("Exit_status" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13066 13118])
                    ("process" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ae" variable
                               (:pointer 1
                                :type ("Append_block_log_event" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13141 13168]))                          
                        :type ("Exit_status" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13121 13169])
                    ("prepare_new_file_for_old_format" function
                       (:prototype-flag t
                        :arguments 
                          ( ("le" variable
                               (:pointer 1
                                :type ("Load_log_event" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13209 13228])
                            ("filename" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [13229 13244]))                          
                        :type ("File" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13172 13245])
                    ("load_old_format_file" function
                       (:prototype-flag t
                        :arguments 
                          ( ("net" variable
                               (:pointer 1
                                :type ("NET" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13281 13290])
                            ("server_fname" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [13291 13316])
                            ("server_fname_len" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13352 13374])
                            ("file" variable (:type ("File" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13375 13385]))                          
                        :type ("Exit_status" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13248 13386])
                    ("process_first_event" function
                       (:prototype-flag t
                        :arguments 
                          ( ("bname" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [13421 13439])
                            ("blen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13440 13452])
                            ("block" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("uchar" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13487 13506])
                            ("block_len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13541 13558])
                            ("file_id" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13559 13572])
                            ("ce" variable
                               (:pointer 1
                                :type ("Create_file_log_event" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13607 13633]))                          
                        :type ("Exit_status" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13389 13634]))                  
                :type "class")
                nil [8069 13637])
            ("prepare_new_file_for_old_format" function
               (:parent "Load_log_processor"
                :arguments 
                  ( ("le" variable
                       (:pointer 1
                        :type ("Load_log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14070 14089])
                    ("filename" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [14098 14113]))                  
                :type ("File" type (:type "class") nil nil))
                nil [14013 14504])
            ("load_old_format_file" function
               (:parent "Load_log_processor"
                :arguments 
                  ( ("net" variable
                       (:pointer 1
                        :type ("NET" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14981 14990])
                    ("server_fname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [15044 15068])
                    ("server_fname_len" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15122 15144])
                    ("file" variable (:type ("File" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15198 15208]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [14928 16334])
            ("process_first_event" function
               (:parent "Load_log_processor"
                :arguments 
                  ( ("bname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [17134 17152])
                    ("blen" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17205 17217])
                    ("block" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("uchar" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17270 17289])
                    ("block_len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17342 17359])
                    ("file_id" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17412 17425])
                    ("ce" variable
                       (:pointer 1
                        :type ("Create_file_log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17478 17504]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [17082 18954])
            ("process" function
               (:parent "Load_log_processor"
                :arguments 
                  ( ("ce" variable
                       (:pointer 1
                        :type ("Create_file_log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19339 19365]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [19298 19595])
            ("process" function
               (:parent "Load_log_processor"
                :arguments 
                  ( ("blqe" variable
                       (:pointer 1
                        :type ("Begin_load_query_log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [19989 20022]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [19949 20152])
            ("process" function
               (:parent "Load_log_processor"
                :arguments 
                  ( ("ae" variable
                       (:pointer 1
                        :type ("Append_block_log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [21085 21112]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [21045 22221])
            ("load_processor" variable
               (:typemodifiers ("static")
                :type ("Load_log_processor" type (:type "class") nil nil))
                nil [22224 22265])
            ("convert_path_to_forward_slashes" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fname" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [22760 22772]))                  
                :type "void")
                nil [22716 22857])
            ("shall_skip_database" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("log_dbname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [23135 23158]))                  
                :type "bool")
                nil [23103 23259])
            ("print_use_stmt" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pinfo" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23577 23601])
                    ("ev" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Query_log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [23602 23628]))                  
                :type "void")
                nil [23550 24619])
            ("print_skip_replication_statement" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("pinfo" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25170 25194])
                    ("ev" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25195 25215]))                  
                :type "void")
                nil [25125 25544])
            ("shall_skip_table" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("log_tblname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [25807 25831]))                  
                :type "bool")
                nil [25778 25928])
            ("write_event_header_and_base64" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("ev" variable
                       (:pointer 1
                        :type ("Log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26595 26609])
                    ("result_file" variable
                       (:pointer 1
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26610 26628])
                    ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [26659 26694]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [26546 27322])
            ("print_base64" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27350 27385])
                    ("ev" variable
                       (:pointer 1
                        :type ("Log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [27386 27400]))                  
                :type "bool")
                nil [27325 28215])
            ("print_row_event" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28246 28281])
                    ("ev" variable
                       (:pointer 1
                        :type ("Log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [28282 28296])
                    ("table_id" variable (:type ("ulong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28325 28340])
                    ("is_stmt_end" variable (:type "bool") (reparse-symbol arg-sub-list) [28341 28358]))                  
                :type "bool")
                nil [28218 31722])
            ("process_event" function
               (:arguments 
                  ( ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [32562 32597])
                    ("ev" variable
                       (:pointer 1
                        :type ("Log_event" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [32598 32612])
                    ("pos" variable (:type ("my_off_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32639 32652])
                    ("logname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [32653 32673]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [32536 50145])
            ("my_options" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
  {\"help\", '?', \"Display this help and exit.\",
   0, 0, 0, GET_NO_ARG, NO_ARG, 0, 0, 0, 0, 0, 0},
  {\"base64-output\", OPT_BASE64_OUTPUT_MODE,
    /* 'unspec' is not mentioned because it is just a placeholder. */
   \"Determine when the output statements should be base64-encoded BINLOG \"
   \"statements: 'never' doesn't print binlog row events and should not be \"
   \"used when directing output to a MariaDB master; \"
   \"'decode-rows' decodes row events into commented SQL statements if the \"
   \"--verbose option is also given; \"
   \"'auto' prints base64 only when necessary (i.e., for row-based events and \"
   \"format description events); \"
   \"'always' prints base64 whenever possible. \"
   \"--base64-output with no 'name' argument is equivalent to \"
   \"--base64-output=always and is also deprecated.  If no \"
   \"--base64-output[=name] option is given at all, the default is 'auto'.\",
   &opt_base64_output_mode_str, &opt_base64_output_mode_str,
   0, GET_STR, OPT_ARG, 0, 0, 0, 0, 0, 0},
  /*
    mysqlbinlog needs charsets knowledge, to be able to convert a charset
    number found in binlog to a charset name (to be able to print things
    like this:
    SET @`a`:=_cp850 0x4DFC6C6C6572 COLLATE `cp850_general_ci`;
  */
  {\"character-sets-dir\", OPT_CHARSETS_DIR,
   \"Directory for character set files.\", &charsets_dir,
   &charsets_dir, 0, GET_STR, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"database\", 'd', \"List entries for just this database (local log only).\",
   &database, &database, 0, GET_STR_ALLOC, REQUIRED_ARG,
   0, 0, 0, 0, 0, 0},
#ifndef DBUG_OFF
  {\"debug\", '#', \"Output debug log.\", &current_dbug_option,
   &current_dbug_option, 0, GET_STR, OPT_ARG, 0, 0, 0, 0, 0, 0},
#endif
  {\"debug-check\", OPT_DEBUG_CHECK, \"Check memory and open file usage at exit .\",
   &debug_check_flag, &debug_check_flag, 0,
   GET_BOOL, NO_ARG, 0, 0, 0, 0, 0, 0},
  {\"debug-info\", OPT_DEBUG_INFO, \"Print some debug info at exit.\",
   &debug_info_flag, &debug_info_flag,
   0, GET_BOOL, NO_ARG, 0, 0, 0, 0, 0, 0},
  {\"default_auth\", OPT_DEFAULT_AUTH,
   \"Default authentication client-side plugin to use.\",
   &opt_default_auth, &opt_default_auth, 0,
   GET_STR, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"disable-log-bin\", 'D', \"Disable binary log. This is useful, if you \"
    \"enabled --to-last-log and are sending the output to the same MySQL server. \"
    \"This way you could avoid an endless loop. You would also like to use it \"
    \"when restoring after a crash to avoid duplication of the statements you \"
    \"already have. NOTE: you will need a SUPER privilege to use this option.\",
   &disable_log_bin, &disable_log_bin, 0, GET_BOOL,
   NO_ARG, 0, 0, 0, 0, 0, 0},
  {\"flashback\", 'B', \"Flashback feature can rollback you committed data to a special time point.\",
#ifdef WHEN_FLASHBACK_REVIEW_READY
   \"before Flashback feature writing a row, original row can insert to review-dbname.review-tablename,\"
   \"and mysqlbinlog will login mysql by user(-u) and password(-p) and host(-h).\",
#endif
   &opt_flashback, &opt_flashback, 0, GET_BOOL, NO_ARG, 0, 0, 0, 0,
   0, 0},
  {\"force-if-open\", 'F', \"Force if binlog was not closed properly.\",
   &force_if_open_opt, &force_if_open_opt, 0, GET_BOOL, NO_ARG,
   1, 0, 0, 0, 0, 0},
  {\"force-read\", 'f', \"Force reading unknown binlog events.\",
   &force_opt, &force_opt, 0, GET_BOOL, NO_ARG, 0, 0, 0, 0,
   0, 0},
  {\"hexdump\", 'H', \"Augment output with hexadecimal and ASCII event dump.\",
   &opt_hexdump, &opt_hexdump, 0, GET_BOOL, NO_ARG,
   0, 0, 0, 0, 0, 0},
  {\"host\", 'h', \"Get the binlog from server.\", &host, &host,
   0, GET_STR_ALLOC, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"local-load\", 'l', \"Prepare local temporary files for LOAD DATA INFILE in the specified directory.\",
   &dirname_for_local_load, &dirname_for_local_load, 0,
   GET_STR_ALLOC, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"offset\", 'o', \"Skip the first N entries.\", &offset, &offset,
   0, GET_ULL, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"password\", 'p', \"Password to connect to remote server.\",
   0, 0, 0, GET_STR, OPT_ARG, 0, 0, 0, 0, 0, 0},
  {\"plugin_dir\", OPT_PLUGIN_DIR, \"Directory for client-side plugins.\",
    &opt_plugindir, &opt_plugindir, 0,
   GET_STR, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"port\", 'P', \"Port number to use for connection or 0 for default to, in \"
   \"order of preference, my.cnf, $MYSQL_TCP_PORT, \"
#if MYSQL_PORT_DEFAULT == 0
   \"/etc/services, \"
#endif
   \"built-in default (\" STRINGIFY_ARG(MYSQL_PORT) \").\",
   &port, &port, 0, GET_INT, REQUIRED_ARG,
   0, 0, 0, 0, 0, 0},
  {\"protocol\", OPT_MYSQL_PROTOCOL,
   \"The protocol to use for connection (tcp, socket, pipe, memory).\",
   0, 0, 0, GET_STR,  REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"read-from-remote-server\", 'R', \"Read binary logs from a MySQL server.\",
   &remote_opt, &remote_opt, 0, GET_BOOL, NO_ARG, 0, 0, 0, 0,
   0, 0},
  {\"raw\", 0, \"Requires -R. Output raw binlog data instead of SQL \"
   \"statements. Output files named after server logs.\",
   &opt_raw_mode, &opt_raw_mode, 0, GET_BOOL, NO_ARG, 0, 0, 0, 0,
   0, 0},
  {\"result-file\", 'r', \"Direct output to a given file. With --raw this is a \"
   \"prefix for the file names.\",
   &result_file_name, &result_file_name, 0, GET_STR, REQUIRED_ARG,
   0, 0, 0, 0, 0, 0},
#ifdef WHEN_FLASHBACK_REVIEW_READY
  {\"review\", opt_flashback_review, \"Print review sql in output file.\",
   &opt_flashback_review, &opt_flashback_review, 0, GET_BOOL, NO_ARG, 0, 0, 0, 0,
   0, 0},
  {\"review-dbname\", opt_flashback_flashback_review_dbname,
   \"Writing flashback original row data into this db\",
   &flashback_review_dbname, &flashback_review_dbname,
   0, GET_STR_ALLOC, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"review-tablename\", opt_flashback_flashback_review_tablename,
   \"Writing flashback original row data into this table\",
   &flashback_review_tablename, &flashback_review_tablename,
   0, GET_STR_ALLOC, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
#endif
  {\"print-row-count\", OPT_PRINT_ROW_COUNT,
   \"Print row counts for each row events\",
   &print_row_count, &print_row_count, 0, GET_BOOL, NO_ARG, 1, 0, 0, 0,
   0, 0},
  {\"print-row-event-positions\", OPT_PRINT_ROW_EVENT_POSITIONS,
   \"Print row event positions\",
   &print_row_event_positions, &print_row_event_positions, 0, GET_BOOL,
   NO_ARG, 1, 0, 0, 0, 0, 0},
  {\"server-id\", 0,
   \"Extract only binlog entries created by the server having the given id.\",
   &server_id, &server_id, 0, GET_ULONG,
   REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"set-charset\", OPT_SET_CHARSET,
   \"Add 'SET NAMES character_set' to the output.\", &charset,
   &charset, 0, GET_STR, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
#ifdef HAVE_SMEM
  {\"shared-memory-base-name\", OPT_SHARED_MEMORY_BASE_NAME,
   \"Base name of shared memory.\", &shared_memory_base_name,
   &shared_memory_base_name,
   0, GET_STR, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
#endif
  {\"short-form\", 's', \"Just show regular queries: no extra info, no \"
   \"row-based events and no row counts. This is mainly for testing only, \"
   \"and should not be used to feed to the MariaDB server. \"
   \"If you want to just suppress base64-output, you can instead \"
   \"use --base64-output=never\",
   &short_form, &short_form, 0, GET_BOOL, NO_ARG, 0, 0, 0, 0,
   0, 0},
  {\"socket\", 'S', \"The socket file to use for connection.\",
   &sock, &sock, 0, GET_STR, REQUIRED_ARG, 0, 0, 0, 0,
   0, 0},
#include <sslopt-longopts.h>
  {\"start-datetime\", OPT_START_DATETIME,
   \"Start reading the binlog at first event having a datetime equal or \"
   \"posterior to the argument; the argument must be a date and time \"
   \"in the local time zone, in any format accepted by the MySQL server \"
   \"for DATETIME and TIMESTAMP types, for example: 2004-12-25 11:25:56 \"
   \"(you should probably use quotes for your shell to set it properly).\",
   &start_datetime_str, &start_datetime_str,
   0, GET_STR_ALLOC, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"start-position\", 'j',
   \"Start reading the binlog at position N. Applies to the first binlog \"
   \"passed on the command line.\",
   &start_position, &start_position, 0, GET_ULL,
   REQUIRED_ARG, BIN_LOG_HEADER_SIZE, BIN_LOG_HEADER_SIZE,
   /*
     COM_BINLOG_DUMP accepts only 4 bytes for the position
     so remote log reading has lower limit.
   */
   (ulonglong)(0xffffffffffffffffULL), 0, 0, 0},
  {\"stop-datetime\", OPT_STOP_DATETIME,
   \"Stop reading the binlog at first event having a datetime equal or \"
   \"posterior to the argument; the argument must be a date and time \"
   \"in the local time zone, in any format accepted by the MySQL server \"
   \"for DATETIME and TIMESTAMP types, for example: 2004-12-25 11:25:56 \"
   \"(you should probably use quotes for your shell to set it properly).\",
   &stop_datetime_str, &stop_datetime_str,
   0, GET_STR_ALLOC, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"stop-never\", 0, \"Wait for more data from the server \"
   \"instead of stopping at the end of the last log. Implies --to-last-log.\",
   &opt_stop_never, &opt_stop_never, 0,
   GET_BOOL, NO_ARG, 0, 0, 0, 0, 0, 0},
  {\"stop-never-slave-server-id\", 0,
   \"The slave server_id used for --read-from-remote-server --stop-never.\",
   &opt_stop_never_slave_server_id, &opt_stop_never_slave_server_id, 0,
   GET_ULONG, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"stop-position\", OPT_STOP_POSITION,
   \"Stop reading the binlog at position N. Applies to the last binlog \"
   \"passed on the command line.\",
   &stop_position, &stop_position, 0, GET_ULL,
   REQUIRED_ARG, (longlong)(~(my_off_t)0), BIN_LOG_HEADER_SIZE,
   (ulonglong)(~(my_off_t)0), 0, 0, 0},
  {\"table\", 'T', \"List entries for just this table (local log only).\",
   &table, &table, 0, GET_STR_ALLOC, REQUIRED_ARG,
   0, 0, 0, 0, 0, 0},
  {\"to-last-log\", 't', \"Requires -R. Will not stop at the end of the \\
requested binlog but rather continue printing until the end of the last \\
binlog of the MySQL server. If you send the output to the same MySQL server, \\
that may lead to an endless loop.\",
   &to_last_remote_log, &to_last_remote_log, 0, GET_BOOL,
   NO_ARG, 0, 0, 0, 0, 0, 0},
  {\"user\", 'u', \"Connect to the remote server as username.\",
   &user, &user, 0, GET_STR_ALLOC, REQUIRED_ARG, 0, 0, 0, 0,
   0, 0},
  {\"verbose\", 'v', \"Reconstruct SQL statements out of row events. \"
                   \"-v -v adds comments on column data types.\",
   0, 0, 0, GET_NO_ARG, NO_ARG, 0, 0, 0, 0, 0, 0},
  {\"version\", 'V', \"Print version and exit.\", 0, 0, 0, GET_NO_ARG, NO_ARG, 0,
   0, 0, 0, 0, 0},
  {\"open_files_limit\", OPT_OPEN_FILES_LIMIT,
   \"Used to reserve file descriptors for use by this program.\",
   &open_files_limit, &open_files_limit, 0, GET_ULONG,
   REQUIRED_ARG, MY_NFILE, 8, OS_FILE_LIMIT, 0, 1, 0},
  {\"binlog-row-event-max-size\", 0,
   \"The maximum size of a row-based binary log event in bytes. Rows will be \"
   \"grouped into events smaller than this size if possible. \"
   \"This value must be a multiple of 256.\",
   &opt_binlog_rows_event_max_size, &opt_binlog_rows_event_max_size, 0,
   GET_ULONG, REQUIRED_ARG, UINT_MAX,  256, ULONG_MAX,  0, 256,  0},
  {\"verify-binlog-checksum\", 'c', \"Verify checksum binlog events.\",
   (uchar**) &opt_verify_binlog_checksum, (uchar**) &opt_verify_binlog_checksum,
   0, GET_BOOL, NO_ARG, 0, 0, 0, 0, 0, 0},
  {\"rewrite-db\", OPT_REWRITE_DB,
   \"Updates to a database with a different name than the original. \\
Example: rewrite-db='from->to'.\",
   0, 0, 0, GET_STR, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
  {\"skip-annotate-row-events\", OPT_SKIP_ANNOTATE_ROWS_EVENTS,
   \"Don't print Annotate_rows events stored in the binary log.\",
   (uchar**) &opt_skip_annotate_row_events,
   (uchar**) &opt_skip_annotate_row_events,
   0, GET_BOOL, NO_ARG, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, GET_NO_ARG, NO_ARG, 0, 0, 0, 0, 0, 0}
}"
                :type ("my_option" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [50148 61855])
            ("error_or_warning" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("format" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [62223 62242])
                    ("args" variable (:type ("va_list" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62243 62256])
                    ("msg" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [62257 62273]))                  
                :type "void")
                nil [62194 62430])
            ("error" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("format" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [62626 62645])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [62645 62649]))                  
                :type "void")
                nil [62608 62754])
            ("sql_print_error" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("format" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [62925 62944])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [62944 62948]))                  
                :type "void")
                nil [62897 63053])
            ("warning" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("format" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [63253 63272])
                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [63272 63276]))                  
                :type "void")
                nil [63233 63383])
            ("cleanup" function
               (:typemodifiers ("static")
                :type "void")
                nil [63442 63812])
            ("print_version" function
               (:typemodifiers ("static")
                :type "void")
                nil [63815 63925])
            ("usage" function
               (:typemodifiers ("static")
                :type "void")
                nil [63928 64314])
            ("convert_str_to_timestamp" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [64359 64375]))                  
                :type ("my_time_t" type (:type "class") nil nil))
                nil [64317 65062])
            ("get_one_option" function
               (:arguments 
                  ( ("optid" variable (:type "int") (reparse-symbol arg-sub-list) [65099 65109])
                    ("opt" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("my_option" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [65110 65162])
                    ("argument" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [65171 65186]))                  
                :type ("my_bool" type (:type "class") nil nil))
                nil [65076 68651])
            ("parse_args" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("argc" variable
                       (:pointer 1
                        :type "int")
                        (reparse-symbol arg-sub-list) [68676 68686])
                    ("argv" variable
                       (:pointer 3
                        :type "char")
                        (reparse-symbol arg-sub-list) [68687 68700]))                  
                :type "int")
                nil [68654 69303])
            ("safe_connect" function
               (:typemodifiers ("static")
                :type ("Exit_status" type (:type "class") nil nil))
                nil [69524 71043])
            ("dump_log_entries" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("logname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [71547 71567]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [71511 72721])
            ("check_master_version" function
               (:typemodifiers ("static")
                :type ("Exit_status" type (:type "class") nil nil))
                nil [73127 75577])
            ("handle_event_text_mode" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75622 75657])
                    ("len" variable
                       (:pointer 1
                        :type ("ulong" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [75700 75711])
                    ("logname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [75754 75774])
                    ("logname_len" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75817 75834])
                    ("old_off" variable (:type ("my_off_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [75835 75852]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [75580 80030])
            ("out_file_name" variable
               (:dereference 1
                :typemodifiers ("static")
                :type "char")
                nil [80033 80074])
            ("handle_event_raw_mode" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [80117 80152])
                    ("len" variable
                       (:pointer 1
                        :type ("ulong" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [80194 80205])
                    ("logname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [80247 80267])
                    ("logname_len" variable (:type ("uint" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [80268 80285]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [80076 83924])
            ("dump_remote_log_entries" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [84463 84498])
                    ("logname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [84542 84562]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [84420 87174])
            ("check_header" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("file" variable
                       (:pointer 1
                        :type ("IO_CACHE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [88261 88276])
                    ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [88309 88344])
                    ("logname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [88377 88397]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [88229 94205])
            ("dump_local_log_entries" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("print_event_info" variable
                       (:pointer 1
                        :type ("PRINT_EVENT_INFO" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [94717 94752])
                    ("logname" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [94795 94815]))                  
                :type ("Exit_status" type (:type "class") nil nil))
                nil [94675 98219])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [98231 98240])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [98241 98253]))                  
                :type "int")
                nil [98222 104226])
            ("dummy1" function (:type ("uint" type (:type "class") nil nil)) nil [104229 104256])
            ("encryption_handler" variable
               (:default-value "{
  (uint(*)(uint))dummy1,
  (uint(*)(uint, uint, uchar*, uint*))dummy1,
  (uint(*)(uint, uint))dummy1,
  (int (*)(void*, const uchar*, uint, const uchar*, uint, int, uint, uint))dummy1,
  (int (*)(void*, const uchar*, uint, uchar*, uint*))dummy1,
  (int (*)(void*, uchar*, uint*))dummy1,
  (uint (*)(uint, uint, uint))dummy1
}"
                :type ("encryption_service_st" type
                     (:prototype t
                      :type "struct")
                      nil nil))
                nil [104257 104634])
            ("rpl_tblmap.cc" include nil nil [104728 104752])
            ("my_decimal.h" include nil nil [104766 104789])
            ("decimal.c" include nil nil [104790 104810])
            ("my_decimal.cc" include nil nil [104811 104835])
            ("../sql-common/my_time.c" include nil nil [104836 104870])
            ("password.c" include nil nil [104871 104892])
            ("log_event.cc" include nil nil [104893 104916])
            ("log_event_old.cc" include nil nil [104917 104944])
            ("rpl_utility.cc" include nil nil [104945 104970])
            ("sql_string.cc" include nil nil [104971 104995])
            ("sql_list.cc" include nil nil [104996 105018])
            ("rpl_filter.cc" include nil nil [105019 105043])
            ("compat56.cc" include nil nil [105044 105066]))          
      :file "mysqlbinlog.cc"
      :pointmax 105067
      :fsize 105066
      :lastmodtime '(23242 61313 0 0)
      :unmatched-syntax '((number 3494 . 3495) (number 3491 . 3492) (semantic-list 3440 . 3465) (symbol 3433 . 3440) (VOID 3428 . 3432) (STATIC 3421 . 3427) (number 3417 . 3418) (number 3414 . 3415) (semantic-list 3363 . 3388) (symbol 3358 . 3363) (VOID 3353 . 3357) (STATIC 3346 . 3352))
      :lexical-table 
        '(("start_position_mot" . ((semantic-list "((my_off_t)start_position)" 4882 . 4908)))
          ("PROBE_HEADER_LEN" . ((semantic-list "(EVENT_LEN_OFFSET+4)" 2363 . 2383)))
          ("my_net_write" . ((symbol "ma_net_write" 2020 . 2032)))
          ("cli_safe_read" . ((symbol "mysql_net_read_packet" 2086 . 2107)))
          ("my_net_read" . ((symbol "ma_net_read" 2128 . 2139)))
          ("net_store_length" . ((symbol "mysql_net_store_length" 2253 . 2275)))
          ("net_flush" . ((symbol "ma_net_flush" 2051 . 2063)))
          ("BIN_LOG_HEADER_SIZE" . ((number "4" 2336 . 2337)))
          ("stop_position_mot" . ((semantic-list "((my_off_t)stop_position)" 4936 . 4961)))
          ("MYSQL_CLIENT")
          )
)
    (semanticdb-table "semanticdb-table"
      :file "client_priv.h"
      :fsize 4122
      :lastmodtime '(23242 61313 0 0)))
  :file "!Volumes!Transcend!mariadb!client!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
