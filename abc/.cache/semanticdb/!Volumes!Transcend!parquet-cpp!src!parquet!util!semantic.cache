;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("PARQUET_UTIL_COMPARISON_H" variable (:constant-flag t) nil [845 870])
            ("algorithm" include (:system-flag t) nil [872 892])
            ("parquet/exception.h" include nil nil [894 924])
            ("parquet/schema.h" include nil nil [925 952])
            ("parquet/types.h" include nil nil [953 979])
            ("parquet" type
               (:members 
                  ( ("Comparator" variable (:type ("PARQUET_EXPORT" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [1002 1148])
                    ("Comparator" variable (:type "int") (reparse-symbol namespacesubparts) [1257 1438])
                    ("Comparator" variable (:type "int") (reparse-symbol namespacesubparts) [1508 2067])
                    ("Comparator" variable (:type "int") (reparse-symbol namespacesubparts) [2141 2501])
                    ("Comparator" variable (:type "int") (reparse-symbol namespacesubparts) [2570 3040])
                    ("CompareDefaultBoolean" type
                       (:typedef ("CompareDefault" type
                             (:template-specifier 
                                ( ("BooleanType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [3042 3100])
                    ("CompareDefaultInt32" type
                       (:typedef ("CompareDefault" type
                             (:template-specifier 
                                ( ("Int32Type" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [3101 3155])
                    ("CompareDefaultInt64" type
                       (:typedef ("CompareDefault" type
                             (:template-specifier 
                                ( ("Int64Type" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [3156 3210])
                    ("CompareDefaultInt96" type
                       (:typedef ("CompareDefault" type
                             (:template-specifier 
                                ( ("Int96Type" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [3211 3265])
                    ("CompareDefaultFloat" type
                       (:typedef ("CompareDefault" type
                             (:template-specifier 
                                ( ("FloatType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [3266 3320])
                    ("CompareDefaultDouble" type
                       (:typedef ("CompareDefault" type
                             (:template-specifier 
                                ( ("DoubleType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [3321 3377])
                    ("CompareDefaultByteArray" type
                       (:typedef ("CompareDefault" type
                             (:template-specifier 
                                ( ("ByteArrayType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [3378 3440])
                    ("CompareDefaultFLBA" type
                       (:typedef ("CompareDefault" type
                             (:template-specifier 
                                ( ("FLBAType" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [3441 3493])
                    ("CompareDefault" variable (:type ("PARQUET_EXTERN_TEMPLATE" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3622 3674])
                    ("CompareDefault" variable (:type ("PARQUET_EXTERN_TEMPLATE" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3675 3725])
                    ("CompareDefault" variable (:type ("PARQUET_EXTERN_TEMPLATE" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3726 3776])
                    ("CompareDefault" variable (:type ("PARQUET_EXTERN_TEMPLATE" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3777 3827])
                    ("CompareDefault" variable (:type ("PARQUET_EXTERN_TEMPLATE" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3828 3878])
                    ("CompareDefault" variable (:type ("PARQUET_EXTERN_TEMPLATE" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3879 3930])
                    ("CompareDefault" variable (:type ("PARQUET_EXTERN_TEMPLATE" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3931 3985])
                    ("CompareDefault" variable (:type ("PARQUET_EXTERN_TEMPLATE" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [3986 4035])
                    ("CompareDefaultInt32" variable (:type "int") (reparse-symbol namespacesubparts) [4199 4414])
                    ("CompareDefaultInt64" variable (:type "int") (reparse-symbol namespacesubparts) [4467 4682])
                    ("CompareDefaultInt96" variable (:type "int") (reparse-symbol namespacesubparts) [4735 5073])
                    ("CompareDefaultByteArray" variable (:type "int") (reparse-symbol namespacesubparts) [5130 5496])
                    ("CompareDefaultFLBA" variable (:type "int") (reparse-symbol namespacesubparts) [5548 6023]))                  
                :type "namespace")
                nil [981 6026]))          
      :file "comparison.h"
      :pointmax 6087
      :fsize 6086
      :lastmodtime '(23107 21151 0 0)
      :unmatched-syntax '((PUBLIC 5541 . 5547) (punctuation 5539 . 5540) (symbol 5519 . 5538) (symbol 5504 . 5518) (CLASS 5498 . 5503) (PUBLIC 5123 . 5129) (punctuation 5121 . 5122) (symbol 5096 . 5120) (symbol 5081 . 5095) (CLASS 5075 . 5080) (PUBLIC 4728 . 4734) (punctuation 4726 . 4727) (symbol 4705 . 4725) (symbol 4690 . 4704) (CLASS 4684 . 4689) (PUBLIC 4460 . 4466) (punctuation 4458 . 4459) (symbol 4437 . 4457) (symbol 4422 . 4436) (CLASS 4416 . 4421) (PUBLIC 4192 . 4198) (punctuation 4190 . 4191) (symbol 4169 . 4189) (symbol 4154 . 4168) (CLASS 4148 . 4153) (PUBLIC 2563 . 2569) (punctuation 2561 . 2562) (punctuation 2559 . 2560) (symbol 2551 . 2559) (punctuation 2550 . 2551) (symbol 2536 . 2550) (symbol 2521 . 2535) (CLASS 2515 . 2520) (punctuation 2513 . 2514) (punctuation 2512 . 2513) (TEMPLATE 2503 . 2511) (PUBLIC 2134 . 2140) (punctuation 2132 . 2133) (punctuation 2130 . 2131) (symbol 2117 . 2130) (punctuation 2116 . 2117) (symbol 2102 . 2116) (symbol 2087 . 2101) (CLASS 2081 . 2086) (punctuation 2079 . 2080) (punctuation 2078 . 2079) (TEMPLATE 2069 . 2077) (PUBLIC 1501 . 1507) (punctuation 1499 . 1500) (punctuation 1497 . 1498) (symbol 1488 . 1497) (punctuation 1487 . 1488) (symbol 1473 . 1487) (symbol 1458 . 1472) (CLASS 1452 . 1457) (punctuation 1450 . 1451) (punctuation 1449 . 1450) (TEMPLATE 1440 . 1448) (PUBLIC 1250 . 1256) (punctuation 1248 . 1249) (symbol 1233 . 1247) (symbol 1218 . 1232) (CLASS 1212 . 1217) (punctuation 1210 . 1211) (symbol 1205 . 1210) (TYPENAME 1196 . 1204) (punctuation 1195 . 1196) (TEMPLATE 1186 . 1194))
      :lexical-table 
        '(("PARQUET_UTIL_COMPARISON_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("PARQUET_UTIL_MACROS_H" variable (:constant-flag t) nil [841 862])
            ("DISALLOW_COPY_AND_ASSIGN" variable (:constant-flag t) nil [959 983])
            ("PARQUET_PREDICT_FALSE" variable (:constant-flag t) nil [1122 1143])
            ("PARQUET_PREDICT_TRUE" variable (:constant-flag t) nil [1180 1200])
            ("PARQUET_NORETURN" variable (:constant-flag t) nil [1241 1257])
            ("PARQUET_PREFETCH" variable (:constant-flag t) nil [1292 1308])
            ("PARQUET_NORETURN" variable (:constant-flag t) nil [1524 1540])
            ("PARQUET_PREDICT_FALSE" variable (:constant-flag t) nil [1549 1570])
            ("PARQUET_PREDICT_TRUE" variable (:constant-flag t) nil [1584 1604])
            ("PARQUET_PREFETCH" variable (:constant-flag t) nil [1618 1634])
            ("FRIEND_TEST" variable (:constant-flag t) nil [2172 2183]))          
      :file "macros.h"
      :pointmax 2298
      :fsize 2297
      :lastmodtime '(23107 21151 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("DISALLOW_COPY_AND_ASSIGN" (spp-arg-list ("TypeName") 983 . 993) . 
              ((symbol "TypeName" 998 . 1006) (semantic-list "(const TypeName&)" 1006 . 1023) (punctuation "=" 1024 . 1025) (DELETE "delete" 1026 . 1032) (punctuation ";" 1032 . 1033) (VOID "void" 1043 . 1047) (OPERATOR "operator" 1048 . 1056) (punctuation "=" 1056 . 1057) (semantic-list "(const TypeName&)" 1057 . 1074) (punctuation "=" 1075 . 1076) (DELETE "delete" 1077 . 1083)))
          ("PARQUET_UTIL_MACROS_H")
          ("PARQUET_PREDICT_TRUE" (spp-arg-list ("x") 1604 . 1607) . ((symbol "x" 1608 . 1609)))
          ("PARQUET_NORETURN")
          ("PARQUET_PREFETCH" (spp-arg-list ("addr") 1634 . 1640))
          ("PARQUET_PREDICT_FALSE" (spp-arg-list ("x") 1570 . 1573) . ((symbol "x" 1574 . 1575)))
          ("FRIEND_TEST" (spp-arg-list ("test_case_name" "test_name") 2183 . 2210) . 
              ((FRIEND "friend" 2215 . 2221) (CLASS "class" 2222 . 2227) (spp-symbol-merge ((spp-symbol-merge ((spp-symbol-merge ((symbol "test_case_name" 2228 . 2242) (symbol "_" 2244 . 2245)) 2228 . 2245) (symbol "test_name" 2247 . 2256)) 2228 . 2256) (symbol "_Test" 2258 . 2263)) 2228 . 2263)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("PARQUET_UTIL_MEMORY_H" variable (:constant-flag t) nil [841 862])
            ("atomic" include (:system-flag t) nil [864 881])
            ("cstdint" include (:system-flag t) nil [882 900])
            ("cstdlib" include (:system-flag t) nil [901 919])
            ("cstring" include (:system-flag t) nil [920 938])
            ("memory" include (:system-flag t) nil [939 956])
            ("string" include (:system-flag t) nil [957 974])
            ("vector" include (:system-flag t) nil [975 992])
            ("arrow/buffer.h" include nil nil [994 1019])
            ("arrow/io/interfaces.h" include nil nil [1020 1052])
            ("arrow/io/memory.h" include nil nil [1053 1081])
            ("arrow/memory_pool.h" include nil nil [1082 1112])
            ("arrow/status.h" include nil nil [1113 1138])
            ("arrow/util/compression.h" include nil nil [1139 1174])
            ("parquet/exception.h" include nil nil [1176 1206])
            ("parquet/types.h" include nil nil [1207 1233])
            ("parquet/util/macros.h" include nil nil [1234 1266])
            ("parquet/util/visibility.h" include nil nil [1267 1303])
            ("parquet" type
               (:members 
                  ( ("GetCodecFromArrow" function
                       (:arguments 
                          ( ("codec" variable (:type ("Compression::type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1390 1414]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1372 2359])
                    ("kInMemoryDefaultCapacity" variable
                       (:default-value "1024"
                        :type ("int64_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2378 2418])
                    ("arrow::Buffer" variable (:type "int") (reparse-symbol namespacesubparts) [2437 2451])
                    ("arrow::MutableBuffer" variable (:type "int") (reparse-symbol namespacesubparts) [2476 2497])
                    ("arrow::ResizableBuffer" variable (:type "int") (reparse-symbol namespacesubparts) [2524 2547])
                    ("arrow::PoolBuffer" variable (:type "int") (reparse-symbol namespacesubparts) [2569 2587])
                    ("Vector" variable (:type ("PARQUET_EXPORT" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [2589 3090])
                    ("ChunkedAllocator" variable (:type ("PARQUET_EXPORT" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [4997 8618])
                    ("FileInterface" variable (:type ("PARQUET_EXPORT" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [8700 8933])
                    ("FileInterface" variable (:type "int") (reparse-symbol namespacesubparts) [9085 9521])
                    ("FileInterface" variable (:type "int") (reparse-symbol namespacesubparts) [9574 9741])
                    ("FileInterface" variable (:type "int") (reparse-symbol namespacesubparts) [9798 10029])
                    ("RandomAccessSource" variable (:type "int") (reparse-symbol namespacesubparts) [10187 10975])
                    ("OutputStream" variable (:type "int") (reparse-symbol namespacesubparts) [11050 11543])
                    ("OutputStream" variable (:type "int") (reparse-symbol namespacesubparts) [11596 12451])
                    ("InputStream" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [12762 12769])
                            ("Peek" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :constant-flag t
                                :arguments 
                                  ( ("num_to_peek" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13223 13243])
                                    ("num_bytes" variable
                                       (:pointer 1
                                        :type ("int64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13244 13263]))                                  
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13195 13268])
                            ("Read" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :pointer 1
                                :typemodifiers ("virtual")
                                :constant-flag t
                                :arguments 
                                  ( ("num_to_read" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13400 13420])
                                    ("num_bytes" variable
                                       (:pointer 1
                                        :type ("int64_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13421 13440]))                                  
                                :type ("uint8_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13372 13445])
                            ("Advance" function
                               (:pure-virtual-flag t
                                :prototype-flag t
                                :typemodifiers ("virtual")
                                :arguments 
                                  ( ("num_bytes" variable (:type ("int64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13510 13528]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [13489 13533])
                            ("InputStream" function
                               (:destructor-flag t
                                :typemodifiers ("virtual")
                                :type "void")
                                (reparse-symbol classsubparts) [13537 13562])
                            ("protected" label nil (reparse-symbol classsubparts) [13565 13575])
                            ("InputStream" function
                               (:constructor-flag t
                                :type ("InputStream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13578 13594]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [12741 13597])
                    ("InputStream" variable (:type "int") (reparse-symbol namespacesubparts) [13719 14163])
                    ("InputStream" variable (:type "int") (reparse-symbol namespacesubparts) [14294 14836])
                    ("AllocateBuffer" function
                       (:prototype-flag t
                        :arguments 
                          ( ("pool" variable
                               (:pointer 1
                                :type ("arrow::MemoryPool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14898 14922])
                            ("size" variable
                               (:default-value "0"
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14981 14997]))                          
                        :type ("PARQUET_EXPORT" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14866 14999])
                    ("AllocateUniqueBuffer" function
                       (:prototype-flag t
                        :arguments 
                          ( ("pool" variable
                               (:pointer 1
                                :type ("arrow::MemoryPool" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15067 15091])
                            ("size" variable
                               (:default-value "0"
                                :type ("int64_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15156 15172]))                          
                        :type ("PARQUET_EXPORT" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15029 15174]))                  
                :type "namespace")
                nil [1305 15177]))          
      :file "memory.h"
      :pointmax 15234
      :fsize 15233
      :lastmodtime '(23107 21151 0 0)
      :unmatched-syntax '((punctuation 15066 . 15067) (punctuation 15065 . 15066) (punctuation 15027 . 15028) (symbol 15017 . 15027) (punctuation 15016 . 15017) (symbol 15006 . 15016) (punctuation 15005 . 15006) (punctuation 15004 . 15005) (symbol 15001 . 15004) (punctuation 14897 . 14898) (punctuation 14896 . 14897) (punctuation 14864 . 14865) (symbol 14854 . 14864) (punctuation 14853 . 14854) (symbol 14843 . 14853) (punctuation 14842 . 14843) (punctuation 14841 . 14842) (symbol 14838 . 14841) (PUBLIC 14287 . 14293) (punctuation 14285 . 14286) (symbol 14265 . 14284) (symbol 14250 . 14264) (CLASS 14244 . 14249) (PUBLIC 13712 . 13718) (punctuation 13710 . 13711) (symbol 13690 . 13709) (symbol 13675 . 13689) (CLASS 13669 . 13674) (PUBLIC 11589 . 11595) (punctuation 11587 . 11588) (symbol 11566 . 11586) (symbol 11551 . 11565) (CLASS 11545 . 11550) (PUBLIC 11043 . 11049) (punctuation 11041 . 11042) (symbol 11025 . 11041) (PUBLIC 11018 . 11024) (punctuation 11016 . 11017) (symbol 10998 . 11015) (symbol 10983 . 10997) (CLASS 10977 . 10982) (PUBLIC 10180 . 10186) (punctuation 10178 . 10179) (symbol 10162 . 10178) (PUBLIC 10155 . 10161) (punctuation 10153 . 10154) (symbol 10138 . 10152) (symbol 10123 . 10137) (CLASS 10117 . 10122) (PUBLIC 9791 . 9797) (VIRTUAL 9783 . 9790) (punctuation 9781 . 9782) (symbol 9764 . 9780) (symbol 9749 . 9763) (CLASS 9743 . 9748) (PUBLIC 9567 . 9573) (VIRTUAL 9559 . 9566) (punctuation 9557 . 9558) (symbol 9544 . 9556) (symbol 9529 . 9543) (CLASS 9523 . 9528) (PUBLIC 9078 . 9084) (VIRTUAL 9070 . 9077) (punctuation 9068 . 9069) (symbol 9049 . 9067) (symbol 9034 . 9048) (CLASS 9028 . 9033) (punctuation 2568 . 2569) (punctuation 2567 . 2568) (punctuation 2565 . 2566) (symbol 2554 . 2564) (USING 2548 . 2553) (punctuation 2523 . 2524) (punctuation 2522 . 2523) (punctuation 2520 . 2521) (symbol 2504 . 2519) (USING 2498 . 2503) (punctuation 2475 . 2476) (punctuation 2474 . 2475) (punctuation 2472 . 2473) (symbol 2458 . 2471) (USING 2452 . 2457) (punctuation 2436 . 2437) (punctuation 2435 . 2436) (punctuation 2433 . 2434) (symbol 2426 . 2432) (USING 2420 . 2425) (symbol 2368 . 2377) (STATIC 2361 . 2367) (punctuation 1370 . 1371) (symbol 1365 . 1370) (punctuation 1364 . 1365) (punctuation 1363 . 1364) (symbol 1358 . 1363) (punctuation 1357 . 1358) (punctuation 1356 . 1357) (punctuation 1355 . 1356) (symbol 1345 . 1355) (punctuation 1344 . 1345) (punctuation 1343 . 1344) (symbol 1340 . 1343) (INLINE 1333 . 1339) (STATIC 1326 . 1332))
      :lexical-table 
        '(("PARQUET_UTIL_MEMORY_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("PARQUET_UTIL_VISIBILITY_H" variable (:constant-flag t) nil [845 870])
            ("PARQUET_EXPORT" variable (:constant-flag t) nil [1551 1565])
            ("PARQUET_NO_EXPORT" variable (:constant-flag t) nil [1646 1663])
            ("PARQUET_EXTERN_TEMPLATE" variable (:constant-flag t) nil [1917 1940])
            ("PARQUET_TEMPLATE_EXPORT" variable (:constant-flag t) nil [2256 2279]))          
      :file "visibility.h"
      :pointmax 2325
      :fsize 2324
      :lastmodtime '(23107 21152 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("PARQUET_EXPORT" . ((symbol "__attribute__" 1566 . 1579) (semantic-list "((visibility(\"default\")))" 1579 . 1604)))
          ("PARQUET_UTIL_VISIBILITY_H")
          ("PARQUET_TEMPLATE_EXPORT")
          ("PARQUET_NO_EXPORT" . ((symbol "__attribute__" 1664 . 1677) (semantic-list "((visibility(\"hidden\")))" 1677 . 1701)))
          ("PARQUET_EXTERN_TEMPLATE" . 
              ((EXTERN "extern" 1941 . 1947) (TEMPLATE "template" 1948 . 1956) (CLASS "class" 1957 . 1962) (symbol "PARQUET_EXPORT" 1963 . 1977)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("PARQUET_UTIL_STOPWATCH_H" variable (:constant-flag t) nil [844 868])
            ("stdio.h" include (:system-flag t) nil [870 888])
            ("sys/time.h" include (:system-flag t) nil [906 927])
            ("ctime" include (:system-flag t) nil [936 952])
            ("iostream" include (:system-flag t) nil [953 972])
            ("parquet" type
               (:members 
                  ( ("StopWatch" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1014 1021])
                            ("StopWatch" function
                               (:constructor-flag t
                                :type ("StopWatch" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1024 1038])
                            ("Start" function (:type "void") (reparse-symbol classsubparts) [1042 1088])
                            ("Stop" function (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1126 1331])
                            ("private" label nil (reparse-symbol classsubparts) [1334 1342])
                            ("start_time" variable (:type ("timeval" type
                                 (:prototype t
                                  :type "struct")
                                  nil nil)) (reparse-symbol classsubparts) [1345 1371]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [995 1374]))                  
                :type "namespace")
                nil [974 1377]))          
      :file "stopwatch.h"
      :pointmax 1408
      :fsize 1407
      :lastmodtime '(23107 21152 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("PARQUET_UTIL_STOPWATCH_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("PARQUET_SCHEMA_UTIL_H" variable (:constant-flag t) nil [841 862])
            ("string" include (:system-flag t) nil [864 881])
            ("unordered_set" include (:system-flag t) nil [882 906])
            ("vector" include (:system-flag t) nil [907 924])
            ("parquet/exception.h" include nil nil [926 956])
            ("parquet/schema.h" include nil nil [957 984])
            ("parquet/types.h" include nil nil [985 1011])
            ("parquet::ParquetException" using (:type ("parquet::ParquetException" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [1013 1045])
            ("parquet::SchemaDescriptor" using (:type ("parquet::SchemaDescriptor" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [1046 1078])
            ("parquet::schema::GroupNode" using (:type ("parquet::schema::GroupNode" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [1079 1112])
            ("parquet::schema::NodePtr" using (:type ("parquet::schema::NodePtr" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [1113 1144])
            ("parquet::schema::Node" using (:type ("parquet::schema::Node" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [1145 1173])
            ("parquet::LogicalType" using (:type ("parquet::LogicalType" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [1174 1201])
            ("str_endswith_tuple" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("str" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1234 1257]))                  
                :type "bool")
                nil [1203 1360])
            ("HasStructListName" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("node" variable
                       (:reference 1
                        :constant-flag t
                        :type ("GroupNode" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1552 1574]))                  
                :type "bool")
                nil [1522 1648])
            ("IsSimpleStruct" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("node" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("Node" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1766 1783]))                  
                :type "bool")
                nil [1739 2240])
            ("ColumnIndicesToFieldIndices" function
               (:typemodifiers ("inline")
                :arguments 
                  ( ("descr" variable
                       (:reference 1
                        :constant-flag t
                        :type ("SchemaDescriptor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2401 2431])
                    ("column_indices" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2472 2511])
                    ("out" variable
                       (:pointer 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2552 2574]))                  
                :type "bool")
                nil [2361 3033]))          
      :file "schema-util.h"
      :pointmax 3068
      :fsize 3067
      :lastmodtime '(23107 21151 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("PARQUET_SCHEMA_UTIL_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("PARQUET_UTIL_WINDOWS_COMPATIBILITY" variable (:constant-flag t) nil [854 888]))          
      :file "windows_compatibility.h"
      :pointmax 1160
      :fsize 1159
      :lastmodtime '(23107 21152 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("PARQUET_UTIL_WINDOWS_COMPATIBILITY")
          )
))
  :file "!Volumes!Transcend!parquet-cpp!src!parquet!util!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
