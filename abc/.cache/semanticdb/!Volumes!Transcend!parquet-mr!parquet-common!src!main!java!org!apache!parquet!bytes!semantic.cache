;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode java-mode
      :tags 
        '( ("org.apache.parquet.bytes" package nil nil [812 845])
            ("java.io.EOFException" include nil nil [847 875])
            ("java.io.IOException" include nil nil [876 903])
            ("java.io.InputStream" include nil nil [904 931])
            ("java.io.OutputStream" include nil nil [932 960])
            ("java.nio.ByteBuffer" include nil nil [961 988])
            ("java.nio.charset.Charset" include nil nil [989 1021])
            ("org.slf4j.Logger" include nil nil [1023 1047])
            ("org.slf4j.LoggerFactory" include nil nil [1048 1079])
            ("BytesUtils" type
               (:typemodifiers ("public")
                :members 
                  ( ("LOG" variable
                       (:typemodifiers ("private" "static" "final")
                        :type "Logger")
                        (reparse-symbol class_member_declaration) [1186 1262])
                    ("UTF8" variable
                       (:typemodifiers ("public" "static" "final")
                        :type "Charset")
                        (reparse-symbol class_member_declaration) [1266 1326])
                    ("getWidthFromMaxInt" function
                       (:typemodifiers ("public" "static")
                        :arguments 
                          ( ("bound" variable (:type "int") (reparse-symbol formal_parameters) [1542 1551]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [1505 1611])
                    ("readIntLittleEndian" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "ByteBuffer") (reparse-symbol formal_parameters) [1794 1807])
                            ("offset" variable (:type "int") (reparse-symbol formal_parameters) [1809 1819]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [1756 2071])
                    ("readIntLittleEndian" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable
                               (:dereference 1
                                :type "byte")
                                (reparse-symbol formal_parameters) [2256 2265])
                            ("offset" variable (:type "int") (reparse-symbol formal_parameters) [2267 2277]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [2218 2513])
                    ("readIntLittleEndian" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [2555 2569]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [2517 2908])
                    ("readIntLittleEndianOnOneByte" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [2959 2973]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [2912 3107])
                    ("readIntLittleEndianOnTwoBytes" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [3159 3173]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [3111 3367])
                    ("readIntLittleEndianOnThreeBytes" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [3421 3435]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [3371 3676])
                    ("readIntLittleEndianPaddedOnBitWidth" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [3734 3748])
                            ("bitWidth" variable (:type "int") (reparse-symbol formal_parameters) [3750 3762]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [3680 4350])
                    ("writeIntLittleEndianOnOneByte" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [4403 4419])
                            ("v" variable (:type "int") (reparse-symbol formal_parameters) [4421 4426]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [4354 4486])
                    ("writeIntLittleEndianOnTwoBytes" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [4540 4556])
                            ("v" variable (:type "int") (reparse-symbol formal_parameters) [4558 4563]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [4490 4657])
                    ("writeIntLittleEndianOnThreeBytes" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [4713 4729])
                            ("v" variable (:type "int") (reparse-symbol formal_parameters) [4731 4736]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [4661 4864])
                    ("writeIntLittleEndian" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [4908 4924])
                            ("v" variable (:type "int") (reparse-symbol formal_parameters) [4926 4931]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [4868 5339])
                    ("writeIntLittleEndianPaddedOnBitWidth" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [5507 5523])
                            ("v" variable (:type "int") (reparse-symbol formal_parameters) [5525 5530])
                            ("bitWidth" variable (:type "int") (reparse-symbol formal_parameters) [5532 5544]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [5451 6126])
                    ("readUnsignedVarInt" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [6167 6181]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [6130 6377])
                    ("readZigZagVarInt" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [6601 6615]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [6566 6765])
                    ("writeUnsignedVarInt" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol formal_parameters) [6808 6817])
                            ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [6819 6835]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [6769 6997])
                    ("writeUnsignedVarInt" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol formal_parameters) [7040 7049])
                            ("dest" variable (:type "ByteBuffer") (reparse-symbol formal_parameters) [7051 7066]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [7001 7232])
                    ("writeZigZagVarInt" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("intValue" variable (:type "int") (reparse-symbol formal_parameters) [7273 7285])
                            ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [7287 7303]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [7236 7394])
                    ("readZigZagVarLong" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [7728 7742]))                          
                        :type "long")
                        (reparse-symbol class_member_declaration) [7691 7896])
                    ("readUnsignedVarLong" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("in" variable (:type "InputStream") (reparse-symbol formal_parameters) [7939 7953]))                          
                        :type "long")
                        (reparse-symbol class_member_declaration) [7900 8151])
                    ("writeUnsignedVarLong" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("value" variable (:type "long") (reparse-symbol formal_parameters) [8195 8205])
                            ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [8207 8223]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [8155 8408])
                    ("writeZigZagVarLong" function
                       (:throws ("IOException")
                        :typemodifiers ("public" "static")
                        :arguments 
                          ( ("longValue" variable (:type "long") (reparse-symbol formal_parameters) [8450 8464])
                            ("out" variable (:type "OutputStream") (reparse-symbol formal_parameters) [8466 8482]))                          
                        :type "void")
                        (reparse-symbol class_member_declaration) [8412 8576])
                    ("paddedByteCountFromBits" function
                       (:typemodifiers ("public" "static")
                        :arguments 
                          ( ("bitLength" variable (:type "int") (reparse-symbol formal_parameters) [8738 8751]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [8696 8790])
                    ("intToBytes" function
                       (:typemodifiers ("public" "static")
                        :arguments 
                          ( ("value" variable (:type "int") (reparse-symbol formal_parameters) [8826 8835]))                          
                        :type "byte[]")
                        (reparse-symbol class_member_declaration) [8794 9064])
                    ("bytesToInt" function
                       (:typemodifiers ("public" "static")
                        :arguments 
                          ( ("bytes" variable
                               (:dereference 1
                                :type "byte")
                                (reparse-symbol formal_parameters) [9097 9109]))                          
                        :type "int")
                        (reparse-symbol class_member_declaration) [9068 9287])
                    ("longToBytes" function
                       (:typemodifiers ("public" "static")
                        :arguments 
                          ( ("value" variable (:type "long") (reparse-symbol formal_parameters) [9324 9334]))                          
                        :type "byte[]")
                        (reparse-symbol class_member_declaration) [9291 9727])
                    ("bytesToLong" function
                       (:typemodifiers ("public" "static")
                        :arguments 
                          ( ("bytes" variable
                               (:dereference 1
                                :type "byte")
                                (reparse-symbol formal_parameters) [9762 9774]))                          
                        :type "long")
                        (reparse-symbol class_member_declaration) [9731 10126])
                    ("booleanToBytes" function
                       (:typemodifiers ("public" "static")
                        :arguments 
                          ( ("value" variable (:type "boolean") (reparse-symbol formal_parameters) [10166 10179]))                          
                        :type "byte[]")
                        (reparse-symbol class_member_declaration) [10130 10286])
                    ("bytesToBool" function
                       (:typemodifiers ("public" "static")
                        :arguments 
                          ( ("bytes" variable
                               (:dereference 1
                                :type "byte")
                                (reparse-symbol formal_parameters) [10324 10336]))                          
                        :type "boolean")
                        (reparse-symbol class_member_declaration) [10290 10384]))                  
                :type "class")
                nil [1158 10386]))          
      :file "BytesUtils.java"
      :pointmax 10387
      :fsize 10386
      :lastmodtime '(23115 11493 0 0)
      :unmatched-syntax nil))
  :file "!Volumes!Transcend!parquet-mr!parquet-common!src!main!java!org!apache!parquet!bytes!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
