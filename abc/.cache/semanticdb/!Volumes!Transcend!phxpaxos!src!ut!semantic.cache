;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("make_class.h" include nil nil [744 767])
            ("phxpaxos/options.h" include nil nil [768 797])
            ("mock_class.h" include nil nil [798 821])
            ("testing::_" variable (:type "int") nil [831 842])
            ("testing::Return" variable (:type "int") nil [851 867])
            ("phxpaxos" type
               (:members 
                  ( ("GetMyNode" function (:type ("NodeInfo" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [891 1023])
                    ("MakeConfig" function
                       (:arguments 
                          ( ("poMockLogStorage" variable
                               (:pointer 1
                                :type ("MockLogStorage" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1041 1075])
                            ("" variable
                               (:pointer 1
                                :type ("Config" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1076 1085])
                            ("" variable (:type ("poConfig" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1086 1095]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1025 1761])
                    ("MakeCommunicate" function
                       (:arguments 
                          ( ("poMockNetWork" variable
                               (:pointer 1
                                :type ("MockNetWork" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1784 1812])
                            ("poConfig" variable
                               (:pointer 1
                                :type ("Config" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1813 1831])
                            ("" variable
                               (:pointer 1
                                :type ("Communicate" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1832 1846])
                            ("" variable (:type ("poCommunicate" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1847 1861]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1763 2025])
                    ("MakeInstance" function
                       (:arguments 
                          ( ("poMockLogStorage" variable
                               (:pointer 1
                                :type ("MockLogStorage" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2045 2079])
                            ("poConfig" variable
                               (:pointer 1
                                :type ("Config" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2080 2098])
                            ("poCommunicate" variable
                               (:pointer 1
                                :type ("Communicate" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2099 2127])
                            ("" variable
                               (:pointer 1
                                :type ("Instance" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2128 2139])
                            ("" variable (:type ("poInstance" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2140 2151]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2027 2322])
                    ("MakeAcceptor" function
                       (:arguments 
                          ( ("poMockLogStorage" variable
                               (:pointer 1
                                :type ("MockLogStorage" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2342 2376])
                            ("poConfig" variable
                               (:pointer 1
                                :type ("Config" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2377 2395])
                            ("poCommunicate" variable
                               (:pointer 1
                                :type ("Communicate" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2396 2424])
                            ("poInstance" variable
                               (:pointer 1
                                :type ("Instance" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2425 2447])
                            ("" variable
                               (:pointer 1
                                :type ("Acceptor" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2448 2459])
                            ("" variable (:type ("poAcceptor" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2460 2471]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2324 2622])
                    ("MakeProposer" function
                       (:arguments 
                          ( ("poConfig" variable
                               (:pointer 1
                                :type ("Config" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2642 2660])
                            ("poCommunicate" variable
                               (:pointer 1
                                :type ("Communicate" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2661 2689])
                            ("poInstance" variable
                               (:pointer 1
                                :type ("Instance" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2690 2712])
                            ("poLearner" variable
                               (:pointer 1
                                :type ("Learner" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2713 2733])
                            ("poIOLoop" variable
                               (:pointer 1
                                :type ("IOLoop" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2734 2752])
                            ("" variable
                               (:pointer 1
                                :type ("Proposer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2753 2764])
                            ("" variable (:type ("poProposer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2765 2776]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2624 2930]))                  
                :type "namespace")
                nil [869 2933]))          
      :file "make_class.cpp"
      :pointmax 2938
      :fsize 2937
      :lastmodtime '(23072 47985 0 0)
      :unmatched-syntax '((punctuation 2763 . 2764) (punctuation 2458 . 2459) (punctuation 2138 . 2139) (punctuation 1845 . 1846) (punctuation 1084 . 1085) (punctuation 850 . 851) (USING 843 . 848) (punctuation 830 . 831) (USING 823 . 828)))
    (semanticdb-table "semanticdb-table"
      :file "make_class.h"
      :fsize 1553
      :lastmodtime '(23072 47985 0 0))
    (semanticdb-table "semanticdb-table"
      :file "mock_class.h"
      :fsize 4467
      :lastmodtime '(23072 47985 0 0)))
  :file "!Volumes!Transcend!phxpaxos!src!ut!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
