;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode lisp-mode
      :tags 
        '( ("in-package" code nil nil [491 510])
            ("*emit-assembly-code-not-vops-p*" variable nil nil [577 621])
            ("*entry-points*" variable nil nil [679 706])
            ("reg-spec" type
               (:members ("kind" "name" "temp" "scs" "offset")
                :type "struct")
                nil [2506 2690])
            ("print-object" function
               (:parent "reg-spec"
                :arguments ("spec" "stream"))
                nil [2691 2994])
            ("reg-spec-sc" function (:arguments ("spec")) nil [2996 3114])
            ("parse-reg-spec" function (:arguments ("kind" "name" "sc" "offset")) nil [3116 3363])
            ("expand-one-export-spec" function (:arguments ("export")) nil [3365 3910])
            ("expand-export-option" function (:arguments ("exports")) nil [3912 4053])
            ("expand-align-option" function (:arguments ("align")) nil [4055 4136])
            ("emit-assemble" function (:arguments ("name" "options" "regs" "code")) nil [4138 5148])
            ("arg-or-res-spec" function (:arguments ("reg")) nil [5150 5404])
            ("emit-assemble-vop" function (:arguments ("name" "options" "vars")) nil [5406 8970]))          
      :file "assemfile.lisp"
      :pointmax 8971
      :fsize 8970
      :lastmodtime '(22988 56463 0 0)
      :unmatched-syntax '((semantic-list 952 . 2504))))
  :file "!Volumes!Transcend!sbcl!src!assembly!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
