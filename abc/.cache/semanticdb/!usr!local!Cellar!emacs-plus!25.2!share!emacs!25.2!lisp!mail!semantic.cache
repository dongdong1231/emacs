;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [894 907])
            ("defalias" code nil nil [930 1015])
            ("uudecode" customgroup (:user-visible-flag t) nil [1018 1103])
            ("uudecode-decoder-program" variable (:default-value "uudecode") nil [1105 1366])
            ("uudecode-decoder-switches" variable nil nil [1368 1522])
            ("uudecode-use-external" variable (:default-value (executable-find uudecode-decoder-program)) nil [1524 1691])
            ("uudecode-alphabet" variable
               (:constant-flag t
                :default-value " -`")
                nil [1693 1733])
            ("uudecode-begin-line" variable
               (:constant-flag t
                :default-value "^begin[ 	]+[0-7][0-7][0-7][ 	]+\\(.*\\)$")
                nil [1735 1810])
            ("uudecode-end-line" variable
               (:constant-flag t
                :default-value "^end[ 	]*$")
                nil [1811 1853])
            ("uudecode-body-line" variable
               (:constant-flag t
                :default-value (let ((i 61) (str "^M")) (while (> (setq i (1- i)) 0) (setq str (concat str "[^a-z]"))) (concat str ".?$")))
                nil [1855 2008])
            ("uudecode-temporary-file-directory" variable (:default-value (cond ((fboundp (quote temp-directory)) (temp-directory)) ((boundp (quote temporary-file-directory)) temporary-file-directory) ("/tmp"))) nil [2010 2179])
            ("uudecode-decode-region-external" function
               (:user-visible-flag t
                :arguments ("start" "end" "file-name"))
                nil [2196 4051])
            ("defalias" code nil nil [4073 4418])
            ("uudecode-decode-region-internal" function
               (:user-visible-flag t
                :arguments ("start" "end" "file-name"))
                nil [4436 7058])
            ("uudecode-decode-region" function (:arguments ("start" "end" "file-name")) nil [7075 7382])
            ("uudecode" package nil nil [7384 7403]))          
      :file "uudecode.el.gz"
      :pointmax 7431
      :fsize 2505
      :lastmodtime '(22676 23208 0 0)
      :unmatched-syntax '((close-paren 4418 . 4419) (symbol 4054 . 4070) (open-paren 4053 . 4054) (close-paren 1015 . 1016) (symbol 911 . 927) (open-paren 910 . 911) (close-paren 907 . 908) (symbol 876 . 893) (open-paren 875 . 876)))
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("gnus-original-article-buffer" variable nil nil [4678 4715])
            ("mail-reply-buffer" variable nil nil [4716 4742])
            ("sendmail" include nil nil [4744 4763])
            ("uce" customgroup (:user-visible-flag t) nil [4907 5011])
            ("uce-mail-reader" variable (:default-value (quote rmail)) nil [5013 5211])
            ("uce-setup-hook" variable nil nil [5213 5387])
            ("uce-message-text" variable (:default-value "Recently, I have received an Unsolicited Commercial E-mail from you.
I do not like UCE's and I would like to inform you that sending
unsolicited messages to someone while he or she may have to pay for
reading your message may be illegal.  Anyway, it is highly annoying
and not welcome by anyone.  It is rude, after all.

If you think that this is a good way to advertise your products or
services you are mistaken.  Spamming will only make people hate you, not
buy from you.

If you have any list of people you send unsolicited commercial emails to,
REMOVE me from such list immediately.  I suggest that you make this list
just empty.

	----------------------------------------------------

If you are not an administrator of any site and still have received
this message then your email address is being abused by some spammer.
They fake your address in From: or Reply-To: header.  In this case,
you might want to show this message to your system administrator, and
ask him/her to investigate this matter.

Note to the postmaster(s): I append the text of UCE in question to
this message; I would like to hear from you about action(s) taken.
This message has been sent to postmasters at the host that is
mentioned as original sender's host (I do realize that it may be
faked, but I think that if your domain name is being abused this way
you might want to learn about it, and take actions) and to the
postmaster whose host was used as mail relay for this message.  If
message was sent not by your user, could you please compare time when
this message was sent (use time in Received: field of the envelope
rather than Date: field) with your sendmail logs and see what host was
using your sendmail at this moment of time.

Thank you.") nil [5389 7619])
            ("uce-uce-separator" variable (:default-value "----- original unsolicited commercial email follows -----") nil [7621 7842])
            ("uce-signature" variable (:default-value mail-signature) nil [7844 8167])
            ("uce-default-headers" variable (:default-value "Errors-To: nobody@localhost
Precedence: bulk
") nil [8169 8460])
            ("uce-subject-line" variable (:default-value "Spam alert: unsolicited commercial e-mail") nil [8462 8633])
            ("rmail-buffer" variable nil nil [8661 8682])
            ("declare-function" code nil nil [8683 8732])
            ("declare-function" code nil nil [8733 8798])
            ("declare-function" code nil nil [8799 8861])
            ("declare-function" code nil nil [8862 8924])
            ("uce-reply-to-uce" function
               (:user-visible-flag t
                :arguments ("ignored"))
                nil [8941 14724])
            ("uce-insert-ranting" function
               (:user-visible-flag t
                :arguments ("ignored"))
                nil [14726 14883])
            ("uce" package nil nil [14885 14899]))          
      :file "uce.el.gz"
      :pointmax 14922
      :fsize 5600
      :lastmodtime '(22676 23208 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("batch-unrmail" function nil nil [893 1579])
            ("declare-function" code nil nil [1581 1630])
            ("rmime-magic-string" variable nil nil [1631 1658])
            ("unrmail-mbox-format" variable (:default-value (quote mboxrd)) nil [1691 2398])
            ("unrmail" function
               (:user-visible-flag t
                :arguments ("file" "to-file"))
                nil [2415 9428])
            ("unrmail" package nil nil [9430 9448]))          
      :file "unrmail.el.gz"
      :pointmax 9475
      :fsize 3498
      :lastmodtime '(22676 23208 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!Cellar!emacs-plus!25.2!share!emacs!25.2!lisp!mail!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
