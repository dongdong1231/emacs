;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("paragraphs" customgroup (:user-visible-flag t) nil [1006 1085])
            ("put" code nil nil [1087 1130])
            ("define-minor-mode" code nil nil [1131 3125])
            ("paragraph-start" variable (:default-value "\\|[ 	]*$") nil [3127 3927])
            ("put" code nil nil [3928 3980])
            ("paragraph-separate" variable (:default-value "[ 	]*$") nil [4315 4785])
            ("put" code nil nil [4786 4841])
            ("sentence-end-double-space" variable (:default-value t) nil [4843 5273])
            ("put" code nil nil [5274 5337])
            ("sentence-end-without-period" variable nil nil [5339 5757])
            ("put" code nil nil [5758 5823])
            ("sentence-end-without-space" variable (:default-value "。．？！") nil [5825 6183])
            ("put" code nil nil [6184 6247])
            ("sentence-end" variable nil nil [6249 6681])
            ("put" code nil nil [6682 6740])
            ("sentence-end-base" variable (:default-value "[.?!…‽][]\"'”’)}]*") nil [6742 6927])
            ("put" code nil nil [6928 6982])
            ("sentence-end" function nil nil [6984 8001])
            ("page-delimiter" variable (:default-value "^") nil [8003 8133])
            ("put" code nil nil [8134 8185])
            ("paragraph-ignore-fill-prefix" variable nil nil [8187 8420])
            ("put" code nil nil [8421 8487])
            ("forward-paragraph" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [8489 13712])
            ("backward-paragraph" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [13714 14278])
            ("mark-paragraph" function
               (:user-visible-flag t
                :arguments ("arg" "allow-extend"))
                nil [14280 15307])
            ("kill-paragraph" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [15309 15572])
            ("backward-kill-paragraph" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [15574 15842])
            ("transpose-paragraphs" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [15844 16315])
            ("start-of-paragraph-text" function nil nil [16317 16839])
            ("end-of-paragraph-text" function nil nil [16841 17100])
            ("forward-sentence" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [17102 18518])
            ("repunctuate-sentences" function (:user-visible-flag t) nil [18520 18769])
            ("backward-sentence" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [18772 19000])
            ("kill-sentence" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [19002 19238])
            ("backward-kill-sentence" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [19240 19494])
            ("mark-end-of-sentence" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [19496 19873])
            ("transpose-sentences" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [19875 20338]))          
      :file "paragraphs.el.gz"
      :pointmax 20368
      :fsize 6064
      :lastmodtime '(22676 23208 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("underline-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [1158 1630])
            ("ununderline-region" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [1647 2067])
            ("underline" package nil nil [2069 2089]))          
      :file "underline.el.gz"
      :pointmax 2118
      :fsize 979
      :lastmodtime '(22676 23208 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("fill" customgroup (:user-visible-flag t) nil [991 1102])
            ("fill-individual-varying-indent" variable nil nil [1104 1515])
            ("colon-double-space" variable nil nil [1517 1644])
            ("put" code nil nil [1645 1701])
            ("fill-paragraph-function" variable nil nil [1703 2113])
            ("fill-paragraph-handle-comment" variable (:default-value t) nil [2115 2230])
            ("enable-kinsoku" variable (:default-value t) nil [2232 2545])
            ("set-fill-prefix" function (:user-visible-flag t) nil [2547 3134])
            ("adaptive-fill-mode" variable (:default-value t) nil [3136 3269])
            ("adaptive-fill-regexp" variable (:default-value (purecopy "[ 	]*\\([-–!|#%;>*·•‣⁃◦]+[ 	]*\\)*")) nil [3271 3991])
            ("adaptive-fill-first-line-regexp" variable (:default-value (purecopy "\\`[ 	]*\\'")) nil [3993 4536])
            ("adaptive-fill-function" variable nil nil [4538 4767])
            ("fill-indent-according-to-mode" variable nil nil [4769 4923])
            ("current-fill-column" function nil nil [4925 5961])
            ("canonically-space-region" function
               (:user-visible-flag t
                :arguments ("beg" "end"))
                nil [5963 8214])
            ("fill-common-string-prefix" function (:arguments ("s1" "s2")) nil [8216 8493])
            ("fill-match-adaptive-prefix" function nil nil [8495 8881])
            ("fill-context-prefix" function (:arguments ("from" "to" "first-line-regexp")) nil [8883 12200])
            ("fill-single-word-nobreak-p" function nil nil [12202 12729])
            ("fill-french-nobreak-p" function nil nil [12731 13428])
            ("fill-single-char-nobreak-p" function nil nil [13430 13841])
            ("fill-nobreak-predicate" variable nil nil [13843 14224])
            ("fill-nobreak-invisible" variable nil nil [14226 14371])
            ("fill-nobreak-p" function nil nil [14373 15771])
            ("fill-find-break-point-function-table" variable (:default-value (make-char-table nil)) nil [15773 15905])
            ("fill-nospace-between-words-table" variable (:default-value (make-char-table nil)) nil [15907 16035])
            ("progn" code nil nil [16037 16720])
            ("fill-find-break-point" function (:arguments ("limit")) nil [16722 17409])
            ("fill-delete-prefix" function (:arguments ("from" "to" "prefix")) nil [17411 18332])
            ("add-to-list" code nil nil [18602 18666])
            ("fill-delete-newlines" function (:arguments ("from" "to" "justify" "nosqueeze" "squeeze-after")) nil [18668 20981])
            ("fill-move-to-break-point" function (:arguments ("linebeg")) nil [20983 23348])
            ("fill-text-properties-at" function (:arguments ("pos")) nil [23419 23665])
            ("fill-newline" function nil nil [23667 24983])
            ("fill-indent-to-left-margin" function nil nil [24985 25210])
            ("fill-region-as-paragraph" function
               (:user-visible-flag t
                :arguments ("from" "to" "justify" "nosqueeze" "squeeze-after"))
                nil [25212 30383])
            ("skip-line-prefix" function (:arguments ("prefix")) nil [30385 30712])
            ("fill-minibuffer-function" function (:arguments ("arg")) nil [30714 30918])
            ("fill-forward-paragraph-function" variable (:default-value (quote forward-paragraph)) nil [30920 31210])
            ("fill-forward-paragraph" function (:arguments ("arg")) nil [31212 31296])
            ("fill-paragraph" function
               (:user-visible-flag t
                :arguments ("justify" "region"))
                nil [31298 35088])
            ("declare-function" code nil nil [35090 35170])
            ("declare-function" code nil nil [35171 35244])
            ("fill-comment-paragraph" function (:arguments ("justify")) nil [35247 40674])
            ("fill-region" function
               (:user-visible-flag t
                :arguments ("from" "to" "justify" "nosqueeze" "to-eop"))
                nil [40676 42852])
            ("default-justification" variable (:default-value (quote left)) nil [42856 43287])
            ("make-variable-buffer-local" code nil nil [43288 43339])
            ("current-justification" function nil nil [43341 43890])
            ("set-justification" function
               (:user-visible-flag t
                :arguments ("begin" "end" "style" "whole-par"))
                nil [43892 45667])
            ("set-justification-none" function
               (:user-visible-flag t
                :arguments ("b" "e"))
                nil [45669 45977])
            ("set-justification-left" function
               (:user-visible-flag t
                :arguments ("b" "e"))
                nil [45979 46422])
            ("set-justification-right" function
               (:user-visible-flag t
                :arguments ("b" "e"))
                nil [46424 46795])
            ("set-justification-full" function
               (:user-visible-flag t
                :arguments ("b" "e"))
                nil [46797 47170])
            ("set-justification-center" function
               (:user-visible-flag t
                :arguments ("b" "e"))
                nil [47172 47468])
            ("justify-current-line" function
               (:user-visible-flag t
                :arguments ("how" "eop" "nosqueeze"))
                nil [48283 53093])
            ("unjustify-current-line" function nil nil [53095 54129])
            ("unjustify-region" function (:arguments ("begin" "end")) nil [54131 54726])
            ("fill-nonuniform-paragraphs" function
               (:user-visible-flag t
                :arguments ("min" "max" "justifyp" "citation-regexp"))
                nil [54730 55751])
            ("fill-individual-paragraphs" function
               (:user-visible-flag t
                :arguments ("min" "max" "justify" "citation-regexp"))
                nil [55753 59821])
            ("fill-individual-paragraphs-prefix" function (:arguments ("citation-regexp")) nil [59823 61212])
            ("fill-individual-paragraphs-citation" function (:arguments ("string" "citation-regexp")) nil [61214 61396]))          
      :file "fill.el.gz"
      :pointmax 61420
      :fsize 17306
      :lastmodtime '(22676 23208 0 0)
      :unmatched-syntax nil))
  :file "!usr!local!Cellar!emacs-plus!25.2!share!emacs!25.2!lisp!textmodes!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
